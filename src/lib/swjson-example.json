

{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Retail.WebApi"
  },
  "host": "retail-tst.payment.ru",
  "basePath": "/api",
  "schemes": ["https"],
  "paths": {
    "/absAccounts/linked": {
      "get": {
        "tags": ["AbsAccounts"],
        "summary": "Возвращает, есть ли связь клиента с Новой Афиной",
        "operationId": "AbsAccounts_IsClientLinked",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/absAccounts/exists": {
      "get": {
        "tags": ["AbsAccounts"],
        "summary": "Возвращает, есть ли у клиента доступные для отображения счета",
        "operationId": "AbsAccounts_IsAbsAccountsExists",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/absAccounts": {
      "get": {
        "tags": ["AbsAccounts"],
        "summary": "Возвращает информацию по счетам до востребования",
        "operationId": "AbsAccounts_Get",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "activeOnly",
            "in": "query",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/AbsAccount" }
            }
          }
        }
      }
    },
    "/absAccounts/{absAccountId}": {
      "get": {
        "tags": ["AbsAccounts"],
        "summary": "Возвращает информацию по счету",
        "operationId": "AbsAccounts_GetAbsAccount",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "absAccountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/AbsAccount" }
          }
        }
      }
    },
    "/absAccounts/{absAccountId}/clientlabel": {
      "put": {
        "tags": ["AbsAccounts"],
        "summary": "Обновление клиентского наименования",
        "operationId": "AbsAccounts_SetClientLabel",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "absAccountId",
            "in": "path",
            "description": "Идентификатор счета",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientLabel",
            "in": "body",
            "description": "Клиентское наименование",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/absAccounts/{absAccountId}/statement": {
      "get": {
        "tags": ["AbsAccounts"],
        "summary": "Возвращает выписку по счету АБС",
        "description": "При вызове генерируется событие AccountStatementReceiveEventArgs",
        "operationId": "AbsAccounts_GetAbsAccountStatement",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "absAccountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filterParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filterParams.sumFrom",
            "in": "query",
            "description": "Сумма с",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "filterParams.sumTo",
            "in": "query",
            "description": "Сумма по",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "filterParams.processedOnly",
            "in": "query",
            "description": "Только обработанные",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterParams.income",
            "in": "query",
            "description": "Приходы",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterParams.outcome",
            "in": "query",
            "description": "Расходы",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterParams.searchString",
            "in": "query",
            "description": "Строка поиска",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterParams.highlightTagName",
            "in": "query",
            "description": "Имя тега для подсветки",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterParams.sortDirection",
            "in": "query",
            "description": "Направление сортировки",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2]
          },
          {
            "name": "pageParams.pageSize",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageParams.pageNumber",
            "in": "query",
            "description": "Номер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/AbsAccountStatement" }
          }
        }
      }
    },
    "/absAccounts/{absAccountId}/statement/report/downloadable": {
      "get": {
        "tags": ["AbsAccounts"],
        "summary": "Получение выписки по счету в виде отчета",
        "operationId": "AbsAccounts_GetAbsAccountStatementReport",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "absAccountId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "exportFormat",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4, 5]
          },
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/absAccounts/{absAccountId}/statement/report/printable": {
      "get": {
        "tags": ["AbsAccounts"],
        "summary": "Получение выписки по счету в виде отчета для печати",
        "operationId": "AbsAccounts_GetAbsAccountStatementReportToPrint",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "absAccountId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/absAccounts/{absAccountId}/sendStatementByEmail": {
      "post": {
        "tags": ["AbsAccounts"],
        "summary": "Отправляет выписку по счету на e-mail",
        "operationId": "AbsAccounts_SendAbsAccountStatementByEmail",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "absAccountId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "sendParams",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/SendStatementByEmailParams" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/absAccounts/{absAccountId}/schedule": {
      "get": {
        "tags": ["AbsAccounts"],
        "summary": "Возвращает план погашений по кредиту АБС",
        "operationId": "AbsAccounts_GetLoanSchedule",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "absAccountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/AbsLoanScheduleItem" }
            }
          }
        }
      }
    },
    "/absAccounts/{absAccountId}/sendRequisitesByEmail": {
      "post": {
        "tags": ["AbsAccounts"],
        "summary": "Отправляет реквизиты счета на e-mail",
        "operationId": "AbsAccounts_SendRequisitesByEmail",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "absAccountId",
            "in": "path",
            "description": "Идентификатор счета",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/absAccounts/{absAccountId}/requisites/report/downloadable": {
      "get": {
        "tags": ["AbsAccounts"],
        "summary": "Загружает отчет по реквизитам счета",
        "operationId": "AbsAccounts_GetRequisitesReport",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "absAccountId",
            "in": "path",
            "description": "account identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/absAccounts/{absAccountId}/requisites/report/printable": {
      "get": {
        "tags": ["AbsAccounts"],
        "summary": "Выдает на печать отчет по реквизитам счета",
        "operationId": "AbsAccounts_GetRequisitesReportToPrint",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "absAccountId",
            "in": "path",
            "description": "account identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/accounts": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Возвращает бессрочные счета клиента",
        "operationId": "Accounts_Get",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "activeOnly",
            "in": "query",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/TermlessAccount" }
            }
          }
        }
      }
    },
    "/accounts/liteData": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Возвращает бессрочные счета клиента. Упрощенная версия метода Get",
        "operationId": "Accounts_GetLiteData",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "activeOnly",
            "in": "query",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/LiteTermlessAccount" }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/enableSavingRuleRequests": {
      "post": {
        "tags": ["Accounts"],
        "summary": "Запускает операцию на подключение счета к накопительному сервису",
        "operationId": "Accounts_EnableSavingRule",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/accounts/{accountId}": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Возвращает информацию по счету",
        "operationId": "Accounts_GetAccount",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TermlessAccount" }
          }
        }
      }
    },
    "/accounts/{accountId}/statement": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Формирование выписки по счету",
        "description": "При вызове генерируется событие для антифрода AccountStatementReceiveEventArgs",
        "operationId": "Accounts_GetAccountStatement",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filterParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filterParams.sumFrom",
            "in": "query",
            "description": "Сумма с",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "filterParams.sumTo",
            "in": "query",
            "description": "Сумма по",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "filterParams.processedOnly",
            "in": "query",
            "description": "Только обработанные",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterParams.income",
            "in": "query",
            "description": "Приходы",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterParams.outcome",
            "in": "query",
            "description": "Расходы",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterParams.searchString",
            "in": "query",
            "description": "Строка поиска",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterParams.highlightTagName",
            "in": "query",
            "description": "Имя тега для подсветки",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterParams.sortDirection",
            "in": "query",
            "description": "Направление сортировки",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2]
          },
          {
            "name": "pageParams.pageSize",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageParams.pageNumber",
            "in": "query",
            "description": "Номер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/AccountStatement" }
          }
        }
      }
    },
    "/accounts/{accountId}/statement/report/downloadable": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Получение выписки по счету в виде отчета",
        "operationId": "Accounts_GetAccountStatementReport",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "exportFormat",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4, 5]
          },
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/accounts/{accountId}/statement/report/printable": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Получение выписки по счету в виде отчета для печати",
        "operationId": "Accounts_GetAccountStatementReportToPrint",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/accounts/{accountId}/sendStatementByEmail": {
      "post": {
        "tags": ["Accounts"],
        "summary": "Отправляет выписку по счету на e-mail",
        "description": "При вызове генерируется событие AccountStatementReceiveEventArgs для антифрода RSA",
        "operationId": "Accounts_SendAccountStatementByEmail",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sendParams",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/SendStatementByEmailParams" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/accounts/{accountId}/nonLiableCashBalance": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Возвращает необлагаемую комиссией сумму счета",
        "operationId": "Accounts_GetNonLiableCashBalance",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Идентификатор счета",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "double", "type": "number" }
          }
        }
      }
    },
    "/accounts/{accountId}/sendRequisitesByEmail": {
      "post": {
        "tags": ["Accounts"],
        "summary": "Отправляет реквизиты счета на e-mail",
        "operationId": "Accounts_SendRequisitesByEmail",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "email",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/accounts/{accountId}/requisites/report/downloadable": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Загружает отчет по реквизитам счета",
        "operationId": "Accounts_GetRequisitesReport",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "account identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/accounts/{accountId}/requisites/report/printable": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Выдает на печать отчет по реквизитам счета",
        "operationId": "Accounts_GetRequisitesReportToPrint",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "account identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/accounts/{accountId}/balanceChanges": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Возвращает историю накоплений за период",
        "operationId": "Accounts_GetBalanceChanges",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "account identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/AccountBalance" }
            }
          }
        }
      }
    },
    "/accounts/openTermlessRequests": {
      "post": {
        "tags": ["Accounts"],
        "summary": "Запуск операции открытия бессрочного счета из продуктового каталога",
        "operationId": "Accounts_OpenTermlessAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "brandId",
            "in": "body",
            "required": true,
            "schema": { "format": "int32", "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        },
        "deprecated": true
      }
    },
    "/accounts/openTermlessRequestsCMS": {
      "post": {
        "tags": ["Accounts"],
        "summary": "Запуск операции открытия бессрочного счета из продуктового каталога",
        "operationId": "Accounts_OpenTermlessAccountCMS",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/MarketplaceProductOrderParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/accounts/{accountId}/accountClosure": {
      "post": {
        "tags": ["Accounts"],
        "summary": "Запуск операции закрытие бессрочного счета",
        "operationId": "Accounts_CloseTermlessAccount",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/accounts/{accountId}/savingService": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Возвращает информацию о накоплениях по счету",
        "operationId": "Accounts_GetSavingService",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "account identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SavingService" }
          }
        }
      }
    },
    "/accounts/{contractId}/clientLabel": {
      "put": {
        "tags": ["Accounts"],
        "summary": "Обновление клиентского наименования",
        "operationId": "Accounts_SetClientLabel",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "clientLabel",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/atm4geoservice/partnerATMBanks": {
      "get": {
        "tags": ["ATM"],
        "summary": "Возвращает список идентификаторов(идентификаторы гео-сервиса) банков партнеров по банкоматам",
        "operationId": "ATM_GetPartnerBanksIDs",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "format": "int32", "type": "integer" }
            }
          }
        }
      }
    },
    "/authentication/beforeLogin": {
      "get": {
        "tags": ["Authentication"],
        "summary": "возвращает сессионную соль используемую для шиврования пароля",
        "operationId": "Authentication_GetSessionSalt",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "login",
            "in": "query",
            "description": "идентификатор пользователя",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceId",
            "in": "query",
            "description": "идентификатор утсройства",
            "required": true,
            "type": "string"
          },
          {
            "name": "loginType",
            "in": "query",
            "description": "допустимые значения: login или phone",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SessionSaltResult" }
          }
        }
      }
    },
    "/authentication/loginResult": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Возвращает первичные данные о входе в систему",
        "operationId": "Authentication_GetLoginResult",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "avatarHash",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoginResult" }
          }
        }
      }
    },
    "/authentication/secondStepAuthRequest": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Запрос 2-фактора аутентификации (смс отправляется автоматически)",
        "operationId": "Authentication_GetSecondStepAuthRequest",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/AuthRequest" }
          }
        }
      }
    },
    "/authentication/secondStepAuthRequestEvenIfDisabled": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Запрос 2-фактора аутентификации, даже если пользователь отключил (смс отправляется автоматически)",
        "operationId": "Authentication_GetSecondStepAuthRequestEvenIfDisabled",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/AuthRequest" }
          }
        }
      }
    },
    "/authentication/secondStepAuthSms": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Запрос повторной отправки смс-кода для аутентификации при входе",
        "operationId": "Authentication_GetSecondStepAuthSms",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SmsData" }
          }
        }
      }
    },
    "/authentication/secondStepAuthPush": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Запрос повторной отправки push-кода для аутентификации при входе",
        "operationId": "Authentication_GetSecondStepAuthPush",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/PushData" }
          }
        }
      }
    },
    "/authentication/doSecondStepAuth": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Проверка 2-го фактора аутентификации",
        "operationId": "Authentication_DoSecondStepAuth",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "authResponse",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/AuthResponse" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/authentication/doSecondStepAuthEvenIfDisabled": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Проверка 2-го фактора аутентификации, даже если пользователь отключил",
        "operationId": "Authentication_DoSecondStepAuthEvenIfDisabled",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "authResponse",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/AuthResponse" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/authentication/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Завершение сеанса",
        "operationId": "Authentication_Logout",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/authentication/startPasswordRecovery": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Запуск операции восстановления доступа",
        "operationId": "Authentication_StartPasswordRecovery",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "passwordRecoveryParams",
            "in": "body",
            "description": "Параметры для восстановления доступа",
            "required": true,
            "schema": { "$ref": "#/definitions/PasswordRecoveryParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/PasswordRecoveryConfirmResult" }
          }
        }
      }
    },
    "/authentication/passwordRecovery/{token}/finalize": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Завершение операции восстановления доступа",
        "operationId": "Authentication_FinalizePasswordRecovery",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "passwordRecoveryFinalizeParams",
            "in": "body",
            "description": "Параметры для завершения операции",
            "required": true,
            "schema": { "$ref": "#/definitions/PasswordRecoveryFinalizeParams" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/authentication/passwordRecovery/{token}/authSms": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Отправка смс-кода на основной сервисный номер телефона клиента для авторизации проведения операции смс-кодом",
        "operationId": "Authentication_GetPasswordRecoveryAuthSms",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Токен",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SmsData" }
          }
        }
      }
    },
    "/authentication/passwordRecovery/{token}/authPush": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Отправка push-кода на основной сервисный номер телефона клиента для авторизации проведения операции push-кодом",
        "operationId": "Authentication_GetPasswordRecoveryAuthPush",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Токен",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SmsData" }
          }
        }
      }
    },
    "/authentication/registration": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Отправка SMS на номер телефона клиента для авторизации проведения регистрации",
        "operationId": "Authentication_StartRegistration",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "registrationParams",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/RegistrationParams" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/authentication/registration/confirmation": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Подтверждение проведения регистрации",
        "operationId": "Authentication_ConfirmRegistration",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "registrationConfirmParams",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/RegistrationConfirmParams" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/authentication/isFirstTimeVisitor": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Возвращает признак, подключался ли клиент ранее по данному каналу доступа",
        "operationId": "Authentication_IsFirstTimeVisitor",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/authentication/sessionsHistory": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Возвращает историю входов клиента",
        "operationId": "Authentication_GetSessionsHistory",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "pageParams.pageSize",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageParams.pageNumber",
            "in": "query",
            "description": "Номер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SessionsHistory" }
          }
        }
      }
    },
    "/authentication/clientAuthRequest/{phoneNumber}": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Запрос 1-фактора аутентификации (смс отправляется автоматически)",
        "operationId": "Authentication_GetClientAuthRequest",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TicketAuthRequest" }
          }
        }
      }
    },
    "/authentication/markeplaceClientAuthRequest/{phoneNumber}": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Авторизация Marketplace\r\n\tЗапрос 1-фактора аутентификации (смс отправляется автоматически)",
        "operationId": "Authentication_GetMarketplaceClientAuthRequest",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TicketAuthRequest" }
          }
        }
      }
    },
    "/authentication/marketplaceClientAuthRequest/{ticket}/forceSms": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Повторный запрос 1-фактора аутентификации (смс отправляется автоматически)",
        "operationId": "Authentication_ResendMarketplaceClientAuthRequestConfirmationCode",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          { "name": "ticket", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SmsData" }
          }
        }
      }
    },
    "/authentication/markeplaceClientAuthRequest/{ticket}/canOperationalRemoteAccessBeProvided": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Возвращает признак, что клиент имеет возможность работать с операционным доступом по каналам дистанционного обслуживания",
        "operationId": "Authentication_CanOperationalRemoteAccessBeProvided",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          { "name": "ticket", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/authentication/clientAuthRequest/{ticket}/forceSms": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Повторный запрос 1-фактора аутентификации (смс отправляется автоматически)",
        "operationId": "Authentication_ResendClientAuthRequestConfirmationCode",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          { "name": "ticket", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SmsData" }
          }
        }
      }
    },
    "/authentication/emailConfirmation/{confirmationString}": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Подтверждение электронной почты",
        "operationId": "Authentication_EmailConfirmation",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "confirmationString",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "enum": [0, 1, 2, 3],
              "type": "integer"
            }
          }
        }
      }
    },
    "/authentication/extendedClientAuthRequest": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Расширенная авторизация Marketplace\r\n\tЗапрос 1-фактора аутентификации (смс отправляется автоматически)",
        "operationId": "Authentication_ExtendedClientAuthRequest",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/ClientInitialData" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TicketAuthRequest" }
          }
        }
      }
    },
    "/authentication/is2FactorPassed": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Возвращает признак, что сессия полностью авторизована (пройден 2-й фактор)",
        "operationId": "Authentication_Is2FactorPassed",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/authentication/closeClientSessionsButThis": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Завершить все сеансы",
        "operationId": "Authentication_CloseClientSessionsButThis",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/authentication/createDeviceEvent": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Добавить событие на устройстве в лог",
        "operationId": "Authentication_CreateDeviceEvent",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeviceEventModel" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/authentication/isNewRecoveryEnabled": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Включено ли новое восстановление доступа для ИБ",
        "operationId": "Authentication_IsNewRecoveryEnabled",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/automaticPayments/IsSubscriptionEnabled": {
      "post": {
        "tags": ["AutomaticPayments"],
        "summary": "Определяет включены ли автоплатежи",
        "operationId": "AutomaticPayments_IsSubscriptionsEnabled",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/automaticPayments/payInvoice": {
      "post": {
        "tags": ["AutomaticPayments"],
        "summary": "Старт операции оплаты выставленного счета",
        "operationId": "AutomaticPayments_PayInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "invoiceData",
            "in": "body",
            "description": "InvoiceID - autoPayExternalID",
            "required": true,
            "schema": { "$ref": "#/definitions/InvoiceData" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/automaticPayments/deleteInvoice": {
      "post": {
        "tags": ["AutomaticPayments"],
        "summary": "Старт операции удаления выставленного счета",
        "operationId": "AutomaticPayments_DeleteInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "invoiceData",
            "in": "body",
            "description": "InvoiceID - autoPayExternalID",
            "required": true,
            "schema": { "$ref": "#/definitions/InvoiceData" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/automaticPayments/paidAnotherPlaceInvoice": {
      "post": {
        "tags": ["AutomaticPayments"],
        "summary": "Пометить оплаченым в другом месте",
        "operationId": "AutomaticPayments_PaidAnotherPlaceInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "invoiceId",
            "in": "body",
            "description": "AutoReplenishmentInvoiceId из списка Invoices",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/automaticPayments/Subscription": {
      "post": {
        "tags": ["AutomaticPayments"],
        "summary": "Старт операции редактирования автоподписки",
        "operationId": "AutomaticPayments_Subscription",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "subscriptionInfo",
            "in": "body",
            "description": "subscriptionID - externalSubscriptionID",
            "required": true,
            "schema": { "$ref": "#/definitions/SubscriptionData" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/automaticPayments/deleteSubscription": {
      "post": {
        "tags": ["AutomaticPayments"],
        "summary": "Старт операции удаления автоподписки",
        "operationId": "AutomaticPayments_DeleteSubscription",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "subscriptionInfo",
            "in": "body",
            "description": "subscriptionID - externalSubscriptionID",
            "required": true,
            "schema": { "$ref": "#/definitions/SubscriptionData" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/automaticPayments/{automaticPaymentId}/invoices": {
      "get": {
        "tags": ["AutomaticPayments"],
        "summary": "Возвращает список счетов на оплату по автоплатежам",
        "operationId": "AutomaticPayments_GetAutoReplenishmentInvoices",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "automaticPaymentId",
            "in": "path",
            "description": "Параметр AutoReplenishmentID из списка Subscriptions",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SubscriptionInvoices" }
          }
        }
      }
    },
    "/automaticPayments/Subscriptions": {
      "get": {
        "tags": ["AutomaticPayments"],
        "summary": "Возвращает список подписок клиента",
        "operationId": "AutomaticPayments_GetSubscriptions",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/AutomaticPayment" }
            }
          }
        }
      }
    },
    "/automaticPayments": {
      "get": {
        "tags": ["AutomaticPayments"],
        "summary": "Возвращает список автоплатежей клиента",
        "operationId": "AutomaticPayments_Get",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/AutomaticPayment" }
            }
          }
        }
      }
    },
    "/automaticPayments/{autoPaymentId}/ExtendedInfo": {
      "get": {
        "tags": ["AutomaticPayments"],
        "summary": "Возвращает информацию об автоплатеже",
        "operationId": "AutomaticPayments_Get",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "autoPaymentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/AutomaticPayment" }
          }
        }
      }
    },
    "/automaticPayments/AutoPaymentsList": {
      "get": {
        "tags": ["AutomaticPayments"],
        "summary": "Возвращает список автоплатежей клиента",
        "operationId": "AutomaticPayments_GetAutoPaymentsList",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "onlyActive",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/AutomaticPayment" }
            }
          }
        }
      }
    },
    "/automaticPayments/creationOperations": {
      "get": {
        "tags": ["AutomaticPayments"],
        "summary": "Доступные операции",
        "operationId": "AutomaticPayments_GetAvailableCreationOperations",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Operation" }
            }
          }
        }
      }
    },
    "/automaticPayments/{automaticPaymentId}/deleteRequests": {
      "post": {
        "tags": ["AutomaticPayments"],
        "summary": "Регистрация поручения на удаление автоплатежа",
        "operationId": "AutomaticPayments_DeleteAutomaticPayment",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "automaticPaymentId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/automaticPayments/{automaticPaymentId}/editRequests": {
      "post": {
        "tags": ["AutomaticPayments"],
        "summary": "Регистрация поручения на редактирование автоплатежа",
        "operationId": "AutomaticPayments_EditAutomaticPayment",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "automaticPaymentId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/automaticPayments/regularOperations": {
      "get": {
        "tags": ["AutomaticPayments"],
        "summary": "Список регулярных операций",
        "operationId": "AutomaticPayments_GetRegularOperations",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "operationTemplateId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "scheduleId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "allowedStates",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4, 8]
          },
          {
            "name": "activeOnly",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/RegularOperation" }
            }
          }
        }
      }
    },
    "/badges/getbadges": {
      "get": {
        "tags": ["Badges"],
        "summary": "Возвращает массив бейджей",
        "operationId": "Badges_GetBadges",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Badge" }
            }
          }
        }
      }
    },
    "/banks/RussianBanks": {
      "get": {
        "tags": ["Banks"],
        "summary": "Список российских банков",
        "operationId": "Banks_GetRussianBanks",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "pars.searchString",
            "in": "query",
            "description": "Строка поиска",
            "required": false,
            "type": "string"
          },
          {
            "name": "pars.numHits",
            "in": "query",
            "description": "Количество выводимых записей",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/RussianBank" }
            }
          }
        }
      }
    },
    "/banks/ForeignBanks": {
      "get": {
        "tags": ["Banks"],
        "summary": "Список зарубежных банков",
        "operationId": "Banks_GetForeignBanks",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "swiftCode",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ForeignBank" }
          }
        }
      }
    },
    "/banners/impersonal": {
      "get": {
        "tags": ["Banners"],
        "summary": "Возвращает общие банеры для заданного места размещения (контекст клиента не учитывается)",
        "description": "для тестирования используем: /banners/impersonal?placeHolderCode=ССК2",
        "operationId": "Banners_GetImpersonalBanners",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "placeHolderCode",
            "in": "query",
            "description": "Код места размещения",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Banner" }
            }
          }
        }
      }
    },
    "/banners/personal": {
      "get": {
        "tags": ["Banners"],
        "summary": "Возвращает персонифицированные банеры, метод может использоваться только после входа клиента",
        "operationId": "Banners_GetPersonalBanners",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "placeHolderCode",
            "in": "query",
            "description": "Код места размещения",
            "required": true,
            "type": "string"
          },
          {
            "name": "splitPersonalBanners",
            "in": "query",
            "description": "Настройка, которая определяет, будут ли показываться неперсональные баннеры вместе с персональными или нет.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Banner" }
            }
          }
        }
      }
    },
    "/banners/isApplePayEnabled": {
      "post": {
        "tags": ["Banners"],
        "summary": "Признак доступности ApplePay",
        "operationId": "Banners_IsApplePayEnabled",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/banners/stories": {
      "get": {
        "tags": ["Banners"],
        "summary": "Возвращает истории клиента (сервис персональных предложений)",
        "operationId": "Banners_GetStories",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PersonalOfferingStory" }
            }
          }
        }
      }
    },
    "/banners/newBanners": {
      "get": {
        "tags": ["Banners"],
        "summary": "Возвращает баннеры клиента без привязки к истории (сервис персональных предложений)",
        "operationId": "Banners_GetBanners",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "loanAggregatorDecisionType",
            "in": "query",
            "description": "Тип выбранного решения из кредитного аггрегатора.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4, 5, 6, 7, 8]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PersonalOfferingBanner" }
            }
          }
        }
      }
    },
    "/banners/storyBanners": {
      "get": {
        "tags": ["Banners"],
        "summary": "Возвращает баннеры клиента с привязкой к истории (сервис персональных предложений)",
        "operationId": "Banners_GetStoryBanners",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "storyId",
            "in": "query",
            "description": "Id Story в PersOffering db",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PersonalOfferingBanner" }
            }
          }
        }
      }
    },
    "/banners/saveState": {
      "post": {
        "tags": ["Banners"],
        "summary": "Сохраняет состояние контрола в баннере (сервис персональных предложений)",
        "operationId": "Banners_SaveState",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "saveStateDto",
            "in": "body",
            "description": "DTO для сохранения состояния контролла баннера",
            "required": true,
            "schema": { "$ref": "#/definitions/PersonalOfferingSaveStateDto" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/banners/popupBanner": {
      "get": {
        "tags": ["Banners"],
        "summary": "Возвращает popup-баннер клиента",
        "operationId": "Banners_GetPopupBanner",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/PersonalOfferingBanner" }
          }
        }
      }
    },
    "/banners/unauthorizedZoneBanners": {
      "get": {
        "tags": ["Banners"],
        "summary": "Возвращает коллекцию баннеров в неавторизованной зоне.",
        "operationId": "Banners_GetUnauthorizedZoneBanners",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "platformId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PersonalOfferingUnauthorizedZoneBanner"
              }
            }
          }
        }
      }
    },
    "/banners/ghostBanners": {
      "get": {
        "tags": ["Banners"],
        "summary": "Возвращает ghost-баннеры доступные клиенту.",
        "operationId": "Banners_GetGhostBanners",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/PersonalOfferingBanner" }
          }
        }
      }
    },
    "/banners/investments": {
      "get": {
        "tags": ["Banners"],
        "summary": "Возвращает коллекцию инвестиционных баннеров доступных клиенту",
        "operationId": "Banners_GetInvestitionBanner",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PersonalOfferingInvestitionBanner"
              }
            }
          }
        }
      }
    },
    "/banners/invitePage": {
      "get": {
        "tags": ["Banners"],
        "summary": "Возвращает страницу для приглашений",
        "operationId": "Banners_GetInvitePage",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "inviteType",
            "in": "query",
            "description": "Тип страницы",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/PersonalOfferingInvitePage" }
          }
        }
      }
    },
    "/boxproducts/catalog": {
      "get": {
        "tags": ["BoxProducts"],
        "summary": "Возвращает каталог доступных продуктов",
        "operationId": "BoxProducts_GetCatalog",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/WebBoxProduct" }
            }
          }
        }
      }
    },
    "/boxproducts/products/{productId}": {
      "get": {
        "tags": ["BoxProducts"],
        "summary": "Возвращает детальное описание продукта",
        "operationId": "BoxProducts_GetProductyById",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/WebBoxProduct" }
          }
        }
      }
    },
    "/boxproducts/operations/{code}": {
      "post": {
        "tags": ["BoxProducts"],
        "summary": "Запускает операцию по коду",
        "operationId": "BoxProducts_StartBoxOperation",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/boxproducts/contracts": {
      "get": {
        "tags": ["BoxProducts"],
        "summary": "Отображает список действующих договоров",
        "operationId": "BoxProducts_GetContracts",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/WebBoxContract" }
            }
          }
        }
      }
    },
    "/boxproducts/contract/{contractId}": {
      "get": {
        "tags": ["BoxProducts"],
        "summary": "Отображает инфорацию по купленному продукту",
        "operationId": "BoxProducts_GetContract",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "Идентификатор коробочного договора",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/WebBoxContract" }
          }
        }
      }
    },
    "/brokerage/exists": {
      "get": {
        "tags": ["Brokerage"],
        "summary": "Возвращает, есть ли у клиента какие-либо данные по брокерскому обслуживанию",
        "operationId": "Brokerage_IsExists",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/brokerage": {
      "get": {
        "tags": ["Brokerage"],
        "summary": "Возвращает брокерские контракты и заявки клиента",
        "operationId": "Brokerage_GetBrokerageData",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "activeOnly",
            "in": "query",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/BrokerageData" }
          }
        }
      }
    },
    "/brokerage/{contractId}": {
      "get": {
        "tags": ["Brokerage"],
        "summary": "Возвращает информацию по контракту",
        "operationId": "Brokerage_GetContract",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/BrokerageContract" }
          }
        }
      }
    },
    "/brokerage/applications/{applicationId}": {
      "get": {
        "tags": ["Brokerage"],
        "summary": "Возвращает информацию по заявке",
        "operationId": "Brokerage_GetApplication",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/BrokerageApplication" }
          }
        }
      }
    },
    "/brokerage/applications/create": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию создания заявки брокерского договора",
        "operationId": "Brokerage_RunCreateApplication",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/applications/{applicationId}/edit": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию редактирования заявки брокерского договора",
        "operationId": "Brokerage_RunEditApplication",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/createContract": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию создания договора брокерского обслуживания",
        "operationId": "Brokerage_RunBrokerageContractCreating",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/{contractId}/edit": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию изменения договора.",
        "operationId": "Brokerage_RunEdit",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "ID договора",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/{contractId}/close": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию закрытия договора",
        "operationId": "Brokerage_RunClose",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "&gt;ID договора",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/{contractId}/sellBOLight": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию продажи ЦБ\\добавление сделки в историю",
        "operationId": "Brokerage_RunSellBOLight",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "&gt;ID договора",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/{contractId}/BuyFederalBondBOLight": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию покупки ОФЗ-Н (2906) для для договора БО-ЛТ из вкладки все действия договора",
        "operationId": "Brokerage_RunBuyFederalBondBOLight",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "ID договора",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/{contractId}/closeBOLight": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию закрытие договора БО-ЛТ по инициативе клиента",
        "operationId": "Brokerage_RunCloseBOLight",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "ID договора",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/createAppOrContract": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию создания заявки брокерского договора",
        "operationId": "Brokerage_RunCreateApplicationOrContract",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/voiceRegistries/{registryId}/sign": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию подписи реестров голосовых сообщений",
        "operationId": "Brokerage_RunSignVoiceRegistry",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "Реестр",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/{contractId}/voiceRegistries": {
      "get": {
        "tags": ["Brokerage"],
        "summary": "Возвращает реестры на подпись",
        "operationId": "Brokerage_GetVoiceRegistries",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/VoiceRegistry" }
            }
          }
        }
      }
    },
    "/brokerage/voiceRegistries/{registryId}/downloadable": {
      "get": {
        "tags": ["Brokerage"],
        "summary": "Возвращает содержимое реестра",
        "operationId": "Brokerage_GetVoiceRegistryContent",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/brokerage/{contractId}/keys/registration": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию регистрация ключа Quik",
        "operationId": "Brokerage_RunQuikKeyRegistration",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "Операция",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/applications/{applicationId}/keys/registration": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию регистрация ключа Quik по заявке",
        "operationId": "Brokerage_RunQuikKeyRegistrationByApplication",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "Операция",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/{contractId}/webquik/obtain": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию выдача логина и пароля доступа WebQUIK",
        "operationId": "Brokerage_RunWebQuikKeyObtain",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "Операция",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/{contractId}/webquik/annul": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию аннулирования ключа WebQuik",
        "operationId": "Brokerage_RunWebQuikKeyAnnul",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "Операция",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/{contractId}/quikKeyXtraAction": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию дополнительных действия с ключом Quik",
        "operationId": "Brokerage_RunQuikKeyXtraAction",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "Операция",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/keys/{quikKeyId}/annul": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию аннулирования ключа Quik",
        "operationId": "Brokerage_RunQuikKeyAnnul",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "quikKeyId",
            "in": "path",
            "description": "Операция",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/keys/{quikKeyId}/lock": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию временной блокировки ключа",
        "operationId": "Brokerage_RunQuikKeyLockAction",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "quikKeyId",
            "in": "path",
            "description": "Идентификатор ключа",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/keys/{quikKeyId}/unlock": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию разблокировки ключа",
        "operationId": "Brokerage_RunQuikKeyUnlockAction",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "quikKeyId",
            "in": "path",
            "description": "Идентификатор ключа",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/securities": {
      "get": {
        "tags": ["Brokerage"],
        "summary": "Осуществляет поиск ценных бумаг по заданной подстроке.",
        "operationId": "Brokerage_SearchAllSecurities",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Строка поиска.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hitNum",
            "in": "query",
            "description": "Максимальное число возвращаемых совпадений.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Security" }
            }
          }
        }
      }
    },
    "/brokerage/securities/{securityId}": {
      "get": {
        "tags": ["Brokerage"],
        "summary": "Осуществляет поиск ценных бумаг по заданному ID.",
        "operationId": "Brokerage_GetSecurity",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "securityId",
            "in": "path",
            "description": "ID ценной бумаги.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Security" }
          }
        }
      }
    },
    "/brokerage/securities/federalbonds": {
      "get": {
        "tags": ["Brokerage"],
        "summary": "Возвращает количество ОФЗ-н у клиента",
        "operationId": "Brokerage_GetFederalBondsInfo",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/FederalBondCounter" }
          }
        }
      }
    },
    "/brokerage/issuers": {
      "get": {
        "tags": ["Brokerage"],
        "summary": "Осуществляет поиск эмитентов ценных бумаг по заданной подстроке.",
        "operationId": "Brokerage_SearchIssuers",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Строка поиска.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hitNum",
            "in": "query",
            "description": "Максимальное число возвращаемых совпадений.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Issuer" }
            }
          }
        }
      }
    },
    "/brokerage/issuers/{issuerId}": {
      "get": {
        "tags": ["Brokerage"],
        "summary": "Осуществляет поиск эмитентов по заданному ID.",
        "operationId": "Brokerage_GetIssuer",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "issuerId",
            "in": "path",
            "description": "ID эмитента.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Issuer" }
          }
        }
      }
    },
    "/brokerage/quikSecurities": {
      "get": {
        "tags": ["Brokerage"],
        "summary": "Осуществляет поиск ценных бумаг QUIK по заданной подстроке.",
        "operationId": "Brokerage_SearchQuikSecurities",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Строка поиска.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hitNum",
            "in": "query",
            "description": "Максимальное число возвращаемых совпадений.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/QuikSecurity" }
            }
          }
        }
      }
    },
    "/brokerage/quikSecurities/{securityId}": {
      "get": {
        "tags": ["Brokerage"],
        "summary": "Осуществляет поиск ценных бумаг QUIK по заданному ID.",
        "operationId": "Brokerage_GetQuikSecurity",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "securityId",
            "in": "path",
            "description": "ID ценной бумаги.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/QuikSecurity" }
          }
        }
      }
    },
    "/brokerage/{contractId}/replenish": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию пополнение брокерского счета",
        "operationId": "Brokerage_RunReplenishment",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "Операция",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/{contractId}/changeHighRiskLevel": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию изменения уровня риска по брокерскому договору",
        "operationId": "Brokerage_RunChangeHighRiskLevel",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "Операция",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/{contractId}/offerAcceptance": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию акцепта оферты.",
        "operationId": "Brokerage_RunOfferAcceptance",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "ID договора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/{contractId}/depoAccountReportRequest": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию запроса на выписку по счету депо.",
        "operationId": "Brokerage_RunDepoAccountReportRequest",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "ID договора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/{contractId}/currencyAccountOpening": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию открытия брокерского счета в иностранной валюте.",
        "operationId": "Brokerage_RunCurrencyAccountOpening",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "ID договора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/{contractId}/taxReportRequest": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию запроса налоговой справки.",
        "operationId": "Brokerage_RunTaxReportRequest",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "ID договора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/taxReports": {
      "get": {
        "tags": ["Brokerage"],
        "summary": "Загружает список налоговых справок.",
        "operationId": "Brokerage_GetTaxReports",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "begDate",
            "in": "query",
            "description": "Начальная дата временного интервала, за который необходимо искать справки (может быть null для поиска с начала времен).",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Конечная дата временного интервала, за который необходимо искать справки (может быть null для по текущий момент).",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "pageParams.pageSize",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageParams.pageNumber",
            "in": "query",
            "description": "Номер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TaxReportHistory" }
          }
        }
      }
    },
    "/brokerage/taxReports/{reportId}": {
      "get": {
        "tags": ["Brokerage"],
        "summary": "Загружает налоговую справку.",
        "operationId": "Brokerage_GetTaxReport",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "ID справки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/brokerage/{contractId}/moneyTransfer": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает неторговое поручение на перевод денежных средств.",
        "operationId": "Brokerage_RunMoneyTransfer",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "ID договора, по которому выполняется перевод.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/{contractId}/moneyOut": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает неторговое поручение на вывод денежных средств.",
        "operationId": "Brokerage_RunMoneyOut",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "ID договора, по которому выполняется вывод.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/bonds/callback": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Оставляет заявку на обратный звонок.",
        "operationId": "Brokerage_RequestCallback",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/brokerage/bonds/createContract": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает оформление договора БО для покупки облигаций.",
        "operationId": "Brokerage_CreateContractForBondsAcquisition",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/securities/forSale/{securityForSaleId}/buy": {
      "post": {
        "tags": ["Brokerage"],
        "summary": "Запускает операцию 2905 \"Покупка на БО-Лайт\".",
        "operationId": "Brokerage_RunBuyOnLight",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "securityForSaleId",
            "in": "path",
            "description": "ID бумаги на размещении, которую необходимо приобрести.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/brokerage/securities/forSale": {
      "get": {
        "tags": ["Brokerage"],
        "summary": "Возвращает список ценных бумаг на размещении.",
        "operationId": "Brokerage_GetSecuritiesForSale",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/SecurityForSale" }
            }
          }
        }
      }
    },
    "/brokerage/securities/forSale/{securityForSaleId}": {
      "get": {
        "tags": ["Brokerage"],
        "summary": "Возвращает ценную бумагу на размещении.",
        "operationId": "Brokerage_GetSecurityForSale",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "securityForSaleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SecurityForSale" }
          }
        }
      }
    },
    "/calendarEvents": {
      "get": {
        "tags": ["CalendarEvents"],
        "summary": "Возвращает календарные события по фильтру",
        "operationId": "CalendarEvents_Get",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CalendarEvent" }
            }
          }
        }
      },
      "post": {
        "tags": ["CalendarEvents"],
        "summary": "Создание календарного события",
        "operationId": "CalendarEvents_CreateCalendarEvent",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "calendarEvent",
            "in": "body",
            "description": "Календарное событие",
            "required": true,
            "schema": { "$ref": "#/definitions/CalendarEventCreateParams" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/calendarEvents/aggregates": {
      "get": {
        "tags": ["CalendarEvents"],
        "summary": "Возвращает агрегаты по напоминаниям клиента на дату (кол-во событий в разрезе типа сущности)",
        "operationId": "CalendarEvents_GetCalendarEventReminderAggregates",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "на какую дату нужны напоминания, если не указано то на текущую дату",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CalendarEventAggregate" }
            }
          }
        }
      }
    },
    "/calendarEvents/unreadAggregates": {
      "get": {
        "tags": ["CalendarEvents"],
        "summary": "Возвращает агрегаты по непрочитанным событиям клиента",
        "operationId": "CalendarEvents_GetCalendarEventUnreadAggregates",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CalendarEventUnreadAggregate" }
            }
          }
        }
      }
    },
    "/calendarEvents/lastReminders": {
      "get": {
        "tags": ["CalendarEvents"],
        "summary": "Возвращает все последние напоминания по календарным событиям",
        "operationId": "CalendarEvents_GetCalendarEventReminders",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "top",
            "in": "query",
            "description": "сколько напоминаний грузить, по умолчанию 5",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CalendarEvent" }
            }
          }
        }
      }
    },
    "/calendarEvents/reminders": {
      "get": {
        "tags": ["CalendarEvents"],
        "summary": "Возвращает календарные события по идентификаторам с подробным текстом",
        "operationId": "CalendarEvents_GetCalendarEventsByIDs",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "calendarEventIds",
            "in": "query",
            "description": "Идентификаторы событий",
            "required": true,
            "type": "array",
            "items": { "type": "integer", "format": "int64" },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CalendarEvent" }
            }
          }
        }
      }
    },
    "/calendarEvents/{calendarEventId}/read": {
      "post": {
        "tags": ["CalendarEvents"],
        "summary": "Отметить календарное событие как прочтенное",
        "operationId": "CalendarEvents_MarkCalendarEventAsRead",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "calendarEventId",
            "in": "path",
            "description": "Идентификатор событий",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/calendarEvents/{calendarEventId}": {
      "post": {
        "tags": ["CalendarEvents"],
        "summary": "Обновление календарного события",
        "operationId": "CalendarEvents_UpdateCalendarEvent",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "calendarEventId",
            "in": "path",
            "description": "Идентификатор события",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "calendarEvent",
            "in": "body",
            "description": "Календарное событие",
            "required": true,
            "schema": { "$ref": "#/definitions/CalendarEventCreateParams" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["CalendarEvents"],
        "summary": "Удаление календарного события",
        "operationId": "CalendarEvents_DeleteCalendarEvent",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "calendarEventId",
            "in": "path",
            "description": "Идентификатор событий",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/calendarEvents/{calendarEventId}/attachments": {
      "post": {
        "tags": ["CalendarEvents"],
        "summary": "Присоединение файла к календарному событию",
        "operationId": "CalendarEvents_CreateCalendarEventAttachment",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "calendarEventId",
            "in": "path",
            "description": "Идентификатор события",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "calendarEvent",
            "in": "body",
            "description": "Имя файла и содержимое вложения",
            "required": true,
            "schema": { "$ref": "#/definitions/CalendarEventCreateParams" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/captcha": {
      "get": {
        "tags": ["Captcha"],
        "summary": "Возвращает капчу",
        "operationId": "Captcha_Get",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "width",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "height",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Captcha" }
          }
        }
      }
    },
    "/card2card/tariff": {
      "get": {
        "tags": ["Card2Card"],
        "summary": "Возвращает информацию о тарифах при переводе с карты на карту",
        "operationId": "Card2Card_GetTariff",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "card2CardTransfer.amount",
            "in": "query",
            "description": "Сумма перевода (от 0.01 до 99 999 999.99)\r\n<remarks>без комиссии</remarks>",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "card2CardTransfer.commission",
            "in": "query",
            "description": "Размер комиссии за перевод, вычисленный ранее сервисом, предоставленным Way4",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "card2CardTransfer.cardNumber",
            "in": "query",
            "description": "Номер карты",
            "required": false,
            "type": "string"
          },
          {
            "name": "card2CardTransfer.expMonth",
            "in": "query",
            "description": "Дата окончания срока действия (месяц)",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "card2CardTransfer.expYear",
            "in": "query",
            "description": "Дата окончания срока действия (год)",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "card2CardTransfer.cvc2",
            "in": "query",
            "description": "Дополнительный код безопасности",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "card2CardTransfer.receiverCardNumber",
            "in": "query",
            "description": "Номер карты получателя",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Card2CardTariff" }
          }
        }
      }
    },
    "/card2card/tariff/sec": {
      "post": {
        "tags": ["Card2Card"],
        "summary": "Возвращает информацию о тарифах при переводе с карты на карту",
        "operationId": "Card2Card_CalcSecureTariff",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "card2CardTransfer",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Card2CardTransfer" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Card2CardTariff" }
          }
        }
      }
    },
    "/card2card/clientTariff": {
      "get": {
        "tags": ["Card2Card"],
        "summary": "Возвращает информацию о тарифах при переводе с карты на карту для авторизованного клиента",
        "operationId": "Card2Card_GetClientTariff",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "card2CardTransfer.senderCardId",
            "in": "query",
            "description": "Идентификатор карты отправителя. Если заполнен, поля CardNumber, ExpMonth, ExpYear игнорируются.",
            "required": false,
            "type": "string"
          },
          {
            "name": "card2CardTransfer.receiverCardId",
            "in": "query",
            "description": "Идентификатор карты получателя. Если заполнен, поле ReceiverCardNumber игнорируется.",
            "required": false,
            "type": "string"
          },
          {
            "name": "card2CardTransfer.senderCardName",
            "in": "query",
            "description": "Наименование карты отправителя",
            "required": false,
            "type": "string"
          },
          {
            "name": "card2CardTransfer.receiverCardName",
            "in": "query",
            "description": "Наименование карты получателя",
            "required": false,
            "type": "string"
          },
          {
            "name": "card2CardTransfer.needSaveSenderCard",
            "in": "query",
            "description": "Признак требования сохранить данные карты отправителя",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "card2CardTransfer.needSaveReceiverCard",
            "in": "query",
            "description": "Признак требования сохранить данные карты получателя",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "card2CardTransfer.amount",
            "in": "query",
            "description": "Сумма перевода (от 0.01 до 99 999 999.99)\r\n<remarks>без комиссии</remarks>",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "card2CardTransfer.commission",
            "in": "query",
            "description": "Размер комиссии за перевод, вычисленный ранее сервисом, предоставленным Way4",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "card2CardTransfer.cardNumber",
            "in": "query",
            "description": "Номер карты",
            "required": false,
            "type": "string"
          },
          {
            "name": "card2CardTransfer.expMonth",
            "in": "query",
            "description": "Дата окончания срока действия (месяц)",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "card2CardTransfer.expYear",
            "in": "query",
            "description": "Дата окончания срока действия (год)",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "card2CardTransfer.cvc2",
            "in": "query",
            "description": "Дополнительный код безопасности",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "card2CardTransfer.receiverCardNumber",
            "in": "query",
            "description": "Номер карты получателя",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Card2CardTariff" }
          }
        }
      }
    },
    "/card2card/calcTransferFee/{requestId}": {
      "post": {
        "tags": ["Card2Card"],
        "summary": "Возвращает информацию о тарифах при переводе с карты на карту для авторизованного клиента",
        "operationId": "Card2Card_CalcTransferFeeInfo",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "card2CardTransfer",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Card2CardClientTransfer" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CardTransferFee" }
          }
        }
      }
    },
    "/card2card/calcTransferFeeEnabled": {
      "get": {
        "tags": ["Card2Card"],
        "summary": "Доступна ли ф-ия CalcTransferFeeInfo. Если нет используем постбак в опрерация 2418, 2419",
        "operationId": "Card2Card_CalcTransferFeeInfoEnabled",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/card2card/transfer": {
      "post": {
        "tags": ["Card2Card"],
        "summary": "Осуществляет предварительную авторизацию",
        "operationId": "Card2Card_MakeTransfer",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "card2CardTransfer",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Card2CardTransfer" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Card2CardTransferResult" }
          }
        }
      }
    },
    "/card2card/clientTransfer": {
      "post": {
        "tags": ["Card2Card"],
        "summary": "Осуществляет предварительную авторизацию перевода для авторизованного клиента",
        "operationId": "Card2Card_MakeClientTransfer",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "card2CardTransfer",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Card2CardClientTransfer" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Card2CardTransferResult" }
          }
        }
      }
    },
    "/card2card/bankInfo/{numberOrBin}": {
      "get": {
        "tags": ["Card2Card"],
        "summary": "Информация о банке по БИНу карты",
        "operationId": "Card2Card_GetBankInfo",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "numberOrBin",
            "in": "path",
            "description": "минимум первые 6 цифр номера карты",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/BankInfo" }
          }
        }
      }
    },
    "/card2card/cardType/{numberOrBin}": {
      "get": {
        "tags": ["Card2Card"],
        "summary": "Информация о типе карты по начальным цифрам карты",
        "operationId": "Card2Card_GetCardType",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "numberOrBin",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "enum": [1, 2, 3, 4, 5, 6],
              "type": "integer"
            }
          }
        }
      }
    },
    "/card2card/cards/stored/{cardId}": {
      "delete": {
        "tags": ["Card2Card"],
        "summary": "Удаляет карту",
        "operationId": "Card2Card_DeleteStoredCard",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          { "name": "cardId", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/card2card/cards/stored/{cardId}/name": {
      "put": {
        "tags": ["Card2Card"],
        "summary": "Переименовывает карту",
        "operationId": "Card2Card_RenameStoredCard",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "body",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/card2card/cards/isdomestic/{numberOrBin}": {
      "get": {
        "tags": ["Card2Card"],
        "summary": "Является ли карта, картой промсвязьбанка",
        "operationId": "Card2Card_IsDomesticCard",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "numberOrBin",
            "in": "path",
            "description": "номер или бин",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/card2card/image/{numberOrBin}": {
      "get": {
        "tags": ["Card2Card"],
        "summary": "изображение карты по бину или номеру",
        "operationId": "Card2Card_GetCardImage",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "numberOrBin",
            "in": "path",
            "description": "номер или бин",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/card2card/onStoredCard": {
      "post": {
        "tags": ["Card2Card"],
        "summary": "запуск операции перевода на сохраненную карту",
        "operationId": "Card2Card_StartTransferOnStoredCard",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "storedCardId",
            "in": "body",
            "description": "ID сохраненной карты",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/liteData": {
      "get": {
        "tags": ["Cards"],
        "summary": "Возвращает информацию по карточным счетам с их картами и заказам карт. Это более облегченный вариант метода GetCardsData. Убраны не используемые свойства",
        "operationId": "Cards_GetLiteCardsData",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "activeOnly",
            "in": "query",
            "description": "true - активные карты, false - все карты",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LiteCardsData" }
          }
        }
      }
    },
    "/cards/v2/accounts/{cardAccountId}": {
      "get": {
        "tags": ["Cards"],
        "summary": "Возвращает информацию по карточному счёту. Версия 2 для нового UI с 15.10.2019",
        "operationId": "Cards_GetCardAccount2",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardAccountId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CardAccount" }
          }
        }
      }
    },
    "/cards/v2/{cardId}": {
      "get": {
        "tags": ["Cards"],
        "summary": "Возвращает информацию по карте. Версия 2 для нового UI с 15.10.2019",
        "operationId": "Cards_GetCard2",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Card" }
          }
        }
      }
    },
    "/cards/accounts/{cardAccountId}/statement": {
      "get": {
        "tags": ["Cards"],
        "summary": "Выписка по счету, поиск по выписке",
        "description": "Выборка данных идёт по дате транзакции",
        "operationId": "Cards_GetCardAccountStatement",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardAccountId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "filterParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filterParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filterParams.sumFrom",
            "in": "query",
            "description": "Сумма с",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "filterParams.sumTo",
            "in": "query",
            "description": "Сумма по",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "filterParams.processedOnly",
            "in": "query",
            "description": "Только обработанные",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterParams.income",
            "in": "query",
            "description": "Приходы",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterParams.outcome",
            "in": "query",
            "description": "Расходы",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterParams.searchString",
            "in": "query",
            "description": "Строка поиска",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterParams.highlightTagName",
            "in": "query",
            "description": "Имя тега для подсветки",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterParams.sortDirection",
            "in": "query",
            "description": "Направление сортировки",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2]
          },
          {
            "name": "pageParams.pageSize",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageParams.pageNumber",
            "in": "query",
            "description": "Номер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CardStatement" }
          }
        }
      }
    },
    "/cards/{cardId}/statement": {
      "get": {
        "tags": ["Cards"],
        "summary": "Выписка по карте, поиск по выписке",
        "description": "Выборка данных идёт по дате транзакции",
        "operationId": "Cards_GetCardStatement",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "filterParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filterParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filterParams.sumFrom",
            "in": "query",
            "description": "Сумма с",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "filterParams.sumTo",
            "in": "query",
            "description": "Сумма по",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "filterParams.processedOnly",
            "in": "query",
            "description": "Только обработанные",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterParams.income",
            "in": "query",
            "description": "Приходы",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterParams.outcome",
            "in": "query",
            "description": "Расходы",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterParams.searchString",
            "in": "query",
            "description": "Строка поиска",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterParams.highlightTagName",
            "in": "query",
            "description": "Имя тега для подсветки",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterParams.sortDirection",
            "in": "query",
            "description": "Направление сортировки",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2]
          },
          {
            "name": "pageParams.pageSize",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageParams.pageNumber",
            "in": "query",
            "description": "Номер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CardStatement" }
          }
        }
      }
    },
    "/cards/accounts/{cardAccountId}/statement/report/downloadable": {
      "get": {
        "tags": ["Cards"],
        "summary": "Получение выписки по счету в виде отчета",
        "description": "При вызове генерируется событие AccountStatementReceiveEventArgs для антифрода RSA",
        "operationId": "Cards_GetCardAccountStatementReport",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardAccountId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "exportFormat",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4, 5]
          },
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/cards/{cardId}/statement/report/downloadable": {
      "get": {
        "tags": ["Cards"],
        "summary": "Получение выписки по счету в виде отчета",
        "operationId": "Cards_GetCardStatementReport",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "exportFormat",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4, 5]
          },
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/cards/{cardId}/statement/report/printable": {
      "get": {
        "tags": ["Cards"],
        "summary": "Получение выписки по счету в виде отчета для печати",
        "operationId": "Cards_GetCardStatementReportToPrint",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/cards/accounts/{cardAccountId}/statement/report/printable": {
      "get": {
        "tags": ["Cards"],
        "summary": "Получение выписки по счету в виде отчета для печати",
        "description": "При вызове генерируется событие AccountStatementReceiveEventArgs для антифрода RSA",
        "operationId": "Cards_GetCardAccountStatementReportToPrint",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardAccountId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/cards/{nativeId}/sendStatementByEmail": {
      "post": {
        "tags": ["Cards"],
        "summary": "Отправляет выписку по счету на e-mail",
        "operationId": "Cards_SendCardStatementByEmail",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "nativeId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "sendParams",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/SendStatementByEmailParams" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/cards/{cardId}/transaeroStatement": {
      "get": {
        "tags": ["Cards"],
        "summary": "Возвращает выписку начисления баллов по карте Трансаэро",
        "operationId": "Cards_GetTransaeroCardStatement",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TransaeroCardStatement" }
          }
        }
      }
    },
    "/cards/{cardId}/changePinCode": {
      "post": {
        "tags": ["Cards"],
        "summary": "Возвращает ключ попытки смены PIN-кода (в случае ошибки возвращается пустая строка)",
        "operationId": "Cards_ChangePinCode",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        },
        "deprecated": true
      }
    },
    "/cards/{nativeId}/clientlabel": {
      "put": {
        "tags": ["Cards"],
        "summary": "Изменение пользовательского наименование карты/контракта",
        "operationId": "Cards_SetClientLabel",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "nativeId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "clientLabelParams",
            "in": "body",
            "description": "Параметры",
            "required": true,
            "schema": { "$ref": "#/definitions/ChangeCardClientLabelParams" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/cards/{cardId}": {
      "get": {
        "tags": ["Cards"],
        "summary": "Возвращает информацию по карте",
        "operationId": "Cards_GetCard",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Card" }
          }
        }
      }
    },
    "/cards/accounts/{cardAccountId}": {
      "get": {
        "tags": ["Cards"],
        "summary": "Возвращает информацию по карточному счёту",
        "operationId": "Cards_GetCardAccount",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardAccountId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CardAccount" }
          }
        }
      }
    },
    "/cards": {
      "get": {
        "tags": ["Cards"],
        "summary": "Возвращает только карты с",
        "operationId": "Cards_GetCards",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "activeOnly",
            "in": "query",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Card" }
            }
          }
        }
      }
    },
    "/cards/cardsImages": {
      "get": {
        "tags": ["Cards"],
        "summary": "Возвращает только картинки для карт клиента",
        "operationId": "Cards_GetCardsImages",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "activeOnly",
            "in": "query",
            "description": "",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CardImageInfo" }
            }
          }
        }
      }
    },
    "/cards/data": {
      "get": {
        "tags": ["Cards"],
        "summary": "Возвращает информацию по карточным счетам с их картами и заказам карт",
        "operationId": "Cards_GetCardsData",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "activeOnly",
            "in": "query",
            "description": "true - активные карты, false - все карты",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CardsData" }
          }
        }
      }
    },
    "/cards/applications/{applicationId}": {
      "get": {
        "tags": ["Cards"],
        "summary": "Возвращает информацию по заявке на карту",
        "operationId": "Cards_GetCardApplication",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CardApplication" }
          }
        }
      }
    },
    "/cards/accounts/{cardAccountId}/sendRequisitesByEmail": {
      "post": {
        "tags": ["Cards"],
        "summary": "Отправляет реквизиты счета на e-mail",
        "operationId": "Cards_SendRequisitesByEmail",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardAccountId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "email",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/cards/{cardId}/cardlimits": {
      "get": {
        "tags": ["Cards"],
        "summary": "Возвращает лимиты на карте",
        "operationId": "Cards_GetCardLimits",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CardLimit" }
            }
          }
        }
      }
    },
    "/cards/accounts/{cardAccountId}/requisites/report/downloadable": {
      "get": {
        "tags": ["Cards"],
        "summary": "Загружает отчет по реквизитам счета",
        "operationId": "Cards_GetRequisitesReport",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardAccountId",
            "in": "path",
            "description": "account identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/cards/accounts/{cardAccountId}/requisites/report/printable": {
      "get": {
        "tags": ["Cards"],
        "summary": "Выдает на печать отчет по реквизитам счета",
        "operationId": "Cards_GetRequisitesReportToPrint",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardAccountId",
            "in": "path",
            "description": "account identifier",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/cards/{cardId}/blockRequests": {
      "post": {
        "tags": ["Cards"],
        "summary": "Запускает операцию блокирования карты",
        "operationId": "Cards_BlockCard",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "идентификатор карты",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/{cardId}/unblockRequests": {
      "post": {
        "tags": ["Cards"],
        "summary": "Запускает операцию разблокирования карты",
        "operationId": "Cards_UnblockCard",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "идентификатор карты",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/createCardApplicationRequestsCMS": {
      "post": {
        "tags": ["Cards"],
        "summary": "Запускает операцию заказа карты по идентификатору CMS",
        "operationId": "Cards_CreateCardOrderCMS",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/MarketplaceProductOrderParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/productCatalog/notifyManagersCMS": {
      "post": {
        "tags": ["Cards"],
        "summary": "Уведомление о желании оформить карту для VIP по идентификатору CMS",
        "operationId": "Cards_NotifyManagersAboutNewVipCardOrderCMS",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/MarketplaceProductOrderParams" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/cards/{cardId}/editCardLimitRequests": {
      "post": {
        "tags": ["Cards"],
        "summary": "Запускает операцию установки/изменения лимита по карте",
        "operationId": "Cards_ChangeCardLimit",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "cardLimitParams",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/CardLimitParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/{cardId}/newCardLimitRequests": {
      "post": {
        "tags": ["Cards"],
        "summary": "Запускает операцию установки нового лимита по карте",
        "operationId": "Cards_NewCardLimit",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/{cardId}/deleteCardLimitRequests": {
      "post": {
        "tags": ["Cards"],
        "summary": "Запускает операцию удаления лимита по карте",
        "operationId": "Cards_DeleteCardLimit",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "limitId",
            "in": "body",
            "description": "Идентификатор лимита",
            "required": true,
            "schema": { "format": "int64", "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/{cardId}/deleteAllCardLimitsRequests": {
      "post": {
        "tags": ["Cards"],
        "summary": "Запускает операцию удаления всех лимитов по карте",
        "operationId": "Cards_DeleteAllCardLimits",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/{cardId}/enableSavingRuleRequests": {
      "post": {
        "tags": ["Cards"],
        "summary": "Запускает операцию на подключение карты к накопительному сервису",
        "operationId": "Cards_EnableSavingRule",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/{cardId}/disableSavingRuleRequests": {
      "post": {
        "tags": ["Cards"],
        "summary": "Запускает операцию на отключение карты от накопительного сервиса",
        "operationId": "Cards_DisableSavingRule",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/{cardId}/editSavingRuleRequests": {
      "post": {
        "tags": ["Cards"],
        "summary": "Запускает операцию на редактирование накопительного сервиса по карте",
        "operationId": "Cards_EditSavingRule",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/lastTransactions": {
      "get": {
        "tags": ["Cards"],
        "summary": "Возвращает список последних транзакций по картам клиента",
        "description": "Количество дней по умолчанию, за которые получаем данные - 7 дней.\r\nРазмер страницы по умолчанию - 13 записей.",
        "operationId": "Cards_GetLastTransactions",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CardTransaction" }
            }
          }
        }
      }
    },
    "/cards/{cardId}/enabledNotificationsRequests": {
      "post": {
        "tags": ["Cards"],
        "summary": "Запускает операцию на подключение транзакционных оповещений по карте\r\nПосле переключения клиентской части на метод EnableSmsNotificationsByRequestSource этот метод нужно удалить",
        "operationId": "Cards_EnableSmsNotifications",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "Идентификатор банковской карты",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/{cardId}/enabledNotificationsRequestsByRequestSource": {
      "post": {
        "tags": ["Cards"],
        "summary": "Запускает операцию на подключение транзакционных оповещений по карте",
        "operationId": "Cards_EnableSmsNotificationsByRequestSource",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "Идентификатор банковской карты",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "IsStartedFromCardPinChange",
            "in": "body",
            "description": "true - вызов производится при смене ПИН-кода, false - из страницы банковских карт",
            "required": true,
            "schema": { "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/{cardId}/disableNotificationsRequests": {
      "post": {
        "tags": ["Cards"],
        "summary": "Запускает операцию на отключение транзакционных оповещений по карте",
        "operationId": "Cards_DisableSmsNotifications",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/{cardId}/enableSecureRequests": {
      "post": {
        "tags": ["Cards"],
        "summary": "Запускает операцию на подключение услуги 3D-Secure по карте",
        "operationId": "Cards_Enable3DSecure",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/{cardId}/disableSecureRequests": {
      "post": {
        "tags": ["Cards"],
        "summary": "Запускает операцию на отключение услуги 3D-Secure по карте",
        "operationId": "Cards_Disable3DSecure",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/{cardId}/GetCashbackRequests": {
      "post": {
        "tags": ["Cards"],
        "summary": "Запускает операцию на получение cashback за мили",
        "operationId": "Cards_GetCashback",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "transactionId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          { "name": "cardId", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/{cardId}/setCardCountryLimitRequests": {
      "post": {
        "tags": ["Cards"],
        "summary": "Запускает операцию установки запрета на использование карты в странах",
        "operationId": "Cards_SetCardCountryLimit",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/{cardId}/editCashback": {
      "post": {
        "tags": ["Cards"],
        "summary": "Редактирование категорий кешбека",
        "operationId": "Cards_EditCashbackCategory",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/{cardId}/editFlagmanCashback": {
      "post": {
        "tags": ["Cards"],
        "summary": "Редактирование категорий кешбека",
        "operationId": "Cards_EditFlagmanCashbackCategory",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/{cardId}/encodeDateForApplePay": {
      "post": {
        "tags": ["Cards"],
        "summary": "Упаковывает данные карты для привязки к ApplePay",
        "operationId": "Cards_EncodeCardDataForApplePay",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "reqParams",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardApplePayAddWalletRequestParams"
            }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/cards/{cardId}/encodeDataForAndroidPay": {
      "post": {
        "tags": ["Cards"],
        "summary": "Упаковывает данные карты для привязки к AndroidPay",
        "operationId": "Cards_EncodeCardDataForAndroidPay",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "идентификатор карты",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/cards/{cardId}/digitizationgooglepay": {
      "post": {
        "tags": ["Cards"],
        "summary": "Возвращает данные для привязки карты в GooglePay из МП",
        "operationId": "Cards_DigitizationForGooglePay",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/cards/{cardId}/digitizationsamsungpay": {
      "post": {
        "tags": ["Cards"],
        "summary": "Возвращает данные для привязки карты в SamsungPay из МП",
        "operationId": "Cards_DigitizationForSamsungPay",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/cards/{cardId}/encodeDataForSamsungPay": {
      "post": {
        "tags": ["Cards"],
        "summary": "Упаковывает данные карты для привязки к SamsungPay",
        "operationId": "Cards_EncodeCardDataForSamsungPay",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/cards/addVirtualMirCard/{nativeID}": {
      "post": {
        "tags": ["Cards"],
        "summary": "Запускает операцию заказа доп. виртуальной карты Мир",
        "operationId": "Cards_AddVirtualMirCard",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "nativeID",
            "in": "path",
            "description": "идентификатор карты или контракта (опционально)",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/flagmanCashbackCategories": {
      "get": {
        "tags": ["Cards"],
        "summary": "Возвращает категории Flagman Cash Back для клиента из текущей сессии.",
        "operationId": "Cards_GetFlagmanCashBackCategories",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FlagmanCashbackCategoriesResult"
            }
          }
        }
      }
    },
    "/cards/requestConfidentialCardValues": {
      "get": {
        "tags": ["Cards"],
        "summary": "Возвращает данные по карте, включая секретные",
        "operationId": "Cards_RequestConfidentialCardValues",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "query",
            "description": "ID карты в Way4",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ConfidentialCardValuesInfo" }
          }
        }
      }
    },
    "/cards/flagmanCashbackCategoriesByTariff": {
      "get": {
        "tags": ["Cards"],
        "summary": "Возвращает категории Flagman Cash Back для клиента из текущей сессии.",
        "operationId": "Cards_GetFlagmanCashBackCategoriesByTariff",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "tariffNameIndex",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FlagmanCashbackCategoriesResult"
            }
          }
        }
      }
    },
    "/cards/{cardId}/cardpinset": {
      "post": {
        "tags": ["Cards"],
        "summary": "Запускает операцию установки/изменения ПИН кода карты",
        "operationId": "Cards_CardPinSet",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "Идентификатор карты",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pinSetMode",
            "in": "body",
            "description": "Режим изменения ПИН кода",
            "required": true,
            "schema": { "format": "int32", "enum": [1, 2], "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/{cardId}/reissue": {
      "post": {
        "tags": ["Cards"],
        "summary": "Запускает операцию перевыпуска карты",
        "operationId": "Cards_ReissueCard",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/{cardId}/ewallettokens": {
      "post": {
        "tags": ["Cards"],
        "summary": "Возвращает список ссылок на токены платежных систем",
        "operationId": "Cards_GetCardEwalletTokens",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "walletCode",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [1, 2, 3],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      }
    },
    "/cards/{cardID}/walletToken": {
      "post": {
        "tags": ["Cards"],
        "summary": "Токенизация карты в кошельке",
        "operationId": "Cards_GetWalletToken",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tokenizationData",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/WalletTokenizationData" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/cards/fullCardNumber": {
      "get": {
        "tags": ["Cards"],
        "summary": "Возвращает полный (не маскированный) номер карты",
        "operationId": "Cards_GetFullCardNumber",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "query",
            "description": "Идентификатор карты",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/cards/issueRequestID": {
      "get": {
        "tags": ["Cards"],
        "summary": "Возвращает номер поручения, по которому была выпущена карта",
        "operationId": "Cards_GetIssueRequestID",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "query",
            "description": "Идентификатор карты",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int64", "type": "integer" }
          }
        }
      }
    },
    "/cards/{cardId}/producePlastic": {
      "post": {
        "tags": ["Cards"],
        "summary": "Заглушка для запуска операции выпуска пластика к цифровой карте.",
        "operationId": "Cards_ProducePlastic",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "Идентификатор карты Wa4 для которой необходимо выпустить пластик",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/{cardId}/loyaltyPackages": {
      "get": {
        "tags": ["Cards"],
        "summary": "Возвращает по клиенту пакеты лояльности, подключенные или которые можно подключить",
        "operationId": "Cards_GetLoyaltyPackagesByCardId",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "Идентификатор карты",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoyaltyPackagesData" }
          }
        }
      }
    },
    "/cards/connectLoyaltyPackage/{cardId}": {
      "post": {
        "tags": ["Cards"],
        "summary": "Запускает операцию подключения пакетов лояльности",
        "operationId": "Cards_ConnectLoyaltyPackage",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "Идентификатор карты для которой необходимо подключить пакеты лояльности",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "loyaltyPackageParams",
            "in": "body",
            "description": "Идентификаторы подключаемых категорий, заданных через запятую",
            "required": true,
            "schema": { "$ref": "#/definitions/ConnectLoyaltyPackageParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/{cardId}/createSignificantDataRequest": {
      "post": {
        "tags": ["Cards"],
        "summary": "Подтверждение просмотра данных о карте",
        "operationId": "Cards_CreateSignificantDataRequest",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/cards/{cardId}/significantData": {
      "get": {
        "tags": ["Cards"],
        "summary": "Получить данные о карте",
        "operationId": "Cards_GetSignificantData",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/cards/accounts/{cardAccountId}/IndividualSalaryContractDetails": {
      "get": {
        "tags": ["Cards"],
        "summary": "Возвращает детальную информацию об ИЗП",
        "operationId": "Cards_GetIndividualSalaryContractDetails",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardAccountId",
            "in": "path",
            "description": "Идентификатор счета Wa4 по которому необходимо получить информацию по ИЗП",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/IndividualSalaryContract" }
          }
        }
      }
    },
    "/cards/{cardId}/conclusionIzpAgreement": {
      "post": {
        "tags": ["Cards"],
        "summary": "Запускает операцию 0074 - \"Заключение договора ИЗП\"или 0077 - \"Управление связями договора ИЗП со счетами клиента\"",
        "operationId": "Cards_ConclusionIzpAgreement",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "Идентификатор карты Wa4, счет которой клиент подключает по договору ИЗП",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/chat/status": {
      "get": {
        "tags": ["Chat"],
        "summary": "доступность чата",
        "operationId": "Chat_GetStatus",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/chatBot/sendChatBotAuthResult": {
      "post": {
        "tags": ["ChatBot"],
        "summary": "Отправка результата авторизации клиента в чба рб\r\nвызывается из web ui на событие init sdk чата",
        "operationId": "ChatBot_SendChatBotAuthResult",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/chatBot/sendChatBotAuthResult/{tempToken}": {
      "post": {
        "tags": ["ChatBot"],
        "summary": "Отправка результата авторизации клиента в чба рб\r\nвызывается из web view logon, с передачей одноразового токена",
        "operationId": "ChatBot_SendChatBotAuthResult",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "tempToken",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/clientLimits": {
      "get": {
        "tags": ["ClientLimits"],
        "summary": "Возвращает лимиты клиента",
        "operationId": "ClientLimits_GetClientLimits",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ClientLimits" }
          }
        }
      }
    },
    "/clientLimits/daily/editRequests": {
      "post": {
        "tags": ["ClientLimits"],
        "summary": "Изменение дневного лимита",
        "operationId": "ClientLimits_EditDailyLimit",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/clientLimits/daily/deleteRequests": {
      "post": {
        "tags": ["ClientLimits"],
        "summary": "Удаление дневного лимита",
        "operationId": "ClientLimits_DeleteDailyLimit",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/clientLimits/monthly/editRequests": {
      "post": {
        "tags": ["ClientLimits"],
        "summary": "Изменение месячного лимита",
        "operationId": "ClientLimits_EditMonthlyLimit",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/clientLimits/monthly/deleteRequests": {
      "post": {
        "tags": ["ClientLimits"],
        "summary": "Удаление месячного лимита",
        "operationId": "ClientLimits_DeleteMonthlyLimit",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/commissions/transferCommission/{operationCode}": {
      "post": {
        "tags": ["Commission"],
        "summary": "Возвращает комиссию для операции перевода",
        "operationId": "Commission_GetTransferCommission",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "operationCode",
            "in": "path",
            "description": "Код операции",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "transferContext",
            "in": "body",
            "description": "Контейнер с информацией о переводе",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferContextForCommissionCalculation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OperationCommissionInfo" }
          }
        }
      }
    },
    "/conversion/{requestId}/confirm": {
      "post": {
        "tags": ["Conversion"],
        "summary": "Подтверждает курс для поручения с заданным номером.",
        "operationId": "Conversion_Confirm",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "ID поручения.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "confirmationData",
            "in": "body",
            "description": "Данные, необходимые для подтверждения конверсии.",
            "required": true,
            "schema": { "$ref": "#/definitions/ConversionConfirmationData" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Request" }
          }
        }
      }
    },
    "/conversion/{requestId}/cancel": {
      "post": {
        "tags": ["Conversion"],
        "summary": "Отменяет поручение с заданным номером.",
        "operationId": "Conversion_Cancel",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "ID поручения.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/correspondenceExchange/divisions": {
      "get": {
        "tags": ["CorrespondenceExchange"],
        "summary": "Получение списка служб переписки",
        "operationId": "CorrespondenceExchange_GetDivisions",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "query",
            "description": "Если задано поручение, то возвращается список доступных служб в рамках переписки по этому поручению. Иначе возвращается список служб в рамках общей переписки клиент-банк",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Division" }
            }
          }
        }
      }
    },
    "/correspondenceExchange/divisions/{divisionId}": {
      "get": {
        "tags": ["CorrespondenceExchange"],
        "summary": "Получение детальной информации о службе переписки",
        "operationId": "CorrespondenceExchange_GetDivision",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "divisionId",
            "in": "path",
            "description": "Id службы",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Division" }
          }
        }
      }
    },
    "/correspondenceExchange/divisions/{divisionId}/ratingCriterias": {
      "get": {
        "tags": ["CorrespondenceExchange"],
        "summary": "Получение справочной информации о критериях оценки",
        "operationId": "CorrespondenceExchange_GetRatingCriterias",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "divisionId",
            "in": "path",
            "description": "ID службы",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/RatingCriteria" }
            }
          }
        }
      }
    },
    "/correspondenceExchange/letters/unread/count": {
      "get": {
        "tags": ["CorrespondenceExchange"],
        "summary": "Возвращает количество непрочитанных писем",
        "operationId": "CorrespondenceExchange_GetLettersUnreadCount",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/correspondenceExchange/letters/count": {
      "get": {
        "tags": ["CorrespondenceExchange"],
        "summary": "Возвращает количество писем",
        "operationId": "CorrespondenceExchange_GetLettersCount",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "letterFilterParams.filterMode",
            "in": "query",
            "description": "Режим фильтрации",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4]
          },
          {
            "name": "letterFilterParams.requestId",
            "in": "query",
            "description": "ID поручения",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "letterFilterParams.letterId",
            "in": "query",
            "description": "Письмо из цепочки",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "letterFilterParams.keyPhrase",
            "in": "query",
            "description": "Ключевая фраза",
            "required": false,
            "type": "string"
          },
          {
            "name": "letterFilterParams.keyPhraseHighliteTagName",
            "in": "query",
            "description": "Имя тега для подсветки",
            "required": false,
            "type": "string"
          },
          {
            "name": "letterFilterParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "letterFilterParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "pageParams.pageSize",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageParams.pageNumber",
            "in": "query",
            "description": "Номер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/correspondenceExchange/letters": {
      "get": {
        "tags": ["CorrespondenceExchange"],
        "summary": "Возвращает список писем в зависимости от параметров фильтрации",
        "operationId": "CorrespondenceExchange_GetLetters",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "letterFilterParams.filterMode",
            "in": "query",
            "description": "Режим фильтрации",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4]
          },
          {
            "name": "letterFilterParams.requestId",
            "in": "query",
            "description": "ID поручения",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "letterFilterParams.letterId",
            "in": "query",
            "description": "Письмо из цепочки",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "letterFilterParams.keyPhrase",
            "in": "query",
            "description": "Ключевая фраза",
            "required": false,
            "type": "string"
          },
          {
            "name": "letterFilterParams.keyPhraseHighliteTagName",
            "in": "query",
            "description": "Имя тега для подсветки",
            "required": false,
            "type": "string"
          },
          {
            "name": "letterFilterParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "letterFilterParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "pageParams.pageSize",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageParams.pageNumber",
            "in": "query",
            "description": "Номер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Letter" }
            }
          }
        }
      }
    },
    "/correspondenceExchange/letters/{letterId}": {
      "get": {
        "tags": ["CorrespondenceExchange"],
        "summary": "Получение информации о письме",
        "description": "Возвращается в том числе информация по рейтингам. Возвращается информация по наличию attachment'ов, но само содержимое attachemnent'а нужно получать методом GetLetterAttachment",
        "operationId": "CorrespondenceExchange_GetLetter",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "letterId",
            "in": "path",
            "description": "Id письма",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Letter" }
          }
        }
      },
      "delete": {
        "tags": ["CorrespondenceExchange"],
        "summary": "Удаление черновика письма",
        "operationId": "CorrespondenceExchange_DeleteLetter",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "letterId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/correspondenceExchange/letters/attachments/{letterAttachmentId}/downloadable": {
      "get": {
        "tags": ["CorrespondenceExchange"],
        "summary": "Получение вложения письма",
        "operationId": "CorrespondenceExchange_GetLetterAttachment",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "letterAttachmentId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/correspondenceExchange/letters/{letterId}/open": {
      "post": {
        "tags": ["CorrespondenceExchange"],
        "summary": "Помечает письмо как прочитанное",
        "operationId": "CorrespondenceExchange_OpenLetter",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "letterId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/correspondenceExchange/letters/initialize": {
      "post": {
        "tags": ["CorrespondenceExchange"],
        "summary": "Инициализация нового письма",
        "description": "Вызывается при намерении клиента создать письмо. Заполненные свойства должны отображаться в интерфейсе создания нового письма",
        "operationId": "CorrespondenceExchange_InitializeNewLetter",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "initializeNewLetterParams",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/InitializeNewLetterParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Letter" }
          }
        }
      }
    },
    "/correspondenceExchange/letters/save": {
      "post": {
        "tags": ["CorrespondenceExchange"],
        "summary": "Сохранение черновика письма",
        "operationId": "CorrespondenceExchange_SaveLetter",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "letter",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/Letter" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Letter" }
          }
        }
      }
    },
    "/correspondenceExchange/letters/send": {
      "post": {
        "tags": ["CorrespondenceExchange"],
        "summary": "Отправка письма",
        "description": "В случае, если для отправки письма в адрес банка требуется подтверждение (это определяется настрйками службы, в адрес которой пишется письмо), то в возвращаемом объекте класса SendLetterResult будет заолнено свойство ScenarioResult",
        "operationId": "CorrespondenceExchange_SendLetter",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "letter",
            "in": "body",
            "description": "Письмо",
            "required": true,
            "schema": { "$ref": "#/definitions/Letter" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SendLetterResult" }
          }
        }
      }
    },
    "/correspondenceExchange/letters/attachments": {
      "post": {
        "tags": ["CorrespondenceExchange"],
        "summary": "Создание вложения к письму",
        "operationId": "CorrespondenceExchange_CreateLetterAttachment",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "letterAttachment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/LetterAttachment" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/correspondenceExchange/letters/attachments/{letterAttachmentId}": {
      "delete": {
        "tags": ["CorrespondenceExchange"],
        "summary": "Удаляет вложение к письму",
        "operationId": "CorrespondenceExchange_DeleteLetterAttachment",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "letterAttachmentId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/correspondenceExchange/letters/rate": {
      "post": {
        "tags": ["CorrespondenceExchange"],
        "summary": "Выставляет рейтинг по письму по одному критерию.\r\n<remarks>Рейтинговать можно только письма банка</remarks>",
        "operationId": "CorrespondenceExchange_RateLetter",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "letterRatingParams",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/LetterRatingParams" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/correspondenceExchange/subjects": {
      "post": {
        "tags": ["CorrespondenceExchange"],
        "summary": "Возвращает тематики сообщений",
        "operationId": "CorrespondenceExchange_GetLetterSubjects",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      }
    },
    "/currencyRates": {
      "get": {
        "tags": ["CurrencyRates"],
        "summary": "Возвращает курсы валют",
        "operationId": "CurrencyRates_Get",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "valueDate",
            "in": "query",
            "description": "Дата валютирования со временем. По умолчанию текущая дата",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/RoubleCurrencyRate" }
            }
          }
        }
      }
    },
    "/currencyRates/{id}/centralBankRateHistory": {
      "get": {
        "tags": ["CurrencyRates"],
        "summary": "Возвращает историю изменения курса ЦБ валюты",
        "operationId": "CurrencyRates_GetCentralBankRateHistory",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "идентификатор валюты",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "lastDays",
            "in": "query",
            "description": "История за последние несколько дней. По умолчанию 30 дней",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/RoubleCurrencyRate" }
            }
          }
        }
      }
    },
    "/deposits": {
      "get": {
        "tags": ["Deposits"],
        "summary": "Возвращает вклады клиента",
        "operationId": "Deposits_Get",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "activeOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/DepositContract" }
            }
          }
        }
      }
    },
    "/deposits/{contractId}": {
      "get": {
        "tags": ["Deposits"],
        "summary": "Возвращает информацию о вкладе клиента",
        "operationId": "Deposits_GetDeposit",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DepositContract" }
          }
        }
      }
    },
    "/deposits/{brandId}/summary": {
      "get": {
        "tags": ["Deposits"],
        "summary": "Возвращает информацию о вкладе",
        "operationId": "Deposits_GetDepositInfo",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "brandId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DepositSummary" }
          }
        }
      }
    },
    "/deposits/{contractId}/earlyClosureSums": {
      "get": {
        "tags": ["Deposits"],
        "summary": "Возвращает суммы досрочного закрытия по вкладу",
        "operationId": "Deposits_GetEarlyClosureSums",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Дата расчета. Если null, суммы возвращаются на текущую дату.",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/DepositEarlyClosureSums" }
            }
          }
        }
      }
    },
    "/deposits/{contractId}/details/{contractDetailId}/accrualPlan": {
      "get": {
        "tags": ["Deposits"],
        "summary": "Возвращает план выплат по депозитному контракту",
        "operationId": "Deposits_GetAccrualPlan",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "contractDetailId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DepositAccrualPlan" }
          }
        }
      }
    },
    "/deposits/calculator": {
      "get": {
        "tags": ["Deposits"],
        "summary": "Возвращает данные для формирования калькулятора витрины вкладов\r\n<remarks>данные содержат возможные валюты и сроки  по вкладам</remarks>",
        "operationId": "Deposits_GetCalculatorInitialData",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DepositCalculatorInitialData" }
          }
        }
      }
    },
    "/deposits/calculator/offers": {
      "get": {
        "tags": ["Deposits"],
        "summary": "Возвращает набор предложений для открытия вклада, предоставленных калькулятором витрины вкладов",
        "operationId": "Deposits_GetOffersForCalculator",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "pars.calculatorInterestPaymentType",
            "in": "query",
            "description": "Тип выплаты процентов",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2, 3]
          },
          {
            "name": "pars.minLengthDays",
            "in": "query",
            "description": "Подбирать вклады с количеством дней не менее, чем",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pars.maxLengthDays",
            "in": "query",
            "description": "Подбирать вклады с количеством дней не более, чем",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pars.currencyId",
            "in": "query",
            "description": "Валюта, в которой планируется открыть вклад\r\n<remarks>В случае мультивалютных вкладов - это валюта, по которой производится отбор</remarks>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pars.initialInstalmentSum",
            "in": "query",
            "description": "Планируемая сумма вклада к открытию",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "pars.marketDetailed",
            "in": "query",
            "description": "Детальная информация продуктового контента",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pars.includeMeta",
            "in": "query",
            "description": "Пресет для деталей",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pars.preset",
            "in": "query",
            "description": "Пресет для деталей",
            "required": false,
            "type": "string"
          },
          {
            "name": "pars.isWithReplenishment",
            "in": "query",
            "description": "Брэнды, допускающие пополнение\r\n<remarks>\r\nЕсли значение установлено, то возвращаются брэнды, допускающие пополнение, иначе - любые\r\n</remarks>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pars.isWithSubtraction",
            "in": "query",
            "description": "Брэнды, допускающие снятие\r\n<remarks>\r\nЕсли значение установлено, то возвращаются брэнды, допускающие снятие, иначе - любые\r\n</remarks>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pars.isMulticurrency",
            "in": "query",
            "description": "Мультивалютные брэнды\r\n<remarks>\r\nЕсли значение установлено, то возвращаются мультивалютные брэнды, иначе - любые\r\n</remarks>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/EstimatedOffer" }
            }
          }
        }
      }
    },
    "/deposits/openFromCalculatorOfferRequests": {
      "post": {
        "tags": ["Deposits"],
        "summary": "Запуск операции открытия срочного вклада из калькулятора",
        "operationId": "Deposits_OpenDepositFromCalculatorOffer",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CalculatorOfferRequestData" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/deposits/openRequests": {
      "post": {
        "tags": ["Deposits"],
        "summary": "Запуск операции открытия срочного вклада из продуктового каталога",
        "operationId": "Deposits_OpenDeposit",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "brandId",
            "in": "body",
            "required": true,
            "schema": { "format": "int32", "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        },
        "deprecated": true
      }
    },
    "/deposits/openRequestsCMS": {
      "post": {
        "tags": ["Deposits"],
        "summary": "Запуск операции открытия срочного вклада из продуктового контента",
        "operationId": "Deposits_OpenDepositCMS",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/MarketplaceProductOrderParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/deposits/productCatalog/offers": {
      "get": {
        "tags": ["Deposits"],
        "summary": "Возвращает условия бренда",
        "operationId": "Deposits_GetOffersByFilter",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "filter.brandId",
            "in": "query",
            "description": "Бренд",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.isWithCapitalization",
            "in": "query",
            "description": "С капитализацией",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.isWithPeriodicalInterestPayments",
            "in": "query",
            "description": "С периодической выплатой %%",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.currencyId",
            "in": "query",
            "description": "Валюта, в которой планируется открыть вклад\r\n<remarks>В случае мультивалютных вкладов - это валюта, по которой производится отбор</remarks>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.initialInstalmentSum",
            "in": "query",
            "description": "Планируемая сумма вклада к открытию",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "filter.marketDetailed",
            "in": "query",
            "description": "Детальная информация продуктового контента",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.includeMeta",
            "in": "query",
            "description": "Пресет для деталей",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.preset",
            "in": "query",
            "description": "Пресет для деталей",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.isWithReplenishment",
            "in": "query",
            "description": "Брэнды, допускающие пополнение\r\n<remarks>\r\nЕсли значение установлено, то возвращаются брэнды, допускающие пополнение, иначе - любые\r\n</remarks>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.isWithSubtraction",
            "in": "query",
            "description": "Брэнды, допускающие снятие\r\n<remarks>\r\nЕсли значение установлено, то возвращаются брэнды, допускающие снятие, иначе - любые\r\n</remarks>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.isMulticurrency",
            "in": "query",
            "description": "Мультивалютные брэнды\r\n<remarks>\r\nЕсли значение установлено, то возвращаются мультивалютные брэнды, иначе - любые\r\n</remarks>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/EstimatedOffer" }
            }
          }
        }
      }
    },
    "/deposits/productCatalog/showcase": {
      "get": {
        "tags": ["Deposits"],
        "summary": "Проксирует получение вкладов из каталога продуктов,\r\nдополняя информацие о доступности вклада \"Инвестиционный доход\" для конкретного пользователя",
        "operationId": "Deposits_GetShowCaseDepositList",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/MarketProductItem" }
            }
          }
        }
      }
    },
    "/deposits/{contractId}/clientLabel": {
      "put": {
        "tags": ["Deposits"],
        "summary": "Обновление клиентского наименования",
        "operationId": "Deposits_SetClientLabel",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "clientLabel",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/authentication/device/deviceSecurityCode": {
      "post": {
        "tags": ["DeviceSecurityCode"],
        "summary": "установка короткого кода",
        "operationId": "DeviceSecurityCode_SetDeviceSecurityCode",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SetShortCodeResponse" }
          }
        }
      }
    },
    "/authentication/device/setSecurityCode": {
      "post": {
        "tags": ["DeviceSecurityCode"],
        "summary": "установка короткого кода",
        "operationId": "DeviceSecurityCode_SetSecurityCode",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SetShortCodeResponse" }
          }
        }
      }
    },
    "/authentication/device/confirmDeviceSecurityCode": {
      "post": {
        "tags": ["DeviceSecurityCode"],
        "summary": "установка короткого кода",
        "operationId": "DeviceSecurityCode_ConfirmDeviceSecurityCode",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "authResponse",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/AuthResponse" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ConfirmShortCodeResult" }
          }
        }
      }
    },
    "/authentication/device/confirmSecurityCode": {
      "post": {
        "tags": ["DeviceSecurityCode"],
        "summary": "Подтверждение короткого кода (новая авторизация)",
        "operationId": "DeviceSecurityCode_Confirm",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ConfirmShortCodeResult" }
          }
        }
      }
    },
    "/authentication/device/secondStepAuthSms": {
      "get": {
        "tags": ["DeviceSecurityCode"],
        "summary": "Запрос повторной отправки смс-кода для подтверждения установки кода",
        "operationId": "DeviceSecurityCode_GetSecondStepAuthSms",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SmsData" }
          }
        }
      }
    },
    "/authentication/device/secondStepAuthPush": {
      "get": {
        "tags": ["DeviceSecurityCode"],
        "summary": "Запрос повторной отправки push-кода для подтверждения установки кода",
        "operationId": "DeviceSecurityCode_GetSecondStepAuthPush",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/PushData" }
          }
        }
      }
    },
    "/authentication/device/resetDeviceSecurityCode": {
      "post": {
        "tags": ["DeviceSecurityCode"],
        "summary": "удаление короткого кода",
        "operationId": "DeviceSecurityCode_ResetDeviceSecurityCode",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/documents/download/{documentImageId}": {
      "get": {
        "tags": ["Documents"],
        "summary": "Получение документа по ID",
        "operationId": "Documents_GetDocumentById",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "documentImageId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/documents/documentContent/{documentImageId}": {
      "get": {
        "tags": ["Documents"],
        "summary": "Получение контента документа",
        "operationId": "Documents_GetDocumentContentById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/pdf",
          "text/csv"
        ],
        "parameters": [
          {
            "name": "documentImageId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "byte", "type": "string" }
          }
        }
      }
    },
    "/documents/downloadMiniature/{documentImageId}": {
      "get": {
        "tags": ["Documents"],
        "summary": "Получение документа по ID",
        "operationId": "Documents_GetDocumentMiniatureById",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "documentImageId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/documents/documentMiniatureContent/{documentImageId}": {
      "get": {
        "tags": ["Documents"],
        "summary": "Получение контента миниатюры",
        "operationId": "Documents_GetDocumentMiniatureContentById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/pdf",
          "text/csv"
        ],
        "parameters": [
          {
            "name": "documentImageId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "byte", "type": "string" }
          }
        }
      }
    },
    "/esia/authAvailable": {
      "get": {
        "tags": ["Esia"],
        "summary": "Получить признак доступности функционала удаленной идентификации",
        "operationId": "Esia_IsRemoteAuthAvailable",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/esia/authAndroidAvailable": {
      "get": {
        "tags": ["Esia"],
        "summary": "Получить признак доступности функционала удаленной идентификации для android",
        "operationId": "Esia_IsRemoteAuthAvailableForAndroid",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/esia/authAppleAvailable": {
      "get": {
        "tags": ["Esia"],
        "summary": "Получить признак доступности функционала удаленной идентификации для iOS",
        "operationId": "Esia_IsRemoteAuthAvailableForApple",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/esia/startAuth": {
      "post": {
        "tags": ["Esia"],
        "summary": "Запустить удаленную идентификацию через ЕСИА",
        "operationId": "Esia_StartAuthentication",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "startParams",
            "in": "body",
            "description": "Параметры запуска",
            "required": true,
            "schema": { "$ref": "#/definitions/StartEsiaAuthParams" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/esia/startVerification": {
      "post": {
        "tags": ["Esia"],
        "summary": "Инициировать верификацию в ЕБС",
        "operationId": "Esia_StartVerification",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "authCodeResponseParams",
            "in": "body",
            "description": "Ответ на запрос авторизационного кода",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/KeyValueDto" }
            }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/esia/endVerification/{tokenState}": {
      "post": {
        "tags": ["Esia"],
        "summary": "Обработать результат верификации в ЕБС",
        "operationId": "Esia_EndVerification",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "tokenState",
            "in": "path",
            "description": "Идентификатор токена",
            "required": true,
            "type": "string"
          },
          {
            "name": "verificationResponse",
            "in": "body",
            "description": "Результат биометрической верификации (verifyToken, expired)",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/KeyValueDto" }
            }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/esia/receivePersonalData": {
      "post": {
        "tags": ["Esia"],
        "summary": "Получить расширенный результат верификации и персональные данные",
        "operationId": "Esia_ReceivePersonalData",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "authCodeResponseParams",
            "in": "body",
            "description": "Ответ на запрос авторизационного кода",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/KeyValueDto" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ReceivePersonalDataResult" }
          }
        }
      }
    },
    "/esia/cryptoApiAvailable": {
      "get": {
        "tags": ["Esia"],
        "summary": "Доступность УИ средствами криптопровайдера",
        "operationId": "Esia_CryptoApiAvailable",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "system",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2]
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/esia/startAuthCryptoApi": {
      "post": {
        "tags": ["Esia"],
        "summary": "Запустить удаленную идентификацию через ЕСИА",
        "operationId": "Esia_StartAuthenticationCryptoApi",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "startParams",
            "in": "body",
            "description": "Параметры запуска",
            "required": true,
            "schema": { "$ref": "#/definitions/StartEsiaAuthParams" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/esia/receiveResultCryptoApi": {
      "post": {
        "tags": ["Esia"],
        "summary": "Инициировать верификацию в ЕБС",
        "operationId": "Esia_ReceiveVerificationResult",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/esia/startRemoteAuthOperation": {
      "post": {
        "tags": ["Esia"],
        "summary": "Получить расширенный результат верификации и персональные данные",
        "operationId": "Esia_StartRemoteAuthOperation",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "resSecret",
            "in": "query",
            "description": "параметр, который пользователь предъявляет PSB-Retail по завершению протокола удаленной идентификации для выполнения бизнес-операции в Банке аутентифицированным образом.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ReceivePersonalDataResult" }
          }
        }
      }
    },
    "/eWalletAssociations/{associationID}/deleteRequests": {
      "post": {
        "tags": ["EwalletAssociations"],
        "summary": "Удаление привязки электронного кошелька",
        "operationId": "EwalletAssociations_DeleteEWalletAssociation",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "associationID",
            "in": "path",
            "description": "Идентификатор привязки",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/eWalletAssociations": {
      "get": {
        "tags": ["EwalletAssociations"],
        "summary": "Получение",
        "operationId": "EwalletAssociations_GetEWalletAssociations",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/EWalletAssociation" }
            }
          }
        }
      }
    },
    "/FeatureToggles": {
      "get": {
        "tags": ["FeatureToggles"],
        "summary": "Возвращает список доступных функций",
        "operationId": "FeatureToggles_GetCacheFeatureToggles",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      }
    },
    "/FeatureToggles/{featureCode}": {
      "get": {
        "tags": ["FeatureToggles"],
        "summary": "Возвращает доступна ли функция",
        "operationId": "FeatureToggles_GetCacheFeatureToggle",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "featureCode",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/feed": {
      "get": {
        "tags": ["Feed"],
        "summary": "list",
        "operationId": "Feed_Get",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "searchId",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/FeedResult" }
          }
        }
      }
    },
    "/feed/enabled": {
      "get": {
        "tags": ["Feed"],
        "summary": "Дотсупна ли лента",
        "operationId": "Feed_Enabled",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/forex/getClientInfo": {
      "get": {
        "tags": ["Forex"],
        "summary": "Возвращает информацию о Форекс-клиенте.",
        "operationId": "Forex_GetClientInfo",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ForexClientInfo" }
          }
        }
      }
    },
    "/forex/confirmDenial": {
      "get": {
        "tags": ["Forex"],
        "summary": "Подтверждение от клиента, что клиент ознакомился с причиной отказа в заключении Форекс-договора.",
        "operationId": "Forex_ConfirmDenial",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/forex/isForexFrontEndEnabled": {
      "get": {
        "tags": ["Forex"],
        "summary": "Доступность Форекса на front-end",
        "operationId": "Forex_IsForexFrontEndEnabled",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/gosuslugi/startAuth": {
      "post": {
        "tags": ["Gosuslugi"],
        "summary": "Запустить идентификацию через ЕСИА(госуслуги, неавторизованная зона)",
        "operationId": "Gosuslugi_GosuslugiStartAuthentication",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/MarketplaceProductOrderParams" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/gosuslugi/startOAuthAccess": {
      "post": {
        "tags": ["Gosuslugi"],
        "summary": "Инициировать \"обмен\" кода на авторизационный доступ OAuth и получение персональных данных",
        "operationId": "Gosuslugi_StartOAuthAccess",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "authCodeResponseParams",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/KeyValueDto" }
            }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/gosuslugi/marketplaceZeroStepData": {
      "post": {
        "tags": ["Gosuslugi"],
        "summary": "Получить данные для нулевого шага",
        "operationId": "Gosuslugi_GetZeroStepData",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ZeroStepClientDataResponse" }
          }
        }
      }
    },
    "/gosuslugi/extendGosuslugiSession": {
      "post": {
        "tags": ["Gosuslugi"],
        "summary": "Расширить сессию клиента с использованием данных из госуслуг",
        "operationId": "Gosuslugi_ExtendGosuslugiSession",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "consents",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/ClientAgreements" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/gosuslugi/startAccountConfirmation": {
      "post": {
        "tags": ["Gosuslugi"],
        "summary": "Запустить операцию подтверждение ученой записи в госуслугах",
        "operationId": "Gosuslugi_StartAccountConfirmationOperation",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/gosuslugi/needAccountConfirm": {
      "get": {
        "tags": ["Gosuslugi"],
        "summary": "Получить признак необходимости подтверждения УЗ госуслуг",
        "description": "Проверяет только по регистрациям у нас в банке",
        "operationId": "Gosuslugi_ClientNeedAccountConfirmation",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/gosuslugi/accConfirmAvailable": {
      "get": {
        "tags": ["Gosuslugi"],
        "summary": "Получить признак доступности функционала подтверждение учетной записи в госуслугах",
        "operationId": "Gosuslugi_IsAccountConfirmationAvailable",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/history/all/paginated": {
      "get": {
        "tags": ["History"],
        "summary": "Возвращает пейджинированную историю всех операций клиента за период",
        "operationId": "History_GetPaginatedUnifiedHistory",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "filterParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filterParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filterParams.sumFrom",
            "in": "query",
            "description": "Сумма с",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "filterParams.sumTo",
            "in": "query",
            "description": "Сумма по",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "filterParams.operationsKind",
            "in": "query",
            "description": "Вид операции",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2]
          },
          {
            "name": "filterParams.searchString",
            "in": "query",
            "description": "Строка поиска",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterParams.sortDirection",
            "in": "query",
            "description": "Направление сортировки",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2]
          },
          {
            "name": "filterParams.unifiedHistoryMode",
            "in": "query",
            "description": "Режим отображения элементов списка",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2]
          },
          {
            "name": "filterParams.nativeId",
            "in": "query",
            "description": "Идентификатор счета",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "filterParams.nativeType",
            "in": "query",
            "description": "Тип счета",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3]
          },
          {
            "name": "filterParams.requestsMode",
            "in": "query",
            "description": "Режим отображения поручений",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2]
          },
          {
            "name": "filterParams.transactionsMode",
            "in": "query",
            "description": "Режим отображения транзакций по карточным счетам и счетам пользователя",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2, 3, 4, 5]
          },
          {
            "name": "filterParams.operationsMode",
            "in": "query",
            "description": "Режим отображения операции",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2, 3, 4]
          },
          {
            "name": "pageParams.pageSize",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageParams.pageNumber",
            "in": "query",
            "description": "Номер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/PaginatedUnifiedHistory" }
          }
        }
      }
    },
    "/history/last": {
      "get": {
        "tags": ["History"],
        "summary": "Возвращает список истории последних операций клиента",
        "description": "Количество дней по умолчанию, за которые получаем данные - 7 дней.\r\nРазмер страницы по умолчанию - 20 записей.",
        "operationId": "History_GetLastUnifiedHistory",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "unifiedHistoryMode",
            "in": "query",
            "description": "Режим отображения элементов списка",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2]
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Размер страницы по умолчанию",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/UnifiedHistoryItem" }
            }
          }
        }
      }
    },
    "/history/productFilterItems": {
      "get": {
        "tags": ["History"],
        "summary": "Возвращает список элементов для фильтра продуктов общей истории",
        "operationId": "History_GetUnifiedHistoryProductFilterItems",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/HistoryProductFilterItem" }
            }
          }
        }
      }
    },
    "/history/accounts": {
      "get": {
        "tags": ["History"],
        "summary": "Возвращает список информации по счетам клиента",
        "operationId": "History_GetAccountsInfo",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/NativeInfo" }
            }
          }
        }
      }
    },
    "/history/requests/{requestId}/documents": {
      "get": {
        "tags": ["History"],
        "summary": "Возвращает список документов операции",
        "operationId": "History_GetRequestDocuments",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Document" }
            }
          }
        }
      }
    },
    "/importedOperations": {
      "get": {
        "tags": ["ImportedOperationsHistory"],
        "summary": "получение истории операций",
        "operationId": "ImportedOperationsHistory_GetHistory",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "valueDateSortDirection",
            "in": "query",
            "description": "Сортировка по дате совершения операции\r\n    1 - по возрастанию\r\n    2 - по убыванию",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Номер страницы для загрузки",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "dateEnd",
            "in": "query",
            "description": "Интервал даты совершения операции (правая граница)",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "dateStart",
            "in": "query",
            "description": "Интервал даты совершения операции (левая граница)",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "namePattern",
            "in": "query",
            "description": "Наименование операции",
            "required": false,
            "type": "string"
          },
          {
            "name": "sumFrom",
            "in": "query",
            "description": "Сумма операции (левая граница)",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "sumTo",
            "in": "query",
            "description": "Сумма операции (правая граница)",
            "required": false,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImportedOperationsHistoryResponse"
            }
          }
        }
      }
    },
    "/importedOperations/{importedOperationHistoryId}/parameters": {
      "get": {
        "tags": ["ImportedOperationsHistory"],
        "summary": "получение параметров импортированной операции",
        "operationId": "ImportedOperationsHistory_GetHistoryParameters",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "importedOperationHistoryId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ImportedOperationParam" }
            }
          }
        }
      }
    },
    "/importedOperations/anyImportedHistory": {
      "get": {
        "tags": ["ImportedOperationsHistory"],
        "summary": "Проверить наличие у клиента импортированной истории",
        "operationId": "ImportedOperationsHistory_GetExistanceOfImportedHistory",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/insurances/cumulativeLifeInsurances": {
      "get": {
        "tags": ["Insurances"],
        "summary": "Возвращает страхования клиента",
        "operationId": "Insurances_GetCumulativeLifeInsurances",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "activeOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PaymentInsuranceContract" }
            }
          }
        }
      }
    },
    "/insurances/{insuranceContractId}": {
      "get": {
        "tags": ["Insurances"],
        "summary": "Возвращает информацию по контракту страхования",
        "operationId": "Insurances_GetInsuranceContract",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "insuranceContractId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/PaymentInsuranceContract" }
          }
        }
      }
    },
    "/insurances/{insuranceContractId}/deactivateInsuranceContract": {
      "post": {
        "tags": ["Insurances"],
        "summary": "Деактивировать контракт страхования",
        "operationId": "Insurances_DeactivateInsuranceContract",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "insuranceContractId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/investments/exists": {
      "get": {
        "tags": ["Investments"],
        "summary": "Возвращает, есть ли у клиента какие-либо данные по брокерскому обслуживанию",
        "operationId": "Investments_IsExists",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/investments": {
      "get": {
        "tags": ["Investments"],
        "summary": "Возвращает контракты и заявки на инвестиционные счета",
        "operationId": "Investments_Get",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "activeOnly",
            "in": "query",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/InvestmentData" }
          }
        }
      }
    },
    "/investments/applications/{applicationId}": {
      "get": {
        "tags": ["Investments"],
        "summary": "Возвращает информацию по заявке",
        "operationId": "Investments_GetApplication",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/BrokerageApplication" }
          }
        }
      }
    },
    "/investments/{contractId}": {
      "get": {
        "tags": ["Investments"],
        "summary": "Возвращает информацию по контракту",
        "operationId": "Investments_GetContract",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/InvestmentContract" }
          }
        }
      }
    },
    "/investments/applications/{applicationId}/edit": {
      "post": {
        "tags": ["Investments"],
        "summary": "Запускает операцию редактирования заявки брокерского договора",
        "operationId": "Investments_RunEditApplication",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/investments/applications/create": {
      "post": {
        "tags": ["Investments"],
        "summary": "Запускает операцию создание заявки на открытие инвестиционного счета",
        "operationId": "Investments_RunCreateApplicationIndividualInvestmentAccount",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/investments/applications/createStrategy/{strategy}": {
      "post": {
        "tags": ["Investments"],
        "summary": "Запускает операцию создание заявки на открытие инвестиционного счета",
        "operationId": "Investments_RunCreateApplicationIndividualInvestmentAccountStrategy",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "strategy",
            "in": "path",
            "description": "Стратегия.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/investments/createContract": {
      "post": {
        "tags": ["Investments"],
        "summary": "Запускает операцию создание договора индивидуального инвестиционного счета",
        "operationId": "Investments_CreateContract",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/investments/createContractStrategy/{strategy}": {
      "post": {
        "tags": ["Investments"],
        "summary": "Запускает операцию создание договора индивидуального инвестиционного счета",
        "operationId": "Investments_CreateContractStrategy",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "strategy",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/investments/{contractId}/edit": {
      "post": {
        "tags": ["Investments"],
        "summary": "Запускает операцию изменения договора",
        "operationId": "Investments_RunEdit",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "Операция",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/investments/{contractId}/close": {
      "post": {
        "tags": ["Investments"],
        "summary": "Запускает операцию закрытия договора",
        "operationId": "Investments_RunClose",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "Операция",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/investments/createAppOrContract": {
      "post": {
        "tags": ["Investments"],
        "summary": "Запускает операцию создания заявки брокерского договора",
        "operationId": "Investments_RunCreateApplicationOrContract",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/investments/{contractId}/keys/registration": {
      "post": {
        "tags": ["Investments"],
        "summary": "Запускает операцию регистрация ключа Quik",
        "operationId": "Investments_RunQuikKeyRegistration",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "Операция",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/investments/applications/{applicationId}/keys/registration": {
      "post": {
        "tags": ["Investments"],
        "summary": "Запускает операцию регистрация ключа Quik по заявке",
        "operationId": "Investments_RunQuikKeyRegistrationByApplication",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "Операция",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/investments/{contractId}/webquik/obtain": {
      "post": {
        "tags": ["Investments"],
        "summary": "Запускает операцию выдача логина и пароля доступа WebQUIK",
        "operationId": "Investments_RunWebQuikKeyObtain",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "Операция",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/investments/{contractId}/webquik/annul": {
      "post": {
        "tags": ["Investments"],
        "summary": "Запускает операцию аннулирования ключа WebQUIK",
        "operationId": "Investments_RunWebQuikKeyAnnul",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "Операция",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/investments/{contractId}/quikKeyXtraAction": {
      "post": {
        "tags": ["Investments"],
        "summary": "Запускает операцию дополнительных действия с ключом Quik",
        "operationId": "Investments_RunQuikKeyXtraAction",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "Операция",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/investments/keys/{quikKeyId}/annul": {
      "post": {
        "tags": ["Investments"],
        "summary": "Запускает операцию аннулирования ключа Quik",
        "operationId": "Investments_RunQuikKeyAnnul",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "quikKeyId",
            "in": "path",
            "description": "Операция",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/investments/keys/{quikKeyId}/lock": {
      "post": {
        "tags": ["Investments"],
        "summary": "Запускает операцию временной блокировки ключа",
        "operationId": "Investments_RunQuikKeyLockAction",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "quikKeyId",
            "in": "path",
            "description": "Идентификатор ключа",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/investments/keys/{quikKeyId}/unlock": {
      "post": {
        "tags": ["Investments"],
        "summary": "Запускает операцию разблокировки ключа",
        "operationId": "Investments_RunQuikKeyUnlockAction",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "quikKeyId",
            "in": "path",
            "description": "Идентификатор ключа",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/investments/{contractId}/voiceRegistries": {
      "get": {
        "tags": ["Investments"],
        "summary": "Возвращает реестры на подпись",
        "operationId": "Investments_GetVoiceRegistries",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/VoiceRegistry" }
            }
          }
        }
      }
    },
    "/investments/voiceRegistries/{registryId}/downloadable": {
      "get": {
        "tags": ["Investments"],
        "summary": "Возвращает содержимое реестра",
        "operationId": "Investments_GetVoiceRegistryContent",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/investments/voiceRegistries/{registryId}/sign": {
      "post": {
        "tags": ["Investments"],
        "summary": "Запускает операцию подписи реестров голосовых сообщений",
        "operationId": "Investments_RunSignVoiceRegistry",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "Реестр",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/investments/{contractId}/replenish": {
      "post": {
        "tags": ["Investments"],
        "summary": "Запускает операцию пополнение брокерского счета",
        "operationId": "Investments_RunReplenishment",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "Операция",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/investments/{contractId}/changeHighRiskLevel": {
      "post": {
        "tags": ["Investments"],
        "summary": "Запускает операцию изменения уровня риска по брокерскому договору",
        "operationId": "Investments_RunChangeHighRiskLevel",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "Операция",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/investments/{contractId}/offerAcceptance": {
      "post": {
        "tags": ["Investments"],
        "summary": "Запускает операцию акцепта оферты.",
        "operationId": "Investments_RunOfferAcceptance",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "ID договора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/investments/{contractId}/depoAccountReportRequest": {
      "post": {
        "tags": ["Investments"],
        "summary": "Запускает операцию запроса на выписку по счету депо.",
        "operationId": "Investments_RunDepoAccountReportRequest",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "ID договора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/investments/{contractId}/currencyAccountOpening": {
      "post": {
        "tags": ["Investments"],
        "summary": "Запускает операцию открытия брокерского счета в иностранной валюте.",
        "operationId": "Investments_RunCurrencyAccountOpening",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "ID договора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/investments/{contractId}/taxReportRequest": {
      "post": {
        "tags": ["Investments"],
        "summary": "Запускает операцию запроса налоговой справки.",
        "operationId": "Investments_RunTaxReportRequest",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "ID договора.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/investments/taxReports": {
      "get": {
        "tags": ["Investments"],
        "summary": "Загружает список налоговых справок.",
        "operationId": "Investments_GetTaxReports",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "begDate",
            "in": "query",
            "description": "Начальная дата временного интервала, за который необходимо искать справки (может быть null для поиска с начала времен).",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Конечная дата временного интервала, за который необходимо искать справки (может быть null для по текущий момент).",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "pageParams.pageSize",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageParams.pageNumber",
            "in": "query",
            "description": "Номер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TaxReportHistory" }
          }
        }
      }
    },
    "/investments/taxReports/{reportId}": {
      "get": {
        "tags": ["Investments"],
        "summary": "Загружает налоговую справку.",
        "operationId": "Investments_GetTaxReport",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "ID справки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/investments/goToInvestments": {
      "get": {
        "tags": ["Investments"],
        "summary": "Получает URL для входа в инвестиции.",
        "operationId": "Investments_GetInvestmentsUrl",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/investments/getInvestmentsToken": {
      "get": {
        "tags": ["Investments"],
        "summary": "Получает токен для входа в инвестиции.",
        "operationId": "Investments_GetInvestmentsToken",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TokenResponse" }
          }
        }
      }
    },
    "/investments/refreshInvestmentsToken": {
      "post": {
        "tags": ["Investments"],
        "summary": "Обменивает refresh-токен на токен для входа в инвестиции.",
        "operationId": "Investments_RefreshInvestmentsToken",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "refreshToken",
            "in": "body",
            "description": "Refresh-токен.",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TokenResponse" }
          }
        }
      }
    },
    "/investments/getInvestmentsDataApiUrl": {
      "get": {
        "tags": ["Investments"],
        "summary": "URL API для получения клиентских данных (суммы по договорам) из ЛКИ (Используется только для \"старого\" сайта)",
        "operationId": "Investments_GetInvestmentsDataApiUrl",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/investments/product/{productCode}": {
      "get": {
        "tags": ["Investments"],
        "summary": "Возвращает запрошенный продукт из Продуктового каталога. Аналог метода marketProducts/product/{productCode},\r\nно изменяет вывод метода в зависимости от тех или иных характеристик клиента.\r\nИспользуется для Лендингов раздела Инвестиции.",
        "operationId": "Investments_GetProduct",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "preset",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/MarketProductItem" }
          }
        }
      }
    },
    "/investshowcase": {
      "get": {
        "tags": ["InvestShowcase"],
        "summary": "Возвращает данные для витрины инвест продуктов",
        "operationId": "InvestShowcase_GetShowcase",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/InvestShowCaseInfo" }
          }
        }
      }
    },
    "/investshowcase/newproducts": {
      "get": {
        "tags": ["InvestShowcase"],
        "summary": "Возвращает данные для экрана \"Новый продукт\" (Инвестиции)",
        "operationId": "InvestShowcase_GetNewProductsView",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/InvestNewProductView" }
          }
        }
      }
    },
    "/invoices/{invoiceId}": {
      "get": {
        "tags": ["Invoices"],
        "summary": "Возвращает информацию о счете",
        "operationId": "Invoices_GetInvoice",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Invoice" }
          }
        }
      },
      "delete": {
        "tags": ["Invoices"],
        "summary": "Удаление счета",
        "operationId": "Invoices_DeleteInvoice",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/invoices/unpaid/count": {
      "get": {
        "tags": ["Invoices"],
        "summary": "Возвращает число неоплаченных счетов",
        "operationId": "Invoices_GetUnpaidInvoicesCount",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/invoices/unpaid": {
      "get": {
        "tags": ["Invoices"],
        "summary": "Возвращает список неоплаченных счетов",
        "operationId": "Invoices_GetUnpaidInvoices",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Invoice" }
            }
          }
        }
      }
    },
    "/invoices/{invoiceId}/payRequests": {
      "post": {
        "tags": ["Invoices"],
        "summary": "Оплатить счет",
        "operationId": "Invoices_PayInvoice",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/invoices/{invoiceId}/postponeRequests": {
      "post": {
        "tags": ["Invoices"],
        "summary": "Отложить оплату платежа. Переводится в режим ручной оплаты",
        "operationId": "Invoices_PostponeInvoice",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/invoices/{invoiceId}/cancelRequests": {
      "post": {
        "tags": ["Invoices"],
        "summary": "Отменить автоматический платеж",
        "operationId": "Invoices_CancelInvoice",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/invoices/processNewInvoice/{invoiceKey}": {
      "get": {
        "tags": ["Invoices"],
        "summary": "Добавляет незарегистрированный счет текущему клиенту",
        "operationId": "Invoices_ProcessNewInvoice",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "invoiceKey",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/lifeGoals/templates": {
      "get": {
        "tags": ["LifeGoals"],
        "summary": "Возвращает шаблоны целей",
        "operationId": "LifeGoals_GetTemplates",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "customLifeGoalImageId",
            "in": "query",
            "description": "id выбранной цели",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/LifeGoalTemplate" }
            }
          }
        }
      }
    },
    "/lifeGoals/images": {
      "post": {
        "tags": ["LifeGoals"],
        "summary": "Сохраняет изображение для последующей привязки его к цели",
        "operationId": "LifeGoals_SaveLifeGoalImage",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "image",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/LifeGoalImage" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/lifeGoals/images/{lifeGoalImageId}/url": {
      "get": {
        "tags": ["LifeGoals"],
        "summary": "Возвращает Url для изображения в кэше",
        "operationId": "LifeGoals_GetImageUriPath",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "lifeGoalImageId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/lifeGoals/exists": {
      "get": {
        "tags": ["LifeGoals"],
        "summary": "Возвращает, есть ли у клиента доступные для отображения цели",
        "operationId": "LifeGoals_IsLifeGoalsExists",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/lifeGoals": {
      "get": {
        "tags": ["LifeGoals"],
        "summary": "Возвращает список целей по клиенту. Начиная с 15.11.2019 для dashboard нужно использовать облегченный метод GetLifeGoalsLite",
        "operationId": "LifeGoals_GetLifeGoals",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/LifeGoal" }
            }
          }
        }
      }
    },
    "/lifeGoals/dashboard": {
      "get": {
        "tags": ["LifeGoals"],
        "summary": "Возвращает список целей по клиенту для панели инструментов. Используется с 15.11.2019 взамен тяжелого метода GetLifeGoals",
        "operationId": "LifeGoals_GetLifeGoalsLite",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/LifeGoal" }
            }
          }
        }
      }
    },
    "/lifeGoals/{lifeGoalId}": {
      "get": {
        "tags": ["LifeGoals"],
        "summary": "Возвращает цель по идентификатору",
        "operationId": "LifeGoals_GetLifeGoal",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "lifeGoalId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LifeGoal" }
          }
        }
      }
    },
    "/lifeGoals/{lifeGoalId}/name": {
      "put": {
        "tags": ["LifeGoals"],
        "summary": "Переименовывает цель",
        "operationId": "LifeGoals_RenameLifeGoal",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "lifeGoalId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "body",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/lifeGoals/create": {
      "post": {
        "tags": ["LifeGoals"],
        "summary": "Запускает операцию создания цели",
        "operationId": "LifeGoals_CreateLifeGoal",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/lifeGoals/{lifeGoalId}/modify": {
      "post": {
        "tags": ["LifeGoals"],
        "summary": "Запускает операцию изменения цели",
        "operationId": "LifeGoals_ModifyLifeGoal",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "lifeGoalId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/lifeGoals/{lifeGoalId}/cancel": {
      "post": {
        "tags": ["LifeGoals"],
        "summary": "Запускает операцию отмены цели",
        "operationId": "LifeGoals_CancelLifeGoal",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "lifeGoalId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/loans/application/downloadable": {
      "get": {
        "tags": ["Loans"],
        "summary": "Возвращает бланк \"Заявление\" для кредитной анкеты",
        "operationId": "Loans_GetPreliminaryLoanContractTaskApplicationDocumentReport",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "proposalId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "decisionId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "voluntaryHealthInsurance",
            "in": "query",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "officeId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "loanSum",
            "in": "query",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "delta",
            "in": "query",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/loans": {
      "get": {
        "tags": ["Loans"],
        "summary": "Возвращает информацию по ссудам вместе с заявками (в т.ч. и не выданными) и статусе кредита в один клик",
        "operationId": "Loans_GetLoansData",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "activeOnly",
            "in": "query",
            "description": "Если значение равно true, то возвращаеются только действующие заявки и ссуды.\r\n            Если значение равно false, то возвращаются все заявки и ссуды (действующие, закрытые, истекшие)",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoansData" }
          }
        }
      }
    },
    "/loans/mortgages": {
      "get": {
        "tags": ["Loans"],
        "summary": "Возвращает информацию по ипотечным ссудам вместе с заявками (в т.ч. и не выданными)",
        "operationId": "Loans_GetMortgageLoansData",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "activeOnly",
            "in": "query",
            "description": "Если значение равно true, то возвращаеются только действующие заявки и ссуды.\r\n            Если значение равно false, то возвращаются все заявки и ссуды (действующие, закрытые, истекшие)",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoansData" }
          }
        }
      }
    },
    "/loans/{contractId}": {
      "get": {
        "tags": ["Loans"],
        "summary": "Возвращает информацию по ссуде",
        "operationId": "Loans_GetLoan",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoanContract" }
          }
        }
      }
    },
    "/loans/{contractId}/statistics": {
      "get": {
        "tags": ["Loans"],
        "summary": "Возвращает статистику по кредиту",
        "operationId": "Loans_GetLoanRepaymentStatistics",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "кредит",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoanRepaymentStatistics" }
          }
        }
      }
    },
    "/loans/applications/{applicationId}": {
      "get": {
        "tags": ["Loans"],
        "summary": "Возвращает заявку на кредит",
        "operationId": "Loans_GetLoanApplicationById",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "заявка",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoanApplication" }
          }
        }
      }
    },
    "/loans/{contractId}/schedule/{requestId}": {
      "get": {
        "tags": ["Loans"],
        "summary": "Возвращает консолидированный график по ссуде",
        "operationId": "Loans_GetLoanSchedule",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/LoanScheduleItem" }
            }
          }
        }
      }
    },
    "/loans/{contractId}/fullrepaymentsums": {
      "get": {
        "tags": ["Loans"],
        "summary": "Возвращает суммы полного досрочного погашения по кредиту",
        "operationId": "Loans_GetLoanFullRepaymentSums",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "date",
            "in": "query",
            "description": "По умолчанию сумма возвращается на текущую дату",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoanRepaymentSums" }
          }
        }
      }
    },
    "/loans/calculator/initialData": {
      "get": {
        "tags": ["Loans"],
        "summary": "Получение начальных данных для построения калькулятора",
        "operationId": "Loans_GetLoanCalculatorInitialData",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/LoanCalculatorInitialData" }
            }
          }
        },
        "deprecated": true
      }
    },
    "/loans/calculator/result": {
      "get": {
        "tags": ["Loans"],
        "summary": "Получение предварительного результата расчета кредита",
        "operationId": "Loans_GetLoanCalculatorResult",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "loanCalculatorParams.loanProgramId",
            "in": "query",
            "description": "Программа кредитования",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "loanCalculatorParams.mortgageRealtyType",
            "in": "query",
            "description": "Типы недвижимости (для калькулятора)",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2]
          },
          {
            "name": "loanCalculatorParams.mortgagePurchaseType",
            "in": "query",
            "description": "Типы приобретения жилья (для калькулятора)",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4, 5]
          },
          {
            "name": "loanCalculatorParams.sum",
            "in": "query",
            "description": "Сумма кредита",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "loanCalculatorParams.mortgageValue",
            "in": "query",
            "description": "Стоимость недвижимости",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "loanCalculatorParams.initialFee",
            "in": "query",
            "description": "Первоначальный взнос",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "loanCalculatorParams.monthlyIncome",
            "in": "query",
            "description": "Ежемесячный доход",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "loanCalculatorParams.lengthMonths",
            "in": "query",
            "description": "Срок кредита",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoanCalculatorResult" }
          }
        },
        "deprecated": true
      }
    },
    "/loans/calculator/result/sendByEmail": {
      "post": {
        "tags": ["Loans"],
        "summary": "Отправка предварительного результата расчета кредита",
        "operationId": "Loans_SendLoanCalculatorResultByEmail",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "sendLoanCalculatorResultByEmailParams",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendLoanCalculatorResultByEmailParams"
            }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/loans/applications/createRequests": {
      "post": {
        "tags": ["Loans"],
        "summary": "Запускает операцию создания кредитной заявки",
        "operationId": "Loans_CreateLoanApplication",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "loanRequestParams",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/LoanRequestParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        },
        "deprecated": true
      }
    },
    "/loans/{contractId}/applyForLoanVacationRequests": {
      "post": {
        "tags": ["Loans"],
        "summary": "Запускает операцию Кредитные каникулы для контракта",
        "operationId": "Loans_ApplyForLoanVacation",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/loans/{contractId}/applyForLoanInsuranceRequests": {
      "post": {
        "tags": ["Loans"],
        "summary": "Запускает операцию Оформление добровольной программы страхования для кредитного контракта",
        "operationId": "Loans_ApplyForLoanInsurance",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/loans/{applicationId}/applyForWaitIssueLoanInsuranceRequests": {
      "post": {
        "tags": ["Loans"],
        "summary": "Запускает операцию Оформление добровольной программы страхования для кредитной заявки находящейся в статусе \"Ожидает выдачу\"",
        "operationId": "Loans_ApplyForWaitIssueLoanInsuranceRequests",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/loans/{contractId}/applyForLoanYearInsuranceRequests": {
      "post": {
        "tags": ["Loans"],
        "summary": "Запускает операцию Оформление годовой страховки для кредитного контракта",
        "operationId": "Loans_ApplyForLoanYearInsurance",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/loans/instaLoanStatus": {
      "get": {
        "tags": ["Loans"],
        "summary": "Статус кредита в один клик",
        "operationId": "Loans_GetInstaLoanStatus",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "enum": [1, 2, 3, 4, 5, 6, 7, 8],
              "type": "integer"
            }
          }
        }
      }
    },
    "/loans/sidebarLoanProposals": {
      "get": {
        "tags": ["Loans"],
        "summary": "Кредитные предложения для отображения в сайдбаре",
        "operationId": "Loans_GetSidebarLoanProposals",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SidebarLoanProposalsResult" }
          }
        }
      }
    },
    "/loans/instaLoan": {
      "get": {
        "tags": ["Loans"],
        "summary": "Кредит в один клик. С 07.11.2019 логика инкапсулирована в методе GetLoansData",
        "operationId": "Loans_GetInstaLoan",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/InstaLoanResult" }
          }
        }
      }
    },
    "/loans/startInstaLoanRequest": {
      "post": {
        "tags": ["Loans"],
        "summary": "Запуск кредита в один клик",
        "operationId": "Loans_StartInstaLoanRequest",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/loans/noFormalitiesLoan": {
      "get": {
        "tags": ["Loans"],
        "summary": "Кредит \"без формальностей\"",
        "operationId": "Loans_GetNoFormalitiesLoan",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/NoFormalitiesResult" }
          }
        }
      }
    },
    "/loans/noFormalitiesLoanStatus": {
      "get": {
        "tags": ["Loans"],
        "summary": "Статус кредита без формальностей",
        "operationId": "Loans_GetNoFormalitiesLoanStatus",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "enum": [1, 2, 3],
              "type": "integer"
            }
          }
        }
      }
    },
    "/loans/startNoFormalitiesRequest/{proposalId}": {
      "post": {
        "tags": ["Loans"],
        "summary": "Запуск кредита без формальностей",
        "operationId": "Loans_StartNoFormalitiesRequest",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/loans/startInstaLoanNewLimitRequest": {
      "post": {
        "tags": ["Loans"],
        "summary": "Переподписание кредитной заявки в связи с изменением лимита",
        "operationId": "Loans_StartInstaLoanNewLimitRequest",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/loans/{applicationId}/processDecision": {
      "post": {
        "tags": ["Loans"],
        "summary": "Обработка выбранного решения по кредиту",
        "operationId": "Loans_StartProcessDecision",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "decisionParams",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DecisionParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/loans/{applicationId}/decisions": {
      "get": {
        "tags": ["Loans"],
        "summary": "Получение решений по кредитной заявке",
        "operationId": "Loans_GetLoanApplicationDecisions",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "Идентификатор кредитной заявки",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/LoanApplicationDecision" }
            }
          }
        }
      }
    },
    "/loans/{applicationId}/decisionsExtended": {
      "get": {
        "tags": ["Loans"],
        "summary": "Получение решений по кредитной заявке (расширенный)",
        "operationId": "Loans_GetLoanApplicationDecisionsExtended",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "Идентификатор кредитной заявки",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LoanApplicationDecisionToMobile"
            }
          }
        }
      }
    },
    "/loans/activeLoanWithAvaliableInsurance": {
      "get": {
        "tags": ["Loans"],
        "summary": "Возвращает информацию по ссуде, по которой доступно оформление страховки",
        "operationId": "Loans_GetActiveLoanWithAvaliableInsurance",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoanContract" }
          }
        }
      }
    },
    "/loans/{contractId}/fullRepayment": {
      "post": {
        "tags": ["Loans"],
        "summary": "Запускает операцию полного досрочного погашения кредита",
        "operationId": "Loans_LoanFullRepayment",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "идентификатор контракта",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/loans/{contractId}/advancedRepayment": {
      "post": {
        "tags": ["Loans"],
        "summary": "Запускает операцию частично досрочного погашения кредита",
        "operationId": "Loans_LoanAdvancedRepayment",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "идентификатор контракта",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/loans/calculator/advancedResult": {
      "get": {
        "tags": ["Loans"],
        "summary": "Получение предварительного результата расчета кредита",
        "operationId": "Loans_GetAdvancedLoanCalculatorResult",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "interestRate",
            "in": "query",
            "description": "Процентная ставка",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "sum",
            "in": "query",
            "description": "Сумма",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "lengthMonths",
            "in": "query",
            "description": "Срок в месяцах",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "delayMonth",
            "in": "query",
            "description": "Отсрочка первого платежа в месяцах",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "repaymentDay",
            "in": "query",
            "description": "День ЕП",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "brandID",
            "in": "query",
            "description": "Id бренда",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isInsuranceRequired",
            "in": "query",
            "description": "Признак обязательности страховки",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "maxSum",
            "in": "query",
            "description": "Максимально допустимая сумма",
            "required": false,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoanCalculatorResult" }
          }
        }
      }
    },
    "/loans/loansFAQ": {
      "get": {
        "tags": ["Loans"],
        "summary": "Получение справки (FAQ) по кредитам",
        "operationId": "Loans_GetLoansFAQ",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/FaqItemAttribute" }
            }
          }
        },
        "deprecated": true
      }
    },
    "/loans/operatorNameFAQ": {
      "get": {
        "tags": ["Loans"],
        "summary": "Получение имени виртуального оператора для FAQ в ИБ",
        "operationId": "Loans_GetVirtualOperatorNameFaq",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/loans/applicationState": {
      "get": {
        "tags": ["Loans"],
        "summary": "Получение справки (FAQ) по кредитам",
        "operationId": "Loans_GetApplicationState",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "applicationId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35
              ],
              "type": "integer"
            }
          }
        }
      }
    },
    "/loans/isConsumerLoanOperationAvailable": {
      "get": {
        "tags": ["Loans"],
        "summary": "Возвращает доступность запуска операции потребительского кредита для МБ.",
        "operationId": "Loans_IsConsumerLoanOperationAvailable",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        },
        "deprecated": true
      }
    },
    "/loans/{contractId}/schedule/downloadable": {
      "get": {
        "tags": ["Loans"],
        "summary": "Получение печатной формы графика платежей для скачивания",
        "operationId": "Loans_GetLoanScheduleReport",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "exportFormat",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4, 5]
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/loans/{contractId}/schedule/printable": {
      "get": {
        "tags": ["Loans"],
        "summary": "Получение печатной формы графика платежей для печати",
        "operationId": "Loans_GetCardStatementReportToPrint",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/loans/{contractId}/schedule/sendScheduleByEmail": {
      "post": {
        "tags": ["Loans"],
        "summary": "Отправляет график платежей по ссуде на e-mail",
        "operationId": "Loans_SendCardStatementByEmail",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "emailSendTo",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/loans/insuranceProposalResult": {
      "get": {
        "tags": ["Loans"],
        "summary": "Информация по предложению страховки",
        "operationId": "Loans_GetInsuranceProposalResult",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/InsuranceProposalResult" }
          }
        }
      }
    },
    "/loans/documentGroupsToLoad/{decisionId}": {
      "get": {
        "tags": ["Loans"],
        "summary": "Получает группы документов, ожидающих загрузку документов",
        "operationId": "Loans_GetDocumentGroupsToLoad",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "decisionId",
            "in": "path",
            "description": "Id решения",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LoanApplicationDecisionLoadDocumentGroup"
              }
            }
          }
        }
      }
    },
    "/loans/documentGroupsToLoadWithComments/{applicationId}": {
      "get": {
        "tags": ["Loans"],
        "summary": "Получает группы документов, ожидающих загрузку документов с коментариями L0",
        "operationId": "Loans_GetDocumentGroupsToLoadWithComments",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "Id заявки",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LoanApplicationDecisionLoadDocumentGroup"
              }
            }
          }
        }
      }
    },
    "/loans/loadApplicationContent": {
      "post": {
        "tags": ["Loans"],
        "summary": "Загружает контент (файл, СНИЛС) к заявке",
        "operationId": "Loans_LoadApplicationContent",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "loadApplicationContent",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/LoadLoanApplicationContent" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/loans/deleteApplicationFile/{documentImageId}": {
      "delete": {
        "tags": ["Loans"],
        "summary": "Удаляет файл присоединённый к заявке",
        "operationId": "Loans_DeleteApplicationFile",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "documentImageId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/loans/deleteApplicationFilesByLoanDocumentId": {
      "delete": {
        "tags": ["Loans"],
        "summary": "Удаляет присоединённые файлы к заявке в рамках одного документа",
        "operationId": "Loans_DeleteApplicationFilesByLoanDocumentId",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "applicationId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "loanDocumentId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/loans/sendDocumentToScoring": {
      "post": {
        "tags": ["Loans"],
        "summary": "Отправить анкету на скоринг",
        "operationId": "Loans_SendDocumentToScoring",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "decisionIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/loans/sendApplicationToVerification": {
      "post": {
        "tags": ["Loans"],
        "summary": "Отправляет поручение на этап проверки",
        "operationId": "Loans_SendApplicationToVerification",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "query",
            "description": "Id поручения",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/loans/isDocumentLoadRemotelyAvailable": {
      "post": {
        "tags": ["Loans"],
        "summary": "Доступна ли загрузка документов в ИБ/МБ",
        "operationId": "Loans_IsDocumentLoadRemotelyAvailable",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "query",
            "description": "Id поручения",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/loans/{contractId}/clientLabel": {
      "put": {
        "tags": ["Loans"],
        "summary": "Обновление клиентского наименования",
        "operationId": "Loans_SetClientLabel",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "clientLabel",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/loans/loanAggregator/state": {
      "get": {
        "tags": ["LoansAggregator"],
        "summary": "Возвращает состояние кредитного агрегатора",
        "operationId": "LoansAggregator_LoanAggregatorState",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoanAggregatorState" }
          }
        }
      }
    },
    "/loans/loanAggregator/aggregatorDecisions": {
      "get": {
        "tags": ["LoansAggregator"],
        "summary": "Возвращает решения кредитного агрегатора",
        "operationId": "LoansAggregator_LoanAggregatorDecisions",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoanAggregatorData" }
          }
        }
      }
    },
    "/loans/loanAggregator/activate": {
      "post": {
        "tags": ["LoansAggregator"],
        "summary": "Активация решения кредитного агрегатора",
        "operationId": "LoansAggregator_ActivateDecision",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "activateData",
            "in": "body",
            "description": "Параметры решения кредитного агрегатора для активации",
            "required": true,
            "schema": { "$ref": "#/definitions/LoanAggregatorActivateData" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/loans/v2/loanAggregator/state": {
      "get": {
        "tags": ["LoansAggregatorV2"],
        "summary": "Возвращает состояние кредитного агрегатора",
        "operationId": "LoansAggregatorV2_GetState",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoansAggregatorState" }
          }
        }
      }
    },
    "/loans/v2/loanAggregator": {
      "get": {
        "tags": ["LoansAggregatorV2"],
        "summary": "Возвращает решения кредитного агрегатора",
        "operationId": "LoansAggregatorV2_GetOffers",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoansAggregatorRetailResponse" }
          }
        }
      }
    },
    "/loans/v2/loanAggregator/aggregate": {
      "get": {
        "tags": ["LoansAggregatorV2"],
        "summary": "Заполняет решениями сервис кредитного агрегатора",
        "operationId": "LoansAggregatorV2_Aggregate",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/loans/v2/loanAggregator/activate": {
      "post": {
        "tags": ["LoansAggregatorV2"],
        "summary": "Активация решения кредитного агрегатора",
        "operationId": "LoansAggregatorV2_Activate",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "clientData",
            "in": "body",
            "description": "Параметры решения кредитного агрегатора для активации",
            "required": true,
            "schema": { "$ref": "#/definitions/LoansAggregatorActivateCommand" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/loans/v2/loanAggregator/calculate": {
      "post": {
        "tags": ["LoansAggregatorV2"],
        "summary": "Получение предварительного результата расчета кредита",
        "operationId": "LoansAggregatorV2_Calculate",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "clientData",
            "in": "body",
            "description": "Параметры решения кредитного агрегатора для расчета",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoansAggregatorCalculateCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LoansAggregatorCalculateResponse"
            }
          }
        }
      }
    },
    "/loans/v2/loanAggregator/calculateList": {
      "post": {
        "tags": ["LoansAggregatorV2"],
        "summary": "Получение предварительного результата расчета кредита",
        "operationId": "LoansAggregatorV2_CalculateList",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "clientData",
            "in": "body",
            "description": "Параметры решения кредитного агрегатора для расчета",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LoansAggregatorCalculateCommand"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LoansAggregatorCalculateResponse"
              }
            }
          }
        }
      }
    },
    "/localities/federalDistricts": {
      "get": {
        "tags": ["Localities"],
        "summary": "Возвращает список регионов",
        "operationId": "Localities_GetFederalDistricts",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/FederalDistrict" }
            }
          }
        }
      }
    },
    "/localities/federalDistricts/{federalDistrictId}/localities": {
      "get": {
        "tags": ["Localities"],
        "summary": "Возвращает список населенных пунктов для заданного региона",
        "operationId": "Localities_GetLocalities",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "federalDistrictId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Locality" }
            }
          }
        }
      }
    },
    "/localities/mostPriorityLocalities": {
      "get": {
        "tags": ["Localities"],
        "summary": "Возвращает список наиболее приоритетных населенных пунктов",
        "operationId": "Localities_GetMostPriorityLocalities",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Locality" }
            }
          }
        }
      }
    },
    "/loyalty": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Возвращает информацию по бонусной программе",
        "operationId": "Loyalty_Get",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Loyalty" }
          }
        }
      }
    },
    "/loyalty/program": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Возвращает информацию по бонусной программе",
        "operationId": "Loyalty_GetByProgram",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "programType",
            "in": "query",
            "description": "Бонусная программа",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4, 5, 6, 7]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Loyalty" }
          }
        }
      }
    },
    "/loyalty/isFlagmanActivateAllowed": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Можно ли активировать программу лояльности ZFLG - флагман",
        "operationId": "Loyalty_IsFlagmanActivateAllowed",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/loyalty/programByTariff": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Возвращает информацию по бонусной программе в зависимости от тарифа",
        "operationId": "Loyalty_GetByTariff",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "way4TariffNameId",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Loyalty" }
          }
        }
      }
    },
    "/loyalty/programInfo": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Возвращает расширенную информацию о программе лояльности",
        "operationId": "Loyalty_GetLoyaltyProgramInfo",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "way4TariffNameId",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoyaltyProgramInfo" }
          }
        }
      }
    },
    "/loyalty/programInfoList": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Возвращает список программ лояльности с расширенной информацией",
        "operationId": "Loyalty_GetLoyaltyProgramInfoList",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "way4TariffNameId",
            "in": "query",
            "description": "ID тарифа в W4",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/LoyaltyProgramInfo" }
            }
          }
        }
      }
    },
    "/loyalty/statement": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Возвращает выписку по бонусному счету",
        "operationId": "Loyalty_GetStatement",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoyaltyStatement" }
          }
        }
      }
    },
    "/loyalty/programStatement": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Возвращает выписку по бонусному счету по указанной бонусной программе",
        "operationId": "Loyalty_GetProgramStatement",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "programType",
            "in": "query",
            "description": "Бонусная программа",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4, 5, 6, 7]
          },
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filterParams.sumFrom",
            "in": "query",
            "description": "Сумма с",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "filterParams.sumTo",
            "in": "query",
            "description": "Сумма по",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "filterParams.income",
            "in": "query",
            "description": "Приходы",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterParams.outcome",
            "in": "query",
            "description": "Расходы",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoyaltyStatement" }
          }
        }
      }
    },
    "/loyalty/programStatementNew": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Возвращает выписку по бонусному счету по указанной брнусной программе",
        "operationId": "Loyalty_GetProgramStatementNew",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "programType",
            "in": "query",
            "description": "Бонусная программа",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4, 5, 6, 7]
          },
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoyaltyStatement" }
          }
        }
      }
    },
    "/loyalty/programStatementFullv2": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Возвращает полную выписку по бонусному счету по указанной бонусной программе",
        "operationId": "Loyalty_GetProgramStatementNewFull",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "programType",
            "in": "query",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4, 5, 6, 7]
          },
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoyaltyStatementFull" }
          }
        }
      }
    },
    "/loyalty/tariffStatement": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Возвращает выписку по бонусному счету по указанному тарифу",
        "operationId": "Loyalty_GetTariffStatement",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "way4TariffNameId",
            "in": "query",
            "description": "Тариф way4",
            "required": true,
            "type": "string"
          },
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoyaltyStatement" }
          }
        }
      }
    },
    "/loyalty/cashbackTransactions": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Список доступных для кэшбек операций",
        "operationId": "Loyalty_GetCashbackTransactions",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "operationCode",
            "in": "query",
            "description": "Бонусная программа",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "contractNumber",
            "in": "query",
            "description": "Номер счетного контракта",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoyaltyCashbackTransactions" }
          }
        }
      }
    },
    "/loyalty/statement/report/downloadable": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Получение выписки по бонусному счету в виде отчета",
        "operationId": "Loyalty_GetStatementReport",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "exportFormat",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4, 5]
          },
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/loyalty/programStatement/report/downloadable": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Получение выписки по бонусному счету в виде отчета",
        "operationId": "Loyalty_GetProgramStatementReport",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "exportFormat",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4, 5]
          },
          {
            "name": "programType",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4, 5, 6, 7]
          },
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/loyalty/tariffStatement/report/downloadable": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Получение выписки по бонусному счету в виде отчета",
        "operationId": "Loyalty_GetTariffStatementReport",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "exportFormat",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4, 5]
          },
          {
            "name": "way4TariffNameId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/loyalty/statement/report/printable": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Получение выписки по бонусному счету в виде отчета для печати",
        "operationId": "Loyalty_GetStatementReportToPrint",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/loyalty/programStatement/report/printable": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Получение выписки по бонусному счету в виде отчета для печати",
        "operationId": "Loyalty_GetProgramStatementReportToPrint",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "programType",
            "in": "query",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4, 5, 6, 7]
          },
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/loyalty/tariffStatement/report/printable": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Получение выписки по бонусному счету в виде отчета для печати",
        "operationId": "Loyalty_GetTariffStatementReportToPrint",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "way4TariffNameId",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/loyalty/sendStatementByEmail": {
      "post": {
        "tags": ["Loyalty"],
        "summary": "Отправляет выписку по бонусному счету на e-mail",
        "operationId": "Loyalty_SendStatementByEmail",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "sendParams",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/SendStatementByEmailParams" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/loyalty/sendProgramStatementByEmail": {
      "post": {
        "tags": ["Loyalty"],
        "summary": "Отправляет выписку по бонусному счету на e-mail",
        "operationId": "Loyalty_SendProgramStatementByEmail",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "sendParams",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/SendStatementByEmailParams" }
          },
          {
            "name": "programType",
            "in": "query",
            "description": "Программа лояльности",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4, 5, 6, 7]
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/loyalty/SendOneMonthProgramStatementByEmail": {
      "post": {
        "tags": ["Loyalty"],
        "summary": "Отправляет выписку по бонусному счету за месяц на e-mail",
        "operationId": "Loyalty_SendOneMonthProgramStatementByEmail",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "sendParams",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendOneMonthStatementByEmailParams"
            }
          },
          {
            "name": "programType",
            "in": "query",
            "description": "Программа лояльности",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4, 5, 6, 7]
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/loyalty/sendTariffStatementByEmail": {
      "post": {
        "tags": ["Loyalty"],
        "summary": "Отправляет выписку по бонусному счету на e-mail",
        "operationId": "Loyalty_SendTariffStatementByEmail",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "sendParams",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/SendHistoryByEmailParams" }
          },
          {
            "name": "way4TariffNameId",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/loyalty/{transactionId}/cashback": {
      "post": {
        "tags": ["Loyalty"],
        "summary": "Запускает операцию Cashback за счет миль",
        "operationId": "Loyalty_RunLoyaltyCashback",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "Операция",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/loyalty/isNewProgramStatementEnabled": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Возвращает true, если включена новая бонусная выписка",
        "operationId": "Loyalty_IsNewProgramStatementEnabled",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/loyalty/rules": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Возвращает условия по бонусным программам",
        "operationId": "Loyalty_GetRules",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/LoyaltyProduct" }
            }
          }
        }
      }
    },
    "/loyalty/partners": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Возвращает список партнёров в программах лояльности",
        "operationId": "Loyalty_GetPartners",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/LoyaltyPartner" }
            }
          }
        }
      }
    },
    "/loyalty/partners/shortInfo": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Возвращает список партнёров в программах лояльности без детальной информации.",
        "operationId": "Loyalty_GetPartnersShortInfo",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/LoyaltyPartnerShortInfo" }
            }
          }
        }
      }
    },
    "/loyalty/partner/{systemName}": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Возвращает партнёра в программах лояльности по системному имени.",
        "operationId": "Loyalty_GetPartner",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "systemName",
            "in": "path",
            "description": "Системное наименование партнера.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoyaltyPartner" }
          }
        }
      }
    },
    "/loyalty/partner/{partnerSystemName}/offer/{systemName}": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Возвращает предложение партнёра в программах лояльности по системному имени.",
        "operationId": "Loyalty_GetPartnerOffer",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "partnerSystemName",
            "in": "path",
            "description": "Системное наименование партнера.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemName",
            "in": "path",
            "description": "Системное наименование предложения партнера.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoyaltyPartnerOffer" }
          }
        }
      }
    },
    "/loyalty/partnersOffers": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Возвращает список предложений партнёров в программах лояльности",
        "operationId": "Loyalty_GetPartnersOffers",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/LoyaltyPartnerOffer" }
            }
          }
        }
      }
    },
    "/loyalty/partnersOffers/shortInfo": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Возвращает список предложений партнёров в программах лояльности без детальной информации.",
        "operationId": "Loyalty_GetPartnersOffersShortInfo",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/LoyaltyPartnerOfferShortInfo" }
            }
          }
        }
      }
    },
    "/loyalty/bonusAccount": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Возвращает информацию по ресурсам для экрана бонусного счета программы лояльности",
        "operationId": "Loyalty_GetBonusAccountInformation",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "programType",
            "in": "query",
            "description": "Бонусная программа",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4, 5, 6, 7]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/BonusAccountInformation" }
          }
        }
      }
    },
    "/loyalty/programs/shortInfo": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Возвращает список основной информации об подключенных у клиента программах лояльности",
        "operationId": "Loyalty_GetLoyaltyProgramsShortInfos",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/LoyaltyProgramShortInfo" }
            }
          }
        }
      }
    },
    "/loyalty/cards": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Возвращает список карт с кэшбэком для экрана бонусного счета программы лояльности",
        "operationId": "Loyalty_GetClientLoyaltyCards",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "programType",
            "in": "query",
            "description": "Бонусная программа",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3, 4, 5, 6, 7]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/LoyaltyCardInfo" }
            }
          }
        }
      }
    },
    "/loyalty/referralSource": {
      "post": {
        "tags": ["Loyalty"],
        "summary": "Создает клиентскую реферальну ссылку.",
        "operationId": "Loyalty_CreateClientReferralSource",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "referralType",
            "in": "query",
            "description": "Тип реферальной ссылки.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/loyalty/referralTarget": {
      "post": {
        "tags": ["Loyalty"],
        "summary": "Создает запись о использовании клиентской реферальну ссылки.",
        "operationId": "Loyalty_CreateClientReferralTarget",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "clientReferralSourceId",
            "in": "query",
            "description": "Идентификатор клиентской реферальной ссылки.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "requestId",
            "in": "query",
            "description": "Идентификатор поручения.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/loyalty/dashboard/lite": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Возвращает основные данные для дашборда бонусов",
        "operationId": "Loyalty_GetLiteDashboardData",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LiteLoyaltyDashboardData" }
          }
        }
      }
    },
    "/marketplace/card/debet": {
      "post": {
        "tags": ["MarketplaceCards"],
        "summary": "Запускает операцию заказа дебетовой карты по выбранной программе",
        "description": "Если для клиента существует поручение, с времени старта которого\r\nне прошло 60 минут, то поднимается это поручение иначе создается новое",
        "operationId": "MarketplaceCards_CreateMarketplaceDebetCardOrder",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/MarketplaceProductOrderParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        },
        "deprecated": true
      }
    },
    "/marketplace/card/credit": {
      "post": {
        "tags": ["MarketplaceCards"],
        "summary": "Запускает операцию заказа кредитной карты по выбранной программе",
        "description": "Если для клиента существует поручение, с времени старта которого\r\nне прошло 60 минут, то поднимается это поручение иначе создается новое",
        "operationId": "MarketplaceCards_CreateMarketplaceCreditCardOrder",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/MarketplaceProductOrderParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        },
        "deprecated": true
      }
    },
    "/marketplace/common/consents": {
      "post": {
        "tags": ["MarketplaceCommon"],
        "summary": "Получение согласий клиента",
        "operationId": "MarketplaceCommon_SetClientAgreements",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "consents",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/ClientAgreements" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/marketplace/common/createProductRequest": {
      "post": {
        "tags": ["MarketplaceCommon"],
        "summary": "Запускает операцию заказа продукта по идентификатору",
        "operationId": "MarketplaceCommon_CreateMarketplaceProductRequest",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MarketplaceUniversalProductOrderParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/marketplace/loan/consumer": {
      "post": {
        "tags": ["MarketplaceLoan"],
        "summary": "Запуск операции создания заявки на потребительский кредит.",
        "operationId": "MarketplaceLoan_CreateConsumerApplication",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "orderParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MarketplaceConsumerLoanProductOrderParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        },
        "deprecated": true
      }
    },
    "/marketplace/loan/mortgage": {
      "post": {
        "tags": ["MarketplaceLoan"],
        "summary": "Запуск операции создания заявки на ипотеку.",
        "operationId": "MarketplaceLoan_CreateMortgageApplication",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "orderParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MarketplaceMortgageLoanProductOrderParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/marketplace/loan/dsa-consumer": {
      "post": {
        "tags": ["MarketplaceLoan"],
        "summary": "Запуск операции создания заявки на потребительский кредит со страницы DSA.",
        "operationId": "MarketplaceLoan_CreateDsaConsumerApplication",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "orderParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MarketplaceConsumerLoanProductOrderParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        },
        "deprecated": true
      }
    },
    "/marketplace/loan/consumer-mobile": {
      "post": {
        "tags": ["MarketplaceLoan"],
        "summary": "Временный метод запуска операции создания заявки на потребительский кредит из мобильного банка.\r\nСделан, т.к. существующий метод редиректит на 2311 если клиент авторизован.\r\nКак только заказ кредита в ИБ/МБ будет переведён на 9311, данный метод следует удалить.",
        "operationId": "MarketplaceLoan_CreateConsumerApplicationMobile",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "orderParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MarketplaceConsumerLoanProductOrderParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        },
        "deprecated": true
      }
    },
    "/marketplace/loan/calculator/initialData": {
      "get": {
        "tags": ["MarketplaceLoan"],
        "summary": "Получение начальных данных для построения калькулятора",
        "operationId": "MarketplaceLoan_GetNotAuthLoanCalculatorInitialData",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/LoanCalculatorInitialData" }
            }
          }
        }
      }
    },
    "/marketplace/loan/calculator/initialMortgageData": {
      "post": {
        "tags": ["MarketplaceLoan"],
        "summary": "Возвращает параметры калькулятора цифровой ипотеки.",
        "operationId": "MarketplaceLoan_GetNoAuthCalculatorDataByFilter",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "filter",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CalculatorDataFilter" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/LoanCalculatorDataDTO" }
            }
          }
        }
      }
    },
    "/marketplace/loan/calculator/programTypes": {
      "get": {
        "tags": ["MarketplaceLoan"],
        "summary": "Возвращает список значений справочника \"Тип ипотечного продукта\", используемых в цифровой ипотеке.",
        "operationId": "MarketplaceLoan_GetNoAuthMortgageProgramTypeValues",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/MortgageProgramTypeValue" }
            }
          }
        }
      }
    },
    "/marketplace/loan/calculator/purposes": {
      "get": {
        "tags": ["MarketplaceLoan"],
        "summary": "Возвращает список значений справочника \"Цель ипотечного кредита\", используемых в цифровой ипотеке.",
        "operationId": "MarketplaceLoan_GetNoAuthMortgagePurposeValues",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "program",
            "in": "query",
            "description": "Тип ипотечного продукта.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2, 4, 5, 6, 7, 8]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/MortgagePurposeValue" }
            }
          }
        }
      }
    },
    "/marketplace/loan/calculator/purposes/productCode": {
      "get": {
        "tags": ["MarketplaceLoan"],
        "summary": "Возвращает список значений справочника \"Цель ипотечного кредита\", используемых в цифровой ипотеке c учетом url api продуктового каталог.",
        "operationId": "MarketplaceLoan_GetNoAuthMortgagePurposeValuesByProductCode",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "program",
            "in": "query",
            "description": "Тип ипотечного продукта.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2, 4, 5, 6, 7, 8]
          },
          {
            "name": "marketProductCode",
            "in": "query",
            "description": "код продукта в маркете",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/MortgagePurposeValue" }
            }
          }
        }
      }
    },
    "/marketplace/loan/calculator/creditTypes": {
      "get": {
        "tags": ["MarketplaceLoan"],
        "summary": "Возвращает список значений справочника \"Вид ипотечного кредита\", используемых в цифровой ипотеке.",
        "operationId": "MarketplaceLoan_GetNoAuthMortgageCreditTypeValues",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "program",
            "in": "query",
            "description": "Тип ипотечного продукта.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2, 4, 5, 6, 7, 8]
          },
          {
            "name": "purpose",
            "in": "query",
            "description": "Цель ипотечного кредита.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2, 3]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/MortgageCreditTypeValue" }
            }
          }
        }
      }
    },
    "/marketplace/loan/calculator/pledgeTypes": {
      "get": {
        "tags": ["MarketplaceLoan"],
        "summary": "Возвращает список значений справочника \"Вид недвижимости\", используемых в цифровой ипотеке.",
        "operationId": "MarketplaceLoan_GetNoAuthLoanPledgeTypeValues",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "program",
            "in": "query",
            "description": "Тип ипотечного продукта.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2, 4, 5, 6, 7, 8]
          },
          {
            "name": "purpose",
            "in": "query",
            "description": "Цель ипотечного кредита.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2, 3]
          },
          {
            "name": "creditType",
            "in": "query",
            "description": "Вид ипотечного кредита.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2, 3]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PawnRealtyTypeValue" }
            }
          }
        }
      }
    },
    "/marketplace/loan/calculator/result": {
      "get": {
        "tags": ["MarketplaceLoan"],
        "summary": "Получение предварительного результата расчета кредита (для неавторизованной зоны) с округлением суммы вверх кратно 1000.",
        "operationId": "MarketplaceLoan_GetNotAuthLoanCalculatorResult",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "sum",
            "in": "query",
            "description": "Сумма.",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "months",
            "in": "query",
            "description": "Срок, мес.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LoanCalculatorResult" }
          }
        }
      }
    },
    "/marketProducts/productTypes": {
      "get": {
        "tags": ["MarketProducts"],
        "summary": "Возвращает список типов продуктов",
        "operationId": "MarketProducts_GetProductTypes",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "take",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/MarketProductTypeItem" }
            }
          }
        }
      }
    },
    "/marketProducts/products/{productType}": {
      "get": {
        "tags": ["MarketProducts"],
        "summary": "Возвращает список продуктов",
        "operationId": "MarketProducts_GetProducts",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeMeta",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "preset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/MarketProductItem" }
            }
          }
        }
      }
    },
    "/marketProducts/products/sets": {
      "get": {
        "tags": ["MarketProducts"],
        "summary": "Возвращает список продуктов (набор)",
        "operationId": "MarketProducts_GetProductSets",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "productCode",
            "in": "query",
            "required": true,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "includeMeta",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "preset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/MarketProductItem" }
            }
          }
        }
      }
    },
    "/marketProducts/product/{productCode}": {
      "get": {
        "tags": ["MarketProducts"],
        "summary": "Возвращает запрошенный продукт",
        "operationId": "MarketProducts_GetProduct",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeMeta",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "preset",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/MarketProductItem" }
          }
        }
      }
    },
    "/marketProducts/checkCache": {
      "get": {
        "tags": ["MarketProducts"],
        "summary": "Проверка работоспособности серверного кэширования",
        "operationId": "MarketProducts_GetCachedDateTime",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "date-time", "type": "string" }
          }
        }
      }
    },
    "/metalAccounts": {
      "get": {
        "tags": ["MetalAccounts"],
        "summary": "Возвращает металлические счета клиента",
        "operationId": "MetalAccounts_Get",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "activeOnly",
            "in": "query",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/MetalAccount" }
            }
          }
        }
      }
    },
    "/metalAccounts/{accountId}": {
      "get": {
        "tags": ["MetalAccounts"],
        "summary": "Возвращает информацию по счету",
        "operationId": "MetalAccounts_GetAccount",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Account" }
          }
        }
      }
    },
    "/metalAccounts/exists": {
      "get": {
        "tags": ["MetalAccounts"],
        "summary": "Возвращает, есть ли металлические счета у клиента",
        "operationId": "MetalAccounts_IsExists",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/metalAccounts/{accountId}/createBuyCurrencyRequests": {
      "post": {
        "tags": ["MetalAccounts"],
        "summary": "Запускает операцию покупки валюты",
        "operationId": "MetalAccounts_CreateBuyCurrencyRequest",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/metalAccounts/{accountId}/createSellCurrencyRequests": {
      "post": {
        "tags": ["MetalAccounts"],
        "summary": "Запускает операцию продажи валюты",
        "operationId": "MetalAccounts_CreateSellCurrencyRequest",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/metalAccounts/{accountId}/statement": {
      "get": {
        "tags": ["MetalAccounts"],
        "summary": "Формирование выписки по счету",
        "description": "При вызове метода формируется событие AccountStatementReceiveEventArgs для антифрода RSA",
        "operationId": "MetalAccounts_GetAccountStatement",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filterParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filterParams.sumFrom",
            "in": "query",
            "description": "Сумма с",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "filterParams.sumTo",
            "in": "query",
            "description": "Сумма по",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "filterParams.processedOnly",
            "in": "query",
            "description": "Только обработанные",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterParams.income",
            "in": "query",
            "description": "Приходы",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterParams.outcome",
            "in": "query",
            "description": "Расходы",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterParams.searchString",
            "in": "query",
            "description": "Строка поиска",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterParams.highlightTagName",
            "in": "query",
            "description": "Имя тега для подсветки",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterParams.sortDirection",
            "in": "query",
            "description": "Направление сортировки",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2]
          },
          {
            "name": "pageParams.pageSize",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageParams.pageNumber",
            "in": "query",
            "description": "Номер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/AccountStatement" }
          }
        }
      }
    },
    "/metalAccounts/{contractId}/clientLabel": {
      "put": {
        "tags": ["MetalAccounts"],
        "summary": "Обновление клиентского наименования",
        "operationId": "MetalAccounts_SetClientLabel",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "clientLabel",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/mobilePhonePayments/{phoneNumber}": {
      "get": {
        "tags": ["MobilePhonePayments"],
        "summary": "Возвращает операцию оплаты мобильного телефона по его номеру",
        "operationId": "MobilePhonePayments_GetOperation",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Operation" }
          }
        }
      }
    },
    "/mobilePhonePayments/{phoneNumber}/startPaymentRequests": {
      "post": {
        "tags": ["MobilePhonePayments"],
        "summary": "Запуск операции оплаты по номеру мобильного телефона",
        "operationId": "MobilePhonePayments_StartPaymentOperation",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationCode",
            "in": "body",
            "required": true,
            "schema": { "format": "int32", "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/loans/mortgageAggregator/createApplication": {
      "post": {
        "tags": ["MortgagesAggregator"],
        "summary": "Запуск операции создания заявки на ипотеку.",
        "operationId": "MortgagesAggregator_CreateMortgageApplication",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "orderParameters",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CreateMortgageApplicationData" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/loans/mortgageAggregator/initialData": {
      "post": {
        "tags": ["MortgagesAggregator"],
        "summary": "Возвращает параметры калькулятора цифровой ипотеки.",
        "operationId": "MortgagesAggregator_GetNoAuthCalculatorDataByFilter",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "filter",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CalculatorDataFilter" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/LoanCalculatorDataDTO" }
            }
          }
        }
      }
    },
    "/subscriptions": {
      "get": {
        "tags": ["Notifications"],
        "summary": "Возвращает текущие подписки клиента",
        "operationId": "Notifications_GetSubscriptions",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SubscriptionsData" }
          }
        }
      }
    },
    "/subscriptions/notificationAddresses/{notificationAddressId}/enableRequests": {
      "post": {
        "tags": ["Notifications"],
        "summary": "Регистрация поручения на подключение указанного адреса от оповещений",
        "operationId": "Notifications_EnableNotificationAddress",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "notificationAddressId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/subscriptions/notificationAddresses/{notificationAddressId}/disableRequests": {
      "post": {
        "tags": ["Notifications"],
        "summary": "Регистрация поручения на отключение указанного адреса от оповещений",
        "operationId": "Notifications_DisableNotificationAddress",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "notificationAddressId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/subscriptions/editRequests": {
      "post": {
        "tags": ["Notifications"],
        "summary": "Редактирование текущих подписок клиента",
        "operationId": "Notifications_EditSubscriptions",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/notifications": {
      "get": {
        "tags": ["Notifications"],
        "summary": "Получение оповещений по фильтру",
        "operationId": "Notifications_GetNotifications",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "pageParams.pageSize",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageParams.pageNumber",
            "in": "query",
            "description": "Номер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/NotificationsHistory" }
          }
        }
      }
    },
    "/operations/paymentsOld": {
      "get": {
        "tags": ["Operations"],
        "summary": "Возвращает платёжные операции и вложенные категории (1 уровень)",
        "operationId": "Operations_GetPaymentCategoriesAndOperationsOld",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "categoryId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OperationsData" }
          }
        }
      }
    },
    "/operations/payments": {
      "get": {
        "tags": ["Operations"],
        "summary": "Возвращает платёжные операции и вложенные категории (1 уровень)",
        "operationId": "Operations_GetPaymentCategoriesAndOperations",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "categoryId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "forceNewMethod",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OperationsData" }
          }
        }
      }
    },
    "/operations/transfers": {
      "get": {
        "tags": ["Operations"],
        "summary": "Возвращает операции перевода",
        "operationId": "Operations_GetTransferOperations",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Operation" }
            }
          }
        }
      }
    },
    "/operations/transfersWithCategories": {
      "get": {
        "tags": ["Operations"],
        "summary": "Возвращает операции перевода и вложенные категории (1 уровень)",
        "operationId": "Operations_GetTransferOperationsWithCategories",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "categoryId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OperationsData" }
          }
        }
      }
    },
    "/operations/transfersWithCategoriesV2": {
      "get": {
        "tags": ["Operations"],
        "summary": "Возвращает операции перевода и вложенные категории (1 уровень)",
        "operationId": "Operations_GetTransferOperationsWithCategoriesV2",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "categoryId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OperationCatalog" }
          }
        }
      }
    },
    "/operations/paymentsWithCategoriesV2": {
      "get": {
        "tags": ["Operations"],
        "summary": "Возвращает платёжные операции и вложенные категории (1 уровень)",
        "operationId": "Operations_GetPaymentCategoriesAndOperationsV2",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "categoryId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OperationCatalog" }
          }
        }
      }
    },
    "/operations/search": {
      "get": {
        "tags": ["Operations"],
        "summary": "Поиск операций по части наименования или коду",
        "operationId": "Operations_SearchClientOperations",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OperationsSearchResults" }
          }
        },
        "deprecated": true
      }
    },
    "/operations/searchwp": {
      "get": {
        "tags": ["Operations"],
        "summary": "Поиск операций по части наименования, ИНН или коду операции",
        "operationId": "Operations_SearchClientOperationsWP",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "districtId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "localityId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OperationsSearchResults" }
          }
        },
        "deprecated": true
      }
    },
    "/operations/searchwpAvailable": {
      "get": {
        "tags": ["Operations"],
        "summary": "Признак доступности поиска WikiPay",
        "operationId": "Operations_IsWikiPaySearchAvailable",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        },
        "deprecated": true
      }
    },
    "/operations/context": {
      "post": {
        "tags": ["Operations"],
        "summary": "Поиск операций по контексту",
        "operationId": "Operations_GetOperationsByContext",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contextEntityIdentifier",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/EntityIdentifier" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Operation" }
            }
          }
        }
      }
    },
    "/operations/available": {
      "get": {
        "tags": ["Operations"],
        "summary": "Доступна ли операция по коду на канале",
        "operationId": "Operations_IsOperationByCodeAvailable",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "operationCode",
            "in": "query",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/operations/logos": {
      "get": {
        "tags": ["Operations"],
        "summary": "логотипы операций",
        "operationId": "Operations_OperationLogos",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "operationCodes",
            "in": "query",
            "description": "",
            "required": true,
            "type": "array",
            "items": { "type": "integer", "format": "int32" },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OperationImage" }
            }
          }
        }
      }
    },
    "/offices": {
      "get": {
        "tags": ["OrgStructure"],
        "summary": "Возвращает список офисов по фильтру",
        "operationId": "OrgStructure_GetOffices",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "filterParams.localityId",
            "in": "query",
            "description": "Город, населенный пункт",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filterParams.offices",
            "in": "query",
            "description": "Перечисление офисов",
            "required": false,
            "type": "array",
            "items": { "type": "integer", "format": "int32" },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Office" }
            }
          }
        }
      }
    },
    "/offices/{officeId}": {
      "get": {
        "tags": ["OrgStructure"],
        "summary": "Возвращает офис",
        "operationId": "OrgStructure_GetOffice",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "officeId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Office" }
          }
        }
      }
    },
    "/offices/MortgageCenters": {
      "get": {
        "tags": ["OrgStructure"],
        "summary": "Возвращает список ипотечных центров",
        "operationId": "OrgStructure_GetMortgageCenters",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/MortgageCenter" }
            }
          }
        }
      }
    },
    "/otps/{otpEnvelopeId}/lockRequests": {
      "post": {
        "tags": ["Otps"],
        "summary": "Блокирование ТРК",
        "operationId": "Otps_LockOtpEnvelope",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "otpEnvelopeId",
            "in": "path",
            "description": "Идентификатор ТРК",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/otps/active": {
      "get": {
        "tags": ["Otps"],
        "summary": "Получение текущей активной ТРК",
        "operationId": "Otps_GetActiveOtpEnvelope",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OtpEnvelope" }
          }
        }
      }
    },
    "/PaymentsDashboard/suggestions": {
      "get": {
        "tags": ["PaymentsDashboard"],
        "summary": "список доступных поставщиков по адресу регистрации, проживания или ранее указанному адресу",
        "operationId": "PaymentsDashboard_SuggestionsAll",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ProviderSuggestion" }
            }
          }
        }
      },
      "post": {
        "tags": ["PaymentsDashboard"],
        "summary": "",
        "operationId": "PaymentsDashboard_SuggestionAddress",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "req",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/SuggestionForAddressReq" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ProviderSuggestion" }
            }
          }
        }
      }
    },
    "/PaymentsDashboard/suggestions/{addressId}/{address}": {
      "get": {
        "tags": ["PaymentsDashboard"],
        "summary": "список доступных поставщиков по идентификатору адреса в СМЭВ",
        "operationId": "PaymentsDashboard_Suggestions",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "returnAll",
            "in": "query",
            "description": "",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ProviderSuggestion" }
            }
          }
        }
      }
    },
    "/PaymentsDashboard/suggestions/hide": {
      "post": {
        "tags": ["PaymentsDashboard"],
        "summary": "убрать предложения по адресу или поставщикам",
        "operationId": "PaymentsDashboard_HideSuggestions",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "suggestionIds",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "format": "int32", "type": "integer" }
            }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/personalOfferingNotifications/GetMessageWithTechnicalInformation": {
      "get": {
        "tags": ["PersonalOfferingNotifications"],
        "summary": "Возвращает сообщение с технической информацией о работе банка клиенту.",
        "operationId": "PersonalOfferingNotifications_GetMessageWithTechnicalInformation",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "platformId",
            "in": "query",
            "description": "Идентификатор платформы клиента.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "osVersion",
            "in": "query",
            "description": "Версия операционной системы клиента.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appVersion",
            "in": "query",
            "description": "Версия приложения клиента.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PersonalOfferingMessageWithTechnicalInformation"
            }
          }
        }
      }
    },
    "/clientPhoneTransfer/{phoneNumber}": {
      "post": {
        "tags": ["PersonTransfer"],
        "summary": "Запуск операции оплаты по номеру мобильного телефона",
        "operationId": "PersonTransfer_StartTransferByPhoneNumber",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "path",
            "description": "Номер телефона в любом формате",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestData",
            "in": "body",
            "description": "Данные запроса на запуск операции",
            "required": true,
            "schema": { "$ref": "#/definitions/TransferByPhoneRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/clientPhoneTransfer/bankList": {
      "get": {
        "tags": ["PersonTransfer"],
        "summary": "Получение данных по банкам участникам СБП",
        "operationId": "PersonTransfer_GetAvailableBanksForTransferByPhone",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/FastTransfersBankListItem" }
            }
          }
        }
      }
    },
    "/clientPhoneTransfer/calculateCommission": {
      "post": {
        "tags": ["PersonTransfer"],
        "summary": "Рассчет комиссии за перевод",
        "operationId": "PersonTransfer_CalculateCommission",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "transferSum",
            "in": "query",
            "description": "",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "double", "type": "number" }
          }
        }
      }
    },
    "/clientPhoneTransfer/calculateSBPCommission": {
      "post": {
        "tags": ["PersonTransfer"],
        "summary": "Рассчет комиссии за перевод СБП",
        "operationId": "PersonTransfer_CalculateSBPCommission",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "info",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferInfoForCommissionCalculation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "double", "type": "number" }
          }
        }
      }
    },
    "/clientPhoneTransfer/calculateSBPCommission/v2": {
      "post": {
        "tags": ["PersonTransfer"],
        "summary": "Рассчет комиссии за перевод СБП (полная версия)",
        "operationId": "PersonTransfer_CalculateSBPCommissionV2",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "info",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferInfoForCommissionCalculation2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "double", "type": "number" }
          }
        }
      }
    },
    "/clientPhoneTransfer/settings/agreement": {
      "get": {
        "tags": ["PersonTransfer"],
        "summary": "Получение согласий по переводам СБП",
        "operationId": "PersonTransfer_GetSettings",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetAgreementSettingsResponse" }
          }
        }
      },
      "post": {
        "tags": ["PersonTransfer"],
        "summary": "Запускает операцию (сценарий) изменения согласий по переводам СБП",
        "operationId": "PersonTransfer_SetSettings",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "settings",
            "in": "body",
            "description": "Согласия",
            "required": true,
            "schema": { "$ref": "#/definitions/SetAgreementSettingsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Контейнер интерактивного шага",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          },
          "204": {
            "description": "Запрос успешный, но во входном запросе не было данных для сохранения настроек согласий",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          },
          "400": { "description": "Недопустимые параметры запроса" }
        }
      }
    },
    "/clientPhoneTransfer/settings/account/credit/priority": {
      "post": {
        "tags": ["PersonTransfer"],
        "summary": "Запускает операцию (сценарий) изменения приоритетного счёта для зачислений СБП",
        "operationId": "PersonTransfer_SetPriorityCreditAccount",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "Контейнер интерактивного шага",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/clientPhoneTransfer/settings/accounts/credit": {
      "get": {
        "tags": ["PersonTransfer"],
        "summary": "Получение счёта/карты для зачислений по СБП",
        "operationId": "PersonTransfer_GetCreditAccount",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "Счёт/карта для зачислений",
            "schema": {
              "$ref": "#/definitions/AvailableCreditAccountsResponse"
            }
          },
          "404": { "description": "Нет счёта/карты для зачислений" }
        }
      }
    },
    "/pfm/expenses": {
      "get": {
        "tags": ["Pfm"],
        "summary": "Возвращает информацию по расходам клиента из сервиса Умные деньги\r\n(по умолчанию за последний один месяц)",
        "operationId": "Pfm_GetExpenses",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "months",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/PfmExpenses" }
          }
        }
      }
    },
    "/pfm/redirectionData": {
      "get": {
        "tags": ["Pfm"],
        "summary": "Получение данных для перехода в PFM",
        "operationId": "Pfm_GetPfmRedirectionData",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/PfmRedirectionData" }
          }
        }
      }
    },
    "/pfm/debitTransactions": {
      "get": {
        "tags": ["Pfm"],
        "summary": "Возвращает расходные операции на заданную дату.\r\nЕсли дата явно не указана, то возвращаются расходные операции за последние три дня относительно текущей даты",
        "operationId": "Pfm_GetDebitTransactions",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/TransactionBase" }
            }
          }
        }
      }
    },
    "/portfolio": {
      "get": {
        "tags": ["Portfolio"],
        "summary": "Инф. по портфелю  (для сайдбара)",
        "operationId": "Portfolio_GetPortfolio",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "fullInfo",
            "in": "query",
            "description": "Флаг полного или сокращенного набора данных",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/PortfolioInfo" }
          }
        }
      }
    },
    "/profile/avatar": {
      "get": {
        "tags": ["Profiles"],
        "summary": "Возвращает аватар клиента",
        "operationId": "Profiles_GetAvatar",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "hash",
            "in": "query",
            "description": "Опционально передается сохраненный хэш аватара, чтобы не возвращать повторно те же данные",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Avatar" }
            }
          }
        }
      }
    },
    "/profile/avatar/change": {
      "put": {
        "tags": ["Profiles"],
        "summary": "Сохранение аватара",
        "operationId": "Profiles_SetAvatar",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "avatar",
            "in": "body",
            "description": "Base64 String",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/profile/password": {
      "put": {
        "tags": ["Profiles"],
        "summary": "Смена пароля",
        "operationId": "Profiles_ChangePassword",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "passwordParams",
            "in": "body",
            "description": "Параметры для смены пароля",
            "required": true,
            "schema": { "$ref": "#/definitions/ChangePasswordParams" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/profile/alias": {
      "put": {
        "tags": ["Profiles"],
        "summary": "Смена логина",
        "operationId": "Profiles_ChangeAlias",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "alias",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      },
      "delete": {
        "tags": ["Profiles"],
        "summary": "Удаление логина",
        "operationId": "Profiles_DeleteAlias",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/profile/locality": {
      "put": {
        "tags": ["Profiles"],
        "summary": "Установка выбранного региона по умолчанию",
        "operationId": "Profiles_SetLocality",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "localityParams",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/SetLocalityParams" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/profile/newRulesConfirmed": {
      "put": {
        "tags": ["Profiles"],
        "summary": "Подтверждение согласия с новыми правилами ДБО",
        "operationId": "Profiles_ConfirmNewRules",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/profile/changeMobilePhoneRequests": {
      "post": {
        "tags": ["Profiles"],
        "summary": "Запускает операцию изменения мобильного телефона",
        "operationId": "Profiles_ChangeMobilePhone",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/profile/changeEmailRequests": {
      "post": {
        "tags": ["Profiles"],
        "summary": "Запускает операцию изменения email",
        "operationId": "Profiles_ChangeEmail",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/profile/ChangePersonalConsentRequests": {
      "post": {
        "tags": ["Profiles"],
        "summary": "Запускает операцию согласия передачи персональных данных Партнерам банка",
        "operationId": "Profiles_ChangePersonalConsent",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "tags": ["Profiles"],
        "summary": "Возвращает набор персональных данных клиента",
        "operationId": "Profiles_GetClientProfile",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ClientProfile" }
          }
        }
      }
    },
    "/profile/driverLicenses/addRequests": {
      "post": {
        "tags": ["Profiles"],
        "summary": "Запускает операцию создания водительского удостоверения",
        "operationId": "Profiles_AddDriverLicense",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/profile/vehicleRegistrations/addRequests": {
      "post": {
        "tags": ["Profiles"],
        "summary": "Запускает операцию создания св-ва о регистрации т/с",
        "operationId": "Profiles_AddVehicleRegistration",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/profile/driverLicenses/{driverLicenseId}/editRequests": {
      "post": {
        "tags": ["Profiles"],
        "summary": "Запускает операцию изменения водительского удостоверения",
        "operationId": "Profiles_EditDriverLicense",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "driverLicenseId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/profile/vehicleRegistrations/{vehicleRegistrationCertificateId}/editRequests": {
      "post": {
        "tags": ["Profiles"],
        "summary": "Запускает операцию изменения св-ва о регистрации т/с",
        "operationId": "Profiles_EditVehicleRegistration",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "vehicleRegistrationCertificateId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/profile/driverLicenses/{driverLicenseId}/deleteRequests": {
      "post": {
        "tags": ["Profiles"],
        "summary": "Запускает операцию удаления водительского удостоверения",
        "operationId": "Profiles_DeleteDriverLicense",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "driverLicenseId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/profile/vehicleRegistrations/{vehicleRegistrationCertificateId}/deleteRequests": {
      "post": {
        "tags": ["Profiles"],
        "summary": "Запускает операцию удаления св-ва о регистрации т/с",
        "operationId": "Profiles_DeleteVehicleRegistration",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "vehicleRegistrationCertificateId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/profile/changePersonalDetailsRequests": {
      "post": {
        "tags": ["Profiles"],
        "summary": "Запускает операцию изменения персональных данных",
        "operationId": "Profiles_ChangePersonalDetails",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/profile/changeIdnInfoRequests": {
      "post": {
        "tags": ["Profiles"],
        "summary": "Запускает операцию изменения паспортных данных",
        "operationId": "Profiles_ChangeIdnInfo",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/profile/changeAddressInfoRequests": {
      "post": {
        "tags": ["Profiles"],
        "summary": "Запускает операцию изменения адресных данных",
        "operationId": "Profiles_ChangeAddressInfo",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/profile/changeContactInfoRequests": {
      "post": {
        "tags": ["Profiles"],
        "summary": "Запускает операцию изменения контактных данных",
        "operationId": "Profiles_ChangeContactInfo",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/profile/loginOptions": {
      "get": {
        "tags": ["Profiles"],
        "summary": "Получение настроек авторизации",
        "operationId": "Profiles_GetLoginOptions",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/AuthOptions" }
          }
        }
      }
    },
    "/profile/loginOptions/changePasswordRecoveryOptionsRequests": {
      "post": {
        "tags": ["Profiles"],
        "summary": "Запускает операцию изменения настройки удаленного восстановления доступа",
        "operationId": "Profiles_ChangePasswordRecoveryOptions",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/profile/loginOptions/changeSecondStepAuthRequests": {
      "post": {
        "tags": ["Profiles"],
        "summary": "Запускает операцию изменения настройки дополнительной проверки кода при входе",
        "operationId": "Profiles_ChangeSecondStepAuth",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/profile/options/smsCode/blockRequests": {
      "post": {
        "tags": ["Profiles"],
        "summary": "Запускает операцию блокирования сервиса SMS-код",
        "operationId": "Profiles_BlockSmsCode",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/profile/options/phoneId/sendSms": {
      "post": {
        "tags": ["Profiles"],
        "summary": "Получение смс по номеру телефона для идентификации",
        "operationId": "Profiles_SendSmsToPhoneId",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "phoneId",
            "in": "body",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int32", "type": "integer" }
          }
        }
      }
    },
    "/profile/options/phoneId/{token}/confirm": {
      "post": {
        "tags": ["Profiles"],
        "summary": "Подтверждает изменение номера телефона для идентификации",
        "operationId": "Profiles_ConfirmPhoneId",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "confirmationCode",
            "in": "body",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/profile/options/phoneId": {
      "delete": {
        "tags": ["Profiles"],
        "summary": "Удаление номера телефона для идентификации",
        "operationId": "Profiles_DeletePhoneId",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/profile/options/smsCode": {
      "get": {
        "tags": ["Profiles"],
        "summary": "Возвращает статус смс-кода",
        "operationId": "Profiles_GetSmsCodeStatus",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "enum": [1, 2, 10, -1],
              "type": "integer"
            }
          }
        }
      }
    },
    "/profile/isMobilePromoAvailable": {
      "get": {
        "tags": ["Profiles"],
        "summary": "Требуется ли показ окна приглашения в PSB-Moile",
        "operationId": "Profiles_IsMobilePromoAvailable",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/profile/getClientServicePhone": {
      "get": {
        "tags": ["Profiles"],
        "summary": "Возвращает немаскированный номер телефона клиента для сервисов",
        "operationId": "Profiles_GetClientServicePhone",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "string" } }
        }
      }
    },
    "/profile/sendMobilePromoSms": {
      "post": {
        "tags": ["Profiles"],
        "summary": "Отправка приглашения в PSB-Moile клиенту",
        "operationId": "Profiles_SendMobilePromoSms",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "body",
            "description": "Номер телефона (11 цифр, можно неотформатированный, т.е. со знаками \"+\", \"-\", \"(\", \")\")",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/profile/hideMobilePromoBanner": {
      "post": {
        "tags": ["Profiles"],
        "summary": "Помечает мобильный баннер как прочитанный клиентом",
        "operationId": "Profiles_HideMobilePromoBanner",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/profile/getClientsByContacts": {
      "post": {
        "tags": ["Profiles"],
        "summary": "Проверяет, есть ли клиенты с указанными контактными данными\r\nМетод старый, не использовать",
        "operationId": "Profiles_GetClientsByContacts",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "userContacts",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClientContactInfo" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClientContactData" }
            }
          }
        },
        "deprecated": true
      }
    },
    "/profile/syncClientsPhoneContacts": {
      "post": {
        "tags": ["Profiles"],
        "summary": "Возвращает клиентов с указанными контактными данными (сервисный номер)",
        "operationId": "Profiles_SyncClientsPhoneContacts",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "userPhones",
            "in": "body",
            "description": "номера телефонов (массив длиной не более 3000). Формат номера +7xxxxxxxxxx",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClientContact" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClientPhoneInfo" }
            }
          }
        }
      }
    },
    "/proposal": {
      "get": {
        "tags": ["Proposals"],
        "summary": "Возвращает информацию по предложениям по фильтру",
        "operationId": "Proposals_GetProposals",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "proposalFilterParams.isActiveOnly",
            "in": "query",
            "description": "Только активные предложения",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "proposalFilterParams.proposalType",
            "in": "query",
            "description": "Тип  предложения",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 4, 5, 6]
          },
          {
            "name": "proposalFilterParams.detailed",
            "in": "query",
            "description": "Детальная информация",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "proposalFilterParams.marketDetailed",
            "in": "query",
            "description": "Детальная информация продуктового контента",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "proposalFilterParams.includeMeta",
            "in": "query",
            "description": "Пресет для деталей",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "proposalFilterParams.preset",
            "in": "query",
            "description": "Пресет для деталей",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Proposal" }
            }
          }
        }
      }
    },
    "/proposal/bestCardProposal": {
      "get": {
        "tags": ["Proposals"],
        "summary": "Получение одного сертификата по картам для клиента с максимальным приоритетом",
        "operationId": "Proposals_GetMaxPriorityCardProposal",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "marketDetailed",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "preset",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Proposal" }
          }
        }
      }
    },
    "/proposal/{proposalId}": {
      "get": {
        "tags": ["Proposals"],
        "summary": "Возвращает полную информацию по предложению",
        "operationId": "Proposals_GetProposal",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Proposal" }
          }
        }
      }
    },
    "/proposal/{proposalId}/receipt": {
      "put": {
        "tags": ["Proposals"],
        "summary": "Отмечает предложение как прочитанное",
        "operationId": "Proposals_SetReceipt",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/proposal/{proposalId}/activate": {
      "post": {
        "tags": ["Proposals"],
        "summary": "Активация предложения",
        "operationId": "Proposals_ActivateProposal",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "description": "Идентификатор предложения",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "decisionIdentifier",
            "in": "body",
            "description": "Идентификатор решения",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        },
        "deprecated": true
      }
    },
    "/proposal/{proposalId}/activateWithProductCatalogIdentifier": {
      "post": {
        "tags": ["Proposals"],
        "summary": "Активация предложения",
        "operationId": "Proposals_ActivateProposalWithProductCatalogIdentifier",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "description": "Идентификатор предложения",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "decision",
            "in": "body",
            "description": "Параметры решения",
            "required": true,
            "schema": { "$ref": "#/definitions/ActiveDecisionParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/proposal/{proposalId}/activateRefinance": {
      "post": {
        "tags": ["Proposals"],
        "summary": "Активация предложения с рефинансом",
        "operationId": "Proposals_ActivateProposalRefinance",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "description": "Идентификатор предложения",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "decisionParams",
            "in": "body",
            "description": "Параметры выбранного решения",
            "required": true,
            "schema": { "$ref": "#/definitions/DecisionParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/proposal/preApprovedResultDecisions": {
      "get": {
        "tags": ["Proposals"],
        "summary": "Возвращает информацию по предложениям по фильтру",
        "operationId": "Proposals_GetPreApprovedResultDecisions",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "isRefinance",
            "in": "query",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PreApprovedResultDecision" }
            }
          }
        }
      }
    },
    "/pushDevices": {
      "get": {
        "tags": ["PushDevices"],
        "summary": "Получение списка устройств подключенных к пуш",
        "operationId": "PushDevices_GetPushDevices",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PushDevice" }
            }
          }
        }
      }
    },
    "/pushDevices/getMessageHistory": {
      "get": {
        "tags": ["PushDevices"],
        "summary": "Получение истории отправленных сообщений",
        "operationId": "PushDevices_GetMessageHistory",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "pageParams.pageSize",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageParams.pageNumber",
            "in": "query",
            "description": "Номер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PushMessage" }
            }
          }
        }
      }
    },
    "/pushDevices/deleteMessage": {
      "post": {
        "tags": ["PushDevices"],
        "summary": "Пометить как удаленное одно или несколько сообщений из истории",
        "operationId": "PushDevices_DeleteMessages",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "internalMessageIds",
            "in": "body",
            "description": "Массив идентификаторов сообщений",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "format": "int64", "type": "integer" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/pushDevices/deleteAllMessages": {
      "post": {
        "tags": ["PushDevices"],
        "summary": "Пометить как удаленные все сообщения клиента",
        "operationId": "PushDevices_DeleteAllMessages",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/pushDevices/canBeConnected": {
      "get": {
        "tags": ["PushDevices"],
        "summary": "Может ли устройтсво быть подключено к push уведомлениям",
        "operationId": "PushDevices_CanBeConnected",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/pushDevices/setSecureToken": {
      "put": {
        "tags": ["PushDevices"],
        "summary": "Обновление токена устройства",
        "operationId": "PushDevices_SetPushSecureToken",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "secureTokenParams",
            "in": "body",
            "description": "Токен",
            "required": true,
            "schema": { "$ref": "#/definitions/SetSecureTokenParams" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/pushDevices/{pushDeviceId}/deleteRequests": {
      "post": {
        "tags": ["PushDevices"],
        "summary": "Отключение устройства от push уведомлений",
        "operationId": "PushDevices_DeletePushDevice",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "pushDeviceId",
            "in": "path",
            "description": "Идентификатор устройства",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/pushDevices/{pushDeviceId}/setMainRequests": {
      "post": {
        "tags": ["PushDevices"],
        "summary": "Установка push устройства основным",
        "operationId": "PushDevices_SetMainPushDevice",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "pushDeviceId",
            "in": "path",
            "description": "Идентификатор устройства",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/pushDevices/{pushDeviceId}/renameRequests": {
      "post": {
        "tags": ["PushDevices"],
        "summary": "Изменение названия push устройства",
        "operationId": "PushDevices_RenamePushDevice",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "pushDeviceId",
            "in": "path",
            "description": "Идентификатор устройства",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/pushDevices/createRequest": {
      "post": {
        "tags": ["PushDevices"],
        "summary": "Запуск операции по регистрации устройства на push-оповещения",
        "operationId": "PushDevices_CreatePushDevices",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "managementParams",
            "in": "body",
            "description": "Параметры запуска операции",
            "required": true,
            "schema": { "$ref": "#/definitions/CreatePushDevicesParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/pushDevices/bindPushDevice": {
      "post": {
        "tags": ["PushDevices"],
        "summary": "Выполнение операции по регистрации устройства на push-оповещения (только на инфо)",
        "operationId": "PushDevices_BindPushDevice",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "managementParams",
            "in": "body",
            "description": "Параметры запуска операции",
            "required": true,
            "schema": { "$ref": "#/definitions/CreatePushDevicesParams" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "format": "int64", "type": "integer" }
          }
        }
      }
    },
    "/operations/requests/{requestId}": {
      "get": {
        "tags": ["Requests"],
        "summary": "Возвращает информацию по поручению",
        "operationId": "Requests_GetRequest",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Request" }
          }
        }
      },
      "delete": {
        "tags": ["Requests"],
        "summary": "Отказ от завершения операции",
        "operationId": "Requests_CancelRequest",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/operations/requests/{requestId}/noTrackable": {
      "get": {
        "tags": ["Requests"],
        "summary": "Возвращает информацию по поручению без генерации события просмотра поручения",
        "operationId": "Requests_GetRequestNoRaiseEvent",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Request" }
          }
        }
      }
    },
    "/operations/requests/documents/report/downloadable": {
      "get": {
        "tags": ["Requests"],
        "summary": "Получение документа операции в виде отчета (в формате pdf)",
        "operationId": "Requests_GetDocumentReport",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "documentIdentifier.requestId",
            "in": "query",
            "description": "RequestId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "documentIdentifier.taskId",
            "in": "query",
            "description": "TaskId",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "documentIdentifier.taskTypeId",
            "in": "query",
            "description": "TaskTypeId",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "documentIdentifier.documentId",
            "in": "query",
            "description": "DocumentId",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "documentIdentifier.id",
            "in": "query",
            "description": "Identifier",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/operations/requests/documents/report/printable": {
      "get": {
        "tags": ["Requests"],
        "summary": "Получение документа операции в виде отчета (в формате pdf)",
        "operationId": "Requests_GetDocumentReportToPrint",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "documentIdentifier.requestId",
            "in": "query",
            "description": "RequestId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "documentIdentifier.taskId",
            "in": "query",
            "description": "TaskId",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "documentIdentifier.taskTypeId",
            "in": "query",
            "description": "TaskTypeId",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "documentIdentifier.documentId",
            "in": "query",
            "description": "DocumentId",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "documentIdentifier.id",
            "in": "query",
            "description": "Identifier",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/operations/requests/documents/sendByEmail": {
      "post": {
        "tags": ["Requests"],
        "summary": "Отправка документа по электронной почте",
        "operationId": "Requests_SendDocumentByEmail",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "documentParams",
            "in": "body",
            "description": "параметры документа для отправки",
            "required": true,
            "schema": { "$ref": "#/definitions/DocumentToEmailParams" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/operations/requests/documents/sendAllByEmail": {
      "post": {
        "tags": ["Requests"],
        "summary": "Отправка всех документов поручения по электронной почте",
        "operationId": "Requests_SendAllDocumentsByEmail",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "documentParams",
            "in": "body",
            "description": "параметры документа для отправки",
            "required": true,
            "schema": { "$ref": "#/definitions/DocumentToEmailParams" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/operations/requests/lastrequests": {
      "get": {
        "tags": ["Requests"],
        "summary": "Возвращает список последних поручений клиента",
        "operationId": "Requests_GetLastRequests",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Request" }
            }
          }
        }
      }
    },
    "/operations/requests/lastProcessedRequestByOperationCode/{operationCode}": {
      "get": {
        "tags": ["Requests"],
        "summary": "Возвращает последнее успешное поручение по коду операции",
        "operationId": "Requests_GetLastProcessedRequestByOperationCode",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "operationCode",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Request" }
          }
        }
      }
    },
    "/operations/requests/history": {
      "get": {
        "tags": ["Requests"],
        "summary": "Возвращает историю операций",
        "operationId": "Requests_GetHistory",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "filter.operationId",
            "in": "query",
            "description": "Тип операции",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.startDate",
            "in": "query",
            "description": "Дата с",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.endDate",
            "in": "query",
            "description": "Дата по",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.sumFrom",
            "in": "query",
            "description": "Сумма с",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "filter.sumTo",
            "in": "query",
            "description": "Сумма по",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "filter.templateId",
            "in": "query",
            "description": "ID шаблона",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.automaticPaymentId",
            "in": "query",
            "description": "ID автоплатежа",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.contractId",
            "in": "query",
            "description": "Идентификатор контракта",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.financialRequestsOnly",
            "in": "query",
            "description": "Отображать только финансовые операции",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.sortDirection",
            "in": "query",
            "description": "Порядок сортировки",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2]
          },
          {
            "name": "filter.searchString",
            "in": "query",
            "description": "Строка поиска",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.highlightTagName",
            "in": "query",
            "description": "Имя тега для подсветки",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageParams.pageSize",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageParams.pageNumber",
            "in": "query",
            "description": "Номер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/RequestsHistory" }
          }
        }
      }
    },
    "/operations/requests/history/report/downloadable": {
      "get": {
        "tags": ["Requests"],
        "summary": "Получение истории операций в виде отчета (в формате pdf)",
        "operationId": "Requests_GetHistoryReport",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/operations/requests/history/report/printable": {
      "get": {
        "tags": ["Requests"],
        "summary": "Получение истории операций в виде отчета для печати",
        "operationId": "Requests_GetHistoryReportToPrint",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/operations/requests/sendHistoryByEmail": {
      "post": {
        "tags": ["Requests"],
        "summary": "Отправляет выписку по счету на e-mail",
        "operationId": "Requests_SendHistoryByEmail",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "sendParams",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "$ref": "#/definitions/SendHistoryByEmailParams" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/operations/requests": {
      "post": {
        "tags": ["Requests"],
        "summary": "Начинает регистрацию поручения на основе универсальной операции",
        "operationId": "Requests_StartRequest",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "operationStart",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/OperationStart" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/operations/requests/{requestId}/repeatRequests": {
      "post": {
        "tags": ["Requests"],
        "summary": "Повтор операции",
        "operationId": "Requests_RepeatRequest",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "Номер поручения, на базе которого будет создано новое",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/operations/requests/{requestId}/restartRequests": {
      "post": {
        "tags": ["Requests"],
        "summary": "Редактирование поручения",
        "operationId": "Requests_RestartRequest",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "Номер поручения",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/operations/requests/{requestId}/revoke": {
      "post": {
        "tags": ["Requests"],
        "summary": "Отмена поручения (операция 0005).",
        "operationId": "Requests_RevokeRequest",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "Номер поручения",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/operations/requests/{requestId}/nextStep": {
      "post": {
        "tags": ["Requests"],
        "summary": "Переход на следующий шаг операции",
        "operationId": "Requests_NextStep",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "opPost",
            "in": "body",
            "description": "Параметры для перехода на следующий шаг операции",
            "required": true,
            "schema": { "$ref": "#/definitions/OperationPost" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/operations/requests/{requestId}/postStep": {
      "post": {
        "tags": ["Requests"],
        "summary": "Обновление параметров на шаге при PostBack",
        "operationId": "Requests_PostStep",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "opPost",
            "in": "body",
            "description": "Параметры для перехода на следующий шаг операции",
            "required": true,
            "schema": { "$ref": "#/definitions/OperationPost" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/operations/requests/{requestId}/previousStep": {
      "post": {
        "tags": ["Requests"],
        "summary": "Переход на предыдущий шаг операции",
        "operationId": "Requests_PreviousStep",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "номер поручения",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "opPost",
            "in": "body",
            "description": "Параметры операции",
            "required": true,
            "schema": { "$ref": "#/definitions/OperationPost" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/operations/requests/{requestId}/confirmStep": {
      "post": {
        "tags": ["Requests"],
        "summary": "Получение подтверждающих параметров операции",
        "operationId": "Requests_ConfirmStep",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "Номер поручения",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ConfirmResult" }
          }
        }
      }
    },
    "/operations/requests/{requestId}/finalize": {
      "post": {
        "tags": ["Requests"],
        "summary": "Завершение поручения",
        "operationId": "Requests_FinalizeRequest",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "opFinish",
            "in": "body",
            "description": "Параметры для завершения операции",
            "required": true,
            "schema": { "$ref": "#/definitions/OperationFinish" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/FinalizeResult" }
          }
        }
      }
    },
    "/operations/requests/{requestId}/confirmandfinalize": {
      "post": {
        "tags": ["Requests"],
        "summary": "Завершение поручения",
        "operationId": "Requests_ConfirmAndFinalizeRequest",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/FinalizeResult" }
          }
        }
      }
    },
    "/operations/requests/{requestId}/saveDraft": {
      "post": {
        "tags": ["Requests"],
        "summary": "Возврат на редактирование",
        "operationId": "Requests_SaveRequestDraft",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/operations/requests/{requestId}/authSms": {
      "get": {
        "tags": ["Requests"],
        "summary": "Принудительная отправка смс-кода для подтверждения операции",
        "operationId": "Requests_GetRequestAuthSms",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SmsData" }
          }
        }
      }
    },
    "/operations/requests/{requestId}/authSpecialCode": {
      "get": {
        "tags": ["Requests"],
        "summary": "Принудительная отправка специального кода для подтверждения операции",
        "operationId": "Requests_GetRequestAuthSpecialCode",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SpecialCodeData" }
          }
        }
      }
    },
    "/operations/requests/{requestId}/authPush": {
      "get": {
        "tags": ["Requests"],
        "summary": "Принудительная отправка смс-кода для подтверждения операции",
        "operationId": "Requests_GetRequestAuthPush",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/PushData" }
          }
        }
      }
    },
    "/operations/requests/{requestId}/nextTemplateStep": {
      "post": {
        "tags": ["Requests"],
        "summary": "Переход на следующий шаг операции редактирования шаблона",
        "operationId": "Requests_NextTemplateStep",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "opTemplatePost",
            "in": "body",
            "description": "Список значений параметров текущего шага",
            "required": true,
            "schema": { "$ref": "#/definitions/TemplatePost" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TemplateScenarioResult" }
          }
        }
      }
    },
    "/operations/requests/{requestId}/previousTemplateStep": {
      "post": {
        "tags": ["Requests"],
        "summary": "Переход на предыдущий шаг операции редактирования шаблона",
        "operationId": "Requests_PreviousTemplateStep",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "номер поручения",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TemplateScenarioResult" }
          }
        }
      }
    },
    "/operations/requests/{requestId}/postTemplateStep": {
      "post": {
        "tags": ["Requests"],
        "summary": "Переход на следующий шаг операции редактирования шаблона",
        "operationId": "Requests_PostTemplateStep",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "opTemplatePost",
            "in": "body",
            "description": "Список значений параметров текущего шага",
            "required": true,
            "schema": { "$ref": "#/definitions/TemplatePost" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TemplateScenarioResult" }
          }
        }
      }
    },
    "/operations/requests/{requestId}/createTemplate": {
      "post": {
        "tags": ["Requests"],
        "summary": "Создает шаблон операции по поручению",
        "operationId": "Requests_CreateTemplate",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/operations/requests/{requestId}/CreateTemplateByRequestAndStartEditIt": {
      "post": {
        "tags": ["Requests"],
        "summary": "Создает шаблон операции по поручению и запускает операцию его редактирования",
        "operationId": "Requests_CreateTemplateByRequestAndStartEditIt",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/operations/requests/{operationCode}/CreateOperationTemplate": {
      "post": {
        "tags": ["Requests"],
        "summary": "Запускает операцию создания шаблона",
        "operationId": "Requests_CreateOperationTemplate",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "operationCode",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/operations/requests/drafts": {
      "get": {
        "tags": ["Requests"],
        "summary": "Возвращает список черновиков клиента",
        "operationId": "Requests_GetDrafts",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/RequestDraft" }
            }
          }
        }
      }
    },
    "/operations/requests/drafts/{requestId}": {
      "delete": {
        "tags": ["Requests"],
        "summary": "Удаление",
        "operationId": "Requests_DeleteDraft",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/operations/requests/{requestId}/state": {
      "get": {
        "tags": ["Requests"],
        "summary": "Получение статуса поручения",
        "operationId": "Requests_GetRequestState",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                99
              ],
              "type": "integer"
            }
          }
        }
      }
    },
    "/operations/requests/{requestId}/executeInteractiveRule": {
      "post": {
        "tags": ["Requests"],
        "summary": "Запуск обработки интерактивного сценария",
        "operationId": "Requests_ExecuteInteractiveRule",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "Номер поручения",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/operations/requests/{requestId}/nextRuleScenarioStep": {
      "post": {
        "tags": ["Requests"],
        "summary": "Переход на следующий шаг интерактивного сценария правила",
        "operationId": "Requests_NextRuleScenarioStep",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "opPost",
            "in": "body",
            "description": "Параметры для перехода на следующий шаг интерактивного сценария правила",
            "required": true,
            "schema": { "$ref": "#/definitions/OperationPost" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/operations/requests/{requestId}/previousRuleScenarioStep": {
      "post": {
        "tags": ["Requests"],
        "summary": "Переход на предыдущий шаг интерактивного сценария правила",
        "operationId": "Requests_PreviousRuleScenarioStep",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "номер поручения",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/operations/requests/{requestId}/postRuleScenarioStep": {
      "post": {
        "tags": ["Requests"],
        "summary": "Обновление параметров на шаге интерактивного сценария правила при PostBack",
        "operationId": "Requests_PostRuleScenarioStep",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "opPost",
            "in": "body",
            "description": "Параметры для перехода на следующий шаг интерактивного сценария правила",
            "required": true,
            "schema": { "$ref": "#/definitions/OperationPost" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/operations/requests/{requestId}/ruleScenarioConfirmStep": {
      "post": {
        "tags": ["Requests"],
        "summary": "Получение подтверждающих параметров интерактивного сценария правила",
        "operationId": "Requests_RuleScenarioConfirmStep",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "Номер поручения",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ConfirmResult" }
          }
        }
      }
    },
    "/operations/requests/{requestId}/cancelInteractiveRule": {
      "delete": {
        "tags": ["Requests"],
        "summary": "Отказ от обработки интерактивного сценария правила",
        "operationId": "Requests_CancelInteractiveRule",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/operations/requests/{requestId}/finalizeInteractiveRule": {
      "post": {
        "tags": ["Requests"],
        "summary": "Завершение обработки интерактивного сценария правила",
        "operationId": "Requests_FinalizeInteractiveRule",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "opFinish",
            "in": "body",
            "description": "Параметры для завершения операции",
            "required": true,
            "schema": { "$ref": "#/definitions/OperationFinish" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/FinalizeResult" }
          }
        }
      }
    },
    "/operations/requests/{requestId}/confirmandfinalizeInteractiveRule": {
      "post": {
        "tags": ["Requests"],
        "summary": "Завершение обработки интерактивного сценария правила",
        "operationId": "Requests_ConfirmAndFinalizeInteractiveRule",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/FinalizeResult" }
          }
        }
      }
    },
    "/operations/siri/launchReplenishmentByPhoneNumber": {
      "get": {
        "tags": ["Siri"],
        "summary": "Внутрибанковский перевод по номеру телефона",
        "operationId": "Siri_ReplenishmentByPhoneNumber",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "query",
            "description": "Номер телефона",
            "required": true,
            "type": "string"
          },
          {
            "name": "sum",
            "in": "query",
            "description": "Сумма",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "enum": [1, 2, 3, 4, 5, 6],
              "type": "integer"
            }
          }
        }
      }
    },
    "/operations/siri/startReplenishmentByPhoneNumber": {
      "post": {
        "tags": ["Siri"],
        "summary": "Запуск операции внутрибанковский перевод по номеру телефона",
        "operationId": "Siri_StartReplenishmentByPhoneNumber",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "query",
            "description": "Номер телефона",
            "required": true,
            "type": "string"
          },
          {
            "name": "sum",
            "in": "query",
            "description": "Сумма",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/operations/siri/launchPaymentByTemplateId": {
      "get": {
        "tags": ["Siri"],
        "summary": "Платеж по шаблону",
        "operationId": "Siri_PaymentByTemplateId",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "templateId",
            "in": "query",
            "description": "Идентификатор шаблона",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sum",
            "in": "query",
            "description": "Сумма",
            "required": false,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "enum": [1, 2, 3, 4, 5, 6],
              "type": "integer"
            }
          }
        }
      }
    },
    "/survey/question/{link}": {
      "get": {
        "tags": ["Survey"],
        "summary": "Получение вопроса по уникальной ссылке.",
        "operationId": "Survey_GetSurveyQuestions",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "link",
            "in": "path",
            "description": "Уникальная ссылка на ответ вопроса.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SurveyQuestionModel" }
          }
        }
      }
    },
    "/survey/answer": {
      "post": {
        "tags": ["Survey"],
        "summary": "Ответ на вопрос опроса.",
        "operationId": "Survey_PostSurveyAnswer",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Модель ответа на вопрос опроса.",
            "required": true,
            "schema": { "$ref": "#/definitions/SurveyAnswerModel" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/survey/getRatingSettings": {
      "get": {
        "tags": ["Survey"],
        "summary": "Получение настроек, используемых для оценки мобильных приложений (iOS и Android).",
        "operationId": "Survey_GetAppRatingSettings",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/AppRatingSettings" }
          }
        }
      }
    },
    "/survey/sendFeedbackEmail": {
      "post": {
        "tags": ["Survey"],
        "summary": "Отправка письма с отзывом о приложении.",
        "operationId": "Survey_SendFeedbackEmail",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Модель письма с отзывом о приложении.",
            "required": true,
            "schema": { "$ref": "#/definitions/EmailFeedbackModel" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/operations/templates": {
      "get": {
        "tags": ["Templates"],
        "summary": "Возвращает список шаблонов клиента",
        "operationId": "Templates_GetTemplates",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Template" }
            }
          }
        }
      },
      "post": {
        "tags": ["Templates"],
        "summary": "Запуск поручения создания шаблона",
        "operationId": "Templates_CreateTemplate",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "operationCode",
            "in": "body",
            "description": "",
            "required": true,
            "schema": { "format": "int32", "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TemplateScenarioResult" }
          }
        }
      }
    },
    "/operations/templates/templatesWithSchedules": {
      "get": {
        "tags": ["Templates"],
        "summary": "Возвращает список шаблонов клиента",
        "operationId": "Templates_OperationTemplateWithSchedules",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "skipSchedules",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "skipNearestExecDate",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keepTemplatesWithoutExecDate",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/TemplateWithSchedules" }
            }
          }
        }
      }
    },
    "/operations/templates/{templateId}": {
      "get": {
        "tags": ["Templates"],
        "summary": "Получает информацию по шаблону",
        "operationId": "Templates_GetTemplate",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "идентификатор шаблона",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Template" }
          }
        }
      },
      "delete": {
        "tags": ["Templates"],
        "summary": "Удаляет шаблон",
        "operationId": "Templates_DeleteTemplate",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "идентификатор шаблона",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/operations/templates/{templateId}/ExtendedInfo": {
      "get": {
        "tags": ["Templates"],
        "summary": "Возвращает детальную информацию по шаблону (включая параметры)",
        "operationId": "Templates_GetTemplateExtendedInfo",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "идентификатор шаблона",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "skipSchedules",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "skipNearestExecDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keepNotNormalSchedules",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TemplateWithSchedules" }
          }
        }
      }
    },
    "/operations/templates/mostPopularTemplates": {
      "get": {
        "tags": ["Templates"],
        "summary": "Возвращает самые часто используемые / любимые шаблоны клиента в порядке убывания.",
        "operationId": "Templates_GetMostPopularTemplates",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "forceReload",
            "in": "query",
            "description": "Обновить кэш часто используемых / любимых шаблонов клиента.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/PopularClientTemplateInfo" }
            }
          }
        }
      }
    },
    "/operations/templates/{templateId}/name": {
      "put": {
        "tags": ["Templates"],
        "summary": "Переименовывает шаблон",
        "operationId": "Templates_RenameTemplate",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "идентификатор шаблона",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "body",
            "description": "name",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/operations/templates/favorites": {
      "post": {
        "tags": ["Templates"],
        "summary": "Добавляет шаблон в список любимых",
        "operationId": "Templates_MakeFavorite",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "templateId",
            "in": "body",
            "description": "идентификатор шаблона",
            "required": true,
            "schema": { "format": "int32", "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/operations/templates/favorites/{templateId}": {
      "delete": {
        "tags": ["Templates"],
        "summary": "Удаляет шаблон из списка любимых",
        "operationId": "Templates_RemoveFromFavorites",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "идентификатор шаблона",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/operations/templates/{templateId}/executionPlan": {
      "get": {
        "tags": ["Templates"],
        "summary": "Получает план исполнения поручений по шаблону",
        "operationId": "Templates_ExecutionPlan",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "идентификатор шаблона",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "planParams.executed",
            "in": "query",
            "description": "Только исполненые",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "planParams.planned",
            "in": "query",
            "description": "Только запланированные",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "planParams.pageParams.pageSize",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "planParams.pageParams.pageNumber",
            "in": "query",
            "description": "Номер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "planParams.periodParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "planParams.periodParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ExecutionPlan" }
            }
          }
        }
      }
    },
    "/operations/templates/{templateId}/edit": {
      "post": {
        "tags": ["Templates"],
        "summary": "Запуск поручения редактирования шаблона",
        "operationId": "Templates_EditTemplate",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TemplateScenarioResult" }
          }
        }
      }
    },
    "/operations/templates/{templateId}/deleteschedule": {
      "delete": {
        "tags": ["Templates"],
        "summary": "Запуск удаления расписания шаблона",
        "operationId": "Templates_DeleteTemplateSchedule",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } }
        }
      }
    },
    "/operations/templates/{templateId}/startRequests": {
      "post": {
        "tags": ["Templates"],
        "summary": "Начинает регистрацию поручения на основе универсальной операции",
        "operationId": "Templates_StartTemplate",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/operations/templates/formItems": {
      "get": {
        "tags": ["Templates"],
        "summary": "Возвращает список управляющих элементов",
        "operationId": "Templates_GetFormItems",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "formName",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "formItemId",
            "in": "query",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/FormItem" }
            }
          }
        }
      }
    },
    "/operations/templates/StartTemplateManagementOperation": {
      "post": {
        "tags": ["Templates"],
        "summary": "Начинает регистрацию поручения на основе универсальной операции",
        "operationId": "Templates_StartTemplateManagementOperation",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "operationPost",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/OperationPost" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/transactions/all": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Транзакции клиента",
        "operationId": "Transactions_GetAllLastTransactions",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "filterParams.startDate",
            "in": "query",
            "description": "Дата начала",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filterParams.endDate",
            "in": "query",
            "description": "Дата окончания",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filterParams.sumFrom",
            "in": "query",
            "description": "Сумма с",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "filterParams.sumTo",
            "in": "query",
            "description": "Сумма по",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "filterParams.processedOnly",
            "in": "query",
            "description": "Только обработанные",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterParams.income",
            "in": "query",
            "description": "Приходы",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterParams.outcome",
            "in": "query",
            "description": "Расходы",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterParams.searchString",
            "in": "query",
            "description": "Строка поиска",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterParams.highlightTagName",
            "in": "query",
            "description": "Имя тега для подсветки",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterParams.sortDirection",
            "in": "query",
            "description": "Направление сортировки",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2]
          },
          {
            "name": "pageParams.pageSize",
            "in": "query",
            "description": "Размер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageParams.pageNumber",
            "in": "query",
            "description": "Номер страницы",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OperationHistoryItem" }
            }
          }
        }
      }
    },
    "/transactions/summary": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Доходы и расходы в текущем месяце",
        "operationId": "Transactions_GetSummaryIncomeAndExpences",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "dateStart",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "dateEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TransactionSummary" }
          }
        }
      }
    },
    "/transfers/rurTransfer": {
      "post": {
        "tags": ["Transfers"],
        "summary": "Запуск операции рублёвого перевода",
        "operationId": "Transfers_StartRurTransferByCode",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "operationCode",
            "in": "query",
            "description": "Код операции",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/trustmanagement/contract/{contractId}": {
      "get": {
        "tags": ["TrustManagement"],
        "summary": "Получить договор по id",
        "operationId": "TrustManagement_GetContract",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "Идентификатор договора ДУ",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TrustManagementContractInfo" }
          }
        }
      }
    },
    "/trustmanagement/contract/{contractId}/documents": {
      "get": {
        "tags": ["TrustManagement"],
        "summary": "Получить документы по договору ИИС ДУ",
        "operationId": "TrustManagement_GetContractDocuments",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "Идентификатор договора ДУ",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Document" }
            }
          }
        }
      }
    },
    "/trustmanagement/replenish": {
      "post": {
        "tags": ["TrustManagement"],
        "summary": "Пополнить договор ИИС ДУ",
        "operationId": "TrustManagement_ReplenishContract",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/trustmanagement/contract/{productNativeId}": {
      "post": {
        "tags": ["TrustManagement"],
        "summary": "Открыть договор ИИС ДУ",
        "operationId": "TrustManagement_CreateContract",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "productNativeId",
            "in": "path",
            "description": "Код стратегии (идентификатор стратегии в учетной системе УК)",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/unittrust/buy/{fundId}": {
      "post": {
        "tags": ["UnitTrust"],
        "summary": "Запускает операцию 2706 \"Покупка ПИФ через цифровые каналы\"",
        "operationId": "UnitTrust_RunConcreteTrustFund",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "fundId",
            "in": "path",
            "description": "ID фонда.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "actor",
            "in": "query",
            "description": "Откуда был вызван метод. Прокидывается в googleAnalyticParams",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/unittrust/sell/{fundId}": {
      "post": {
        "tags": ["UnitTrust"],
        "summary": "Запускает операцию 2707 \"Погашение ПИФ через цифровые каналы\"",
        "operationId": "UnitTrust_SellConcreteTrustFund",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "fundId",
            "in": "path",
            "description": "ID фонда.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/unittrust/signagreement": {
      "post": {
        "tags": ["UnitTrust"],
        "summary": "Запускает операцию 2708 \"Соглашения об обработке перс. данных для ПИФ\"",
        "operationId": "UnitTrust_RunSignAgreementOperation",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/unittrust/funds/showcasedata": {
      "get": {
        "tags": ["UnitTrust"],
        "summary": "Возвращает список ПИФов для витрины",
        "operationId": "UnitTrust_GetShowCaseFundsData",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ShowCaseInfo" }
          }
        }
      }
    },
    "/unittrust/funds": {
      "get": {
        "tags": ["UnitTrust"],
        "summary": "Возвращает список ПИФов",
        "operationId": "UnitTrust_GetFundsData",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/UnitTrustFunds" }
          }
        },
        "deprecated": true
      }
    },
    "/unittrust/funds/portfolioincome": {
      "get": {
        "tags": ["UnitTrust"],
        "summary": "Возвращает информацию, по паям, принадлежащим конкретному клиенту",
        "operationId": "UnitTrust_GetPortfolioIncome",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/UnitTrustPortfolioInfo" }
          }
        },
        "deprecated": true
      }
    },
    "/unittrust/isoperationsenabled": {
      "get": {
        "tags": ["UnitTrust"],
        "summary": "Feature toggle для операций с ПИФ",
        "operationId": "UnitTrust_IsOperationsEnabled",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/unittrust/funds/{fundId}": {
      "get": {
        "tags": ["UnitTrust"],
        "summary": "Возвращает информацию по Фонду",
        "operationId": "UnitTrust_GetFundInfo",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "fundId",
            "in": "path",
            "description": "id Фонда",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/FundData" }
          }
        },
        "deprecated": true
      }
    },
    "/unittrust/funds/clients/{fundId}": {
      "get": {
        "tags": ["UnitTrust"],
        "summary": "Возвращает информацию по Фонду в разрезе клиента",
        "operationId": "UnitTrust_GetClientFundInfo",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "fundId",
            "in": "path",
            "description": "id Фонда",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ClientFundsData" }
          }
        },
        "deprecated": true
      }
    },
    "/unittrust/funds/fullinfo/{fundId}": {
      "get": {
        "tags": ["UnitTrust"],
        "summary": "Возвращает полную информацию по Фонду\r\nДоходность фонда, структура и т.д. а так же данные с доходностью клиента по этому фонду",
        "operationId": "UnitTrust_GetFullFundInfo",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "fundId",
            "in": "path",
            "description": "id Фонда",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/FullFundData" }
          }
        }
      }
    },
    "/unittrust/funds/data/{fundId}/{periodId}": {
      "get": {
        "tags": ["UnitTrust"],
        "summary": "Возвращает график",
        "operationId": "UnitTrust_GetFundHistoryData",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "fundId",
            "in": "path",
            "description": "id Фонда",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "periodId",
            "in": "path",
            "description": "Числовой код периода, за который необходимо вернуть данные",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/FundHistoryData" }
          }
        }
      }
    },
    "/unittrust/funds/{fundId}/periods": {
      "get": {
        "tags": ["UnitTrust"],
        "summary": "Возвращает периоды с доходностью",
        "operationId": "UnitTrust_GetFundIncomePeriods",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "fundId",
            "in": "path",
            "description": "id Фонда",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/FundIncome" }
          }
        },
        "deprecated": true
      }
    },
    "/unittrust/funds/docs/{fundId}": {
      "get": {
        "tags": ["UnitTrust"],
        "summary": "Возвращает документы по фонду",
        "operationId": "UnitTrust_GetFundDocuments",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "fundId",
            "in": "path",
            "description": "id Фонда",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/FundDocument" }
            }
          }
        },
        "deprecated": true
      }
    },
    "/unittrust/funds/structure/{fundId}": {
      "get": {
        "tags": ["UnitTrust"],
        "summary": "Возвращает состав фонда в разрезе секторов экономики",
        "operationId": "UnitTrust_GetFundStructure",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "fundId",
            "in": "path",
            "description": "id Фонда",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/FundSectorStructure" }
          }
        }
      }
    },
    "/unittrust/funds/operations/{fundId}": {
      "get": {
        "tags": ["UnitTrust"],
        "summary": "Возвращает список операций клиента по конкретному фонду",
        "operationId": "UnitTrust_GetClientFundOperations",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "fundId",
            "in": "path",
            "description": "id Фонда",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ClientFundOperation" }
            }
          }
        }
      }
    },
    "/unittrust/funds/minpurchasesum/{fundId}": {
      "get": {
        "tags": ["UnitTrust"],
        "summary": "Возвращает минимальную сумму покупки",
        "operationId": "UnitTrust_GetMinPurchaseSum",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "fundId",
            "in": "path",
            "description": "id Фонда",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/PurchaseSum" }
          }
        }
      }
    },
    "/unittrust/clientinfo": {
      "get": {
        "tags": ["UnitTrust"],
        "summary": "Возвращает информацию по покупкам паев и согласия у клиента",
        "operationId": "UnitTrust_GetUnitTrustClientInfo",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ClientUnitTrustInfo" }
          }
        },
        "deprecated": true
      }
    },
    "/unittrust/depositinfo": {
      "get": {
        "tags": ["UnitTrust"],
        "summary": "Информация по специальному предложению ПИФ + вклад Инвестиционный доход",
        "operationId": "UnitTrust_GetSpecialUnitTrustDepositInfo",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/UnitTrustDepositInfo" }
          }
        }
      }
    },
    "/whatsnewinapp/getblocks": {
      "get": {
        "tags": ["WhatsNewInApp"],
        "summary": "Возвращает список доступных блоков",
        "operationId": "WhatsNewInApp_GetBlocks",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Block" }
            }
          }
        }
      }
    },
    "/whatsnewinapp/getblockpages": {
      "get": {
        "tags": ["WhatsNewInApp"],
        "summary": "Возвращает страницы блока",
        "operationId": "WhatsNewInApp_GetBlockPages",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "blockId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Page" }
            }
          }
        }
      }
    },
    "/whatsnewinapp/page/read": {
      "post": {
        "tags": ["WhatsNewInApp"],
        "summary": "Помечает страницу прочитанной",
        "operationId": "WhatsNewInApp_Read",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "pageId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "boolean" } }
        }
      }
    },
    "/wikiPay/launchRoublePaymentOperation": {
      "post": {
        "tags": ["WikiPay"],
        "summary": "Запуск операции рублевого перевода c предзаполненными реквизитами поставщика услуги",
        "operationId": "WikiPay_LaunchRoublePaymentOperation",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "providerId",
            "in": "body",
            "description": "Id поставщика услуги",
            "required": true,
            "schema": { "format": "int32", "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/wikiPay/launchRoublePaymentOperationByQr": {
      "post": {
        "tags": ["WikiPay"],
        "summary": "Запуск операции рублевого перевода c предзаполненными реквизитами по qr коду",
        "operationId": "WikiPay_LaunchRoublePaymentOperationByQr",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "requisites",
            "in": "body",
            "description": "реквизиты получателя",
            "required": true,
            "schema": { "$ref": "#/definitions/QrCodeTransferRequisites" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/wikiPay/launchRoublePaymentOperationByQr2": {
      "post": {
        "tags": ["WikiPay"],
        "summary": "Запуск операции рублевого перевода c предзаполненными реквизитами по qr коду",
        "operationId": "WikiPay_LaunchRoublePaymentOperationByQr2",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "qrCodeParams",
            "in": "body",
            "description": "реквизиты получателя",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/QrCodeParam" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/wikiPay/launchPaymentPurchaseSbp": {
      "post": {
        "tags": ["WikiPay"],
        "summary": "Запуск операции оплаты через СБП",
        "operationId": "WikiPay_LaunchPaymentPurchaseSbp",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "qrCodeParams",
            "in": "body",
            "description": "реквизиты получателя",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/QrCodeParam" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/wikiPay/launchRoublePaymentOperationByBarcode": {
      "post": {
        "tags": ["WikiPay"],
        "summary": "Запуск операции рублевого перевода c предзаполненными реквизитами по штрих-коду",
        "operationId": "WikiPay_LaunchRoublePaymentOperationByBarcode",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "barcode",
            "in": "body",
            "description": "строка из штрих-кода",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ScenarioResult" }
          }
        }
      }
    },
    "/wikiPay/availableFeatures": {
      "get": {
        "tags": ["WikiPay"],
        "summary": "Доступные функциональные возможности WikiPay",
        "operationId": "WikiPay_GetAvailableFeatures",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/WikiPayAvailableFeatures" }
          }
        },
        "deprecated": true
      }
    },
    "/wikiPay/search": {
      "get": {
        "tags": ["WikiPay"],
        "summary": "Поиск операций по части наименования, ИНН или коду операции",
        "operationId": "WikiPay_Search",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "districtId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "localityId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "categoryId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OperationsSearchResults" }
          }
        }
      }
    },
    "/wikiPay/search2": {
      "get": {
        "tags": ["WikiPay"],
        "summary": "Поиск операций по части наименования, ИНН или коду операции",
        "operationId": "WikiPay_Search2",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "districtId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "localityId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "categoryId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OperationsSearchResults" }
          }
        }
      }
    }
  },
  "definitions": {
    "AbsAccount": {
      "description": "Счет АБС",
      "type": "object",
      "properties": {
        "absAccountId": {
          "description": "Составной идентификатор счета АБС",
          "type": "string"
        },
        "isLoan": { "description": "Это кредит?", "type": "boolean" },
        "accountType": {
          "format": "int32",
          "description": "Тип счета (1 = Account , 2 = CardAccount , 3 = AbsAccount )",
          "enum": [1, 2, 3],
          "type": "integer",
          "readOnly": true
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "office": {
          "$ref": "#/definitions/Office",
          "description": "Servicing office"
        },
        "accountingBranch": {
          "$ref": "#/definitions/Branch",
          "description": "Accounting branch"
        },
        "number": { "description": "Number", "type": "string" },
        "previousNumber": {
          "description": "Номер счета до миграции",
          "type": "string"
        },
        "previousOpenDate": {
          "format": "date-time",
          "description": "Дата открытия до миграции",
          "type": "string"
        },
        "name": { "description": "Наименование", "type": "string" },
        "clientLabel": {
          "description": "Пользовательское наименование",
          "type": "string"
        },
        "balance": {
          "format": "double",
          "description": "Balance",
          "type": "number"
        },
        "availableBalance": {
          "format": "double",
          "description": "Доступный баланс",
          "type": "number"
        },
        "isWithReplenishment": {
          "description": "Is account replenishment available",
          "type": "boolean"
        },
        "isWithSubtraction": {
          "description": "Возможность снятия средств со счёта",
          "type": "boolean"
        },
        "openDate": {
          "format": "date-time",
          "description": "Дата открытия",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "description": "Состояние (1 = NotReady , 2 = Active , 3 = Blocked , 4 = Closed )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "closeDate": {
          "format": "date-time",
          "description": "Дата закрытия",
          "type": "string"
        },
        "requisites": {
          "$ref": "#/definitions/AccountRequisitesUnify",
          "description": "Реквизиты счёта"
        },
        "entityIdentifier": {
          "$ref": "#/definitions/EntityIdentifier",
          "description": ""
        }
      }
    },
    "Currency": {
      "description": "Currency info",
      "type": "object",
      "properties": {
        "currencyId": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        },
        "name": { "description": "Name", "type": "string" },
        "nameIso": { "description": "ISO name", "type": "string" },
        "isMetal": { "description": "Is metal account", "type": "boolean" }
      }
    },
    "Office": {
      "description": "Office",
      "type": "object",
      "properties": {
        "officeId": {
          "format": "int32",
          "description": "Идентификатор офиса",
          "type": "integer"
        },
        "code": { "format": "int32", "description": "Code", "type": "integer" },
        "briefName": { "description": "Office brief name", "type": "string" },
        "branch": { "$ref": "#/definitions/Branch", "description": "Branch" },
        "address": { "description": "Адрес", "type": "string" },
        "contactLocality": { "description": "Город", "type": "string" },
        "streetLocation": { "description": "Улица", "type": "string" },
        "metro": { "description": "Метро", "type": "string" },
        "geoLat": {
          "format": "double",
          "description": "Широта",
          "type": "number"
        },
        "geoLong": {
          "format": "double",
          "description": "Долгота",
          "type": "number"
        }
      }
    },
    "Branch": {
      "description": "Branch",
      "type": "object",
      "properties": {
        "branchId": {
          "format": "int32",
          "description": "Идентификатор филиала",
          "type": "integer"
        },
        "code": { "format": "int32", "description": "Code", "type": "integer" },
        "briefName": { "description": "Office brief name", "type": "string" },
        "bic": { "description": "Bic", "type": "string" },
        "corrAccount": { "description": "Corr account", "type": "string" },
        "bank": { "$ref": "#/definitions/Bank", "description": "Bank" }
      }
    },
    "AccountRequisitesUnify": {
      "description": "Унифицированный класс банковских реквизитов",
      "type": "object",
      "properties": {
        "bank": {
          "$ref": "#/definitions/BankUnify",
          "description": "Реквизиты банка (Объединение рублевого и валютного)"
        },
        "intermediaryBank": {
          "$ref": "#/definitions/BankUnify",
          "description": "Данные банка-посредника"
        },
        "correspondentBank": {
          "$ref": "#/definitions/BankUnify",
          "description": "Данные банка-корреспондента"
        },
        "accountingBankName": {
          "description": "Наименование РКЦ",
          "type": "string"
        },
        "beneficiaryName": {
          "description": "ФИО владельца\r\n<remarks>для внутренее счета можно так же получить через Client контракта</remarks>",
          "type": "string"
        }
      }
    },
    "EntityIdentifier": {
      "description": "Идентификатор сущности",
      "type": "object",
      "properties": {
        "entityType": {
          "format": "int32",
          "description": "Тип сущности",
          "type": "integer"
        },
        "identifier": {
          "description": "Идентификатор экземпляра",
          "type": "string"
        },
        "additionalIdentifier": {
          "description": "Дополнительный идентификатор экземпляра",
          "type": "string"
        }
      }
    },
    "Bank": {
      "description": "Our bank",
      "type": "object",
      "properties": {
        "bankGroup": {
          "$ref": "#/definitions/BankGroup",
          "description": "Bank group"
        },
        "bankId": {
          "format": "int32",
          "description": "Идентификатор банка",
          "type": "integer"
        },
        "briefName": { "description": "Bank brief name", "type": "string" },
        "contactPhoneMoscow": {
          "description": "Контактный номер телефона банка для Москвы",
          "type": "string"
        },
        "contactPhoneRussia": {
          "description": "Бесплатный контактный номер телефона банка по России",
          "type": "string"
        },
        "bic": { "description": "БИК", "type": "string" },
        "inn": { "description": "ИНН банка", "type": "string" },
        "imageSrc": {
          "description": "Ссылка на логотип банка",
          "type": "string"
        },
        "displayMember": {
          "description": "Получает отображаемое имя банка.",
          "type": "string",
          "readOnly": true
        },
        "name": { "description": "Bank's name", "type": "string" },
        "correspondenceAccount": {
          "description": "Счет банка в банке-корреспонденте",
          "type": "string"
        }
      }
    },
    "BankUnify": {
      "description": "Унифицированный класс для любого вида банка (отечественного или иностранного).",
      "type": "object",
      "properties": {
        "bankType": {
          "format": "int32",
          "description": "Тип банка (1 = RussianBank , 2 = ForeignBank )",
          "enum": [1, 2],
          "type": "integer"
        },
        "name": { "description": "Bank's name", "type": "string" },
        "correspondenceAccount": {
          "description": "Счет банка в банке-корреспонденте",
          "type": "string"
        },
        "displayMember": {
          "description": "Получает отображаемое имя банка.",
          "type": "string"
        },
        "bankGroup": {
          "$ref": "#/definitions/BankGroup",
          "description": "Bank group"
        },
        "bankId": {
          "format": "int32",
          "description": "Идентификатор банка",
          "type": "integer"
        },
        "briefName": { "description": "Bank brief name", "type": "string" },
        "contactPhoneMoscow": {
          "description": "Контактный номер телефона банка для Москвы",
          "type": "string"
        },
        "contactPhoneRussia": {
          "description": "Бесплатный контактный номер телефона банка по России",
          "type": "string"
        },
        "bic": { "description": "БИК", "type": "string" },
        "inn": { "description": "ИНН банка", "type": "string" },
        "imageSrc": {
          "description": "Ссылка на логотип банка",
          "type": "string"
        },
        "swiftCode": { "description": "Swift код банка", "type": "string" },
        "abaCode": {
          "description": "ABA (USA banking number, the same thing as Swift code for other countries",
          "type": "string"
        },
        "physicalAddress": { "description": "Адрес", "type": "string" },
        "cityHeading": { "description": "Город", "type": "string" },
        "country": { "$ref": "#/definitions/Country", "description": "Страна" }
      }
    },
    "BankGroup": {
      "description": "Bank group",
      "type": "object",
      "properties": {
        "bankGroupId": {
          "format": "int32",
          "description": "Bank group identifier",
          "type": "integer"
        },
        "name": { "description": "Bank group name", "type": "string" }
      }
    },
    "Country": {
      "description": "Страна",
      "type": "object",
      "properties": {
        "countryId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "nameLat": {
          "description": "Наименование латиницей",
          "type": "string"
        },
        "name": { "description": "Наименование", "type": "string" },
        "isoN": { "format": "int32", "description": "IsoN", "type": "integer" }
      }
    },
    "StatementFilterParams": {
      "description": "Параметры отбора выписки",
      "type": "object",
      "properties": {
        "startDate": {
          "format": "date-time",
          "description": "Дата начала",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "Дата окончания",
          "type": "string"
        },
        "sumFrom": {
          "format": "double",
          "description": "Сумма с",
          "type": "number"
        },
        "sumTo": {
          "format": "double",
          "description": "Сумма по",
          "type": "number"
        },
        "processedOnly": {
          "description": "Только обработанные",
          "type": "boolean"
        },
        "income": { "description": "Приходы", "type": "boolean" },
        "outcome": { "description": "Расходы", "type": "boolean" },
        "searchString": { "description": "Строка поиска", "type": "string" },
        "highlightTagName": {
          "description": "Имя тега для подсветки",
          "type": "string"
        },
        "sortDirection": {
          "format": "int32",
          "description": "Направление сортировки (1 = Ascending , 2 = Descending )",
          "enum": [1, 2],
          "type": "integer"
        }
      }
    },
    "PageParams": {
      "description": "Параметры постраничной разбивки",
      "type": "object",
      "properties": {
        "pageSize": {
          "format": "int32",
          "description": "Размер страницы",
          "type": "integer"
        },
        "pageNumber": {
          "format": "int32",
          "description": "Номер страницы",
          "type": "integer"
        }
      }
    },
    "AbsAccountStatement": {
      "description": "",
      "type": "object",
      "properties": {
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "incomingBalance": {
          "format": "double",
          "description": "Входящий остаток",
          "type": "number"
        },
        "creditTurn": {
          "format": "double",
          "description": "Суммарный приход",
          "type": "number"
        },
        "debitTurn": {
          "format": "double",
          "description": "Суммарный расход",
          "type": "number"
        },
        "outcomingBalance": {
          "format": "double",
          "description": "Исходящий остаток",
          "type": "number"
        },
        "holdDebit": {
          "format": "double",
          "description": "Сумма заблокированных средств",
          "type": "number"
        },
        "transactions": {
          "description": "Список проводок",
          "type": "array",
          "items": { "$ref": "#/definitions/AbsAccountTransaction" }
        },
        "totalTransactionCount": {
          "format": "int32",
          "description": "Общее число проводок",
          "type": "integer"
        },
        "sortDirection": {
          "format": "int32",
          "description": "Направление сортировки выписки (по убыванию или возрастанию даты) (1 = Ascending , 2 = Descending )",
          "enum": [1, 2],
          "type": "integer"
        }
      }
    },
    "AbsAccountTransaction": {
      "description": "Транзакция по счету АБС",
      "type": "object",
      "properties": {
        "valueDate": {
          "format": "date-time",
          "description": "Дата валютирования",
          "type": "string"
        },
        "transactionDate": {
          "format": "date-time",
          "description": "Дата проводки",
          "type": "string"
        },
        "ground": { "description": "Основание (назначение)", "type": "string" },
        "transactionSum": {
          "format": "double",
          "description": "Сумма транзакции",
          "type": "number"
        },
        "transactionCurrency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "request": {
          "$ref": "#/definitions/Request",
          "description": "Поручение"
        },
        "isProcessed": {
          "description": "Завершенная транзакция",
          "type": "boolean"
        },
        "title": {
          "description": "Наименование операции на основе транзакции для отображения в разделе истории в МБ и ИБ",
          "type": "string"
        }
      }
    },
    "Request": {
      "description": "Информация по поручению",
      "type": "object",
      "properties": {
        "requestId": {
          "format": "int64",
          "description": "Номер поручения",
          "type": "integer"
        },
        "state": {
          "format": "int32",
          "description": "Состояние (1 = Request , 3 = PendingRequest , 8 = Passed , 10 = Ok , 11 = Canceled , -1 = Unknown )",
          "enum": [1, 3, 8, 10, 11, -1],
          "type": "integer"
        },
        "office": {
          "$ref": "#/definitions/Office",
          "description": "Офис, в котором заренистрировано поручение"
        },
        "operation": {
          "$ref": "#/definitions/Operation",
          "description": "Операция"
        },
        "pending": { "description": "Является отложеным", "type": "boolean" },
        "startTime": {
          "format": "date-time",
          "description": "Время пересоздания поручения / Дата активации отложенного поручения",
          "type": "string"
        },
        "requestTime": {
          "format": "date-time",
          "description": "Время регистрации поручения",
          "type": "string"
        },
        "finishTime": {
          "format": "date-time",
          "description": "Дата/Время завершения обработки поручения",
          "type": "string"
        },
        "mode": {
          "format": "int32",
          "description": "Режим проведения поручения (1 = Template , 2 = CashOperation , 3 = BankSelf , 4 = Regular , 5 = ATM , 6 = General , 255 = Normal , -1 = Unknown )",
          "enum": [1, 2, 3, 4, 5, 6, 255, -1],
          "type": "integer"
        },
        "template": {
          "$ref": "#/definitions/Template",
          "description": "Шаблон, по которому проведено поручение"
        },
        "automaticPayment": {
          "$ref": "#/definitions/AutomaticPayment",
          "description": "Автоплатеж, по которому проведено поручение"
        },
        "senderName": { "description": "Отправитель", "type": "string" },
        "receiverName": { "description": "Получатель", "type": "string" },
        "sum": {
          "format": "double",
          "description": "Сумма операции (если применимо)",
          "type": "number"
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта операции (если применимо)"
        },
        "commissionSum": {
          "format": "double",
          "description": "Сумма комиссии (если применимо)",
          "type": "number"
        },
        "params": {
          "description": "Параметры поручения",
          "type": "array",
          "items": { "$ref": "#/definitions/RequestParam" }
        },
        "isRepeatAllowed": {
          "description": "Разрешено ли повторение операции клиентом",
          "type": "boolean"
        },
        "isRevokeAllowed": {
          "description": "Разрешена ли отмена операции клиентом (операция 0005).",
          "type": "boolean"
        },
        "stateName": {
          "description": "Строковое наимвенование состояния",
          "type": "string"
        },
        "description": { "description": "Описание", "type": "string" },
        "documents": {
          "description": "Документы по поручению",
          "type": "array",
          "items": { "$ref": "#/definitions/Document" }
        },
        "comments": {
          "description": "Комментарии по поручению",
          "type": "array",
          "items": { "$ref": "#/definitions/Comment" }
        },
        "isCreatedByOtherClient": {
          "description": "Поручение другого клиента",
          "type": "boolean"
        },
        "customOperationName": {
          "description": "Кастомное наименование операции",
          "type": "string"
        },
        "displayName": {
          "description": "Кастомное наименование поручения",
          "type": "string"
        }
      }
    },
    "Operation": {
      "description": "Operation",
      "type": "object",
      "properties": {
        "operationId": {
          "format": "int32",
          "description": "ID",
          "type": "integer"
        },
        "code": { "format": "int32", "description": "Code", "type": "integer" },
        "isOperationWithProgressBar": {
          "description": "Флаг отображения прогресс бара",
          "type": "boolean"
        },
        "name": { "description": "Name", "type": "string" },
        "shortName": { "description": "Short name", "type": "string" },
        "help": {
          "$ref": "#/definitions/OperationHelp",
          "description": "Help"
        },
        "isDraftSupported": {
          "description": "Поддерживает черновики",
          "type": "boolean"
        },
        "categories": {
          "description": "Категории, в которые входит операция",
          "type": "array",
          "items": { "$ref": "#/definitions/Category" }
        },
        "state": {
          "format": "int32",
          "description": "Статус операции (1 = Active , 2 = Blocked , 3 = Deleted )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "imageSrc": {
          "description": "Ссылка на логотип операции",
          "type": "string"
        },
        "image": { "description": "Логотип в виде base64", "type": "string" },
        "isTemplateSupported": {
          "description": "Может выполняться регулярно",
          "type": "boolean"
        },
        "allowedContextTypes": {
          "format": "int32",
          "description": "Доступные типы контекстов выполнения операций (0 = None , 1 = Default , 2 = Debit , 4 = Credit , 7 = All )",
          "enum": [0, 1, 2, 4, 7],
          "type": "integer"
        },
        "requireConfirmButton": {
          "description": "Подтверждение только при нажатии на кнопку",
          "type": "boolean"
        },
        "confirmButtonDescription": {
          "description": "Поясняющий текст к кнопке подтверждения",
          "type": "string"
        },
        "confirmButtonText": {
          "description": "Текст для кнопки подтверждения",
          "type": "string"
        },
        "awaitProcessed": {
          "description": "Ожидать обработки операции после подтверждения",
          "type": "boolean"
        },
        "localities": {
          "description": "Населенные пункты, к которым относится операция",
          "type": "array",
          "items": { "$ref": "#/definitions/Locality" }
        },
        "wikiPayRequisites": {
          "$ref": "#/definitions/WikiPayRequisites",
          "description": "Реквизиты поставщика WikiPay"
        },
        "cardTransferRequisites": {
          "$ref": "#/definitions/CardTransferRequisites",
          "description": "Параметры карты получателя"
        },
        "transferByPhoneRequisites": {
          "$ref": "#/definitions/TransferByPhoneRequisites",
          "description": "запуск операции перевода по номеру телефона"
        },
        "nextOperationCode": {
          "format": "int32",
          "description": "Код следующей операции для запуска после завершения текущей",
          "type": "integer"
        },
        "description": { "description": "Описание", "type": "string" },
        "paymentReceiverInn": { "description": "ИНН", "type": "string" },
        "operationSteps": {
          "description": "Список идентификаторов шагов операции",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "saveBeforeBack": {
          "description": "Признак необходимости сохранять текущий шаг перед движением назад",
          "type": "boolean"
        }
      }
    },
    "Template": {
      "description": "Шаблон операции",
      "type": "object",
      "properties": {
        "templateId": {
          "format": "int32",
          "description": "Идентификатор шаблона",
          "type": "integer"
        },
        "code": {
          "format": "int32",
          "description": "Код шаблона",
          "type": "integer"
        },
        "name": { "description": "Наименование", "type": "string" },
        "isFavorite": {
          "description": "Признак избранного шаблона",
          "type": "boolean"
        },
        "operationCode": {
          "format": "int32",
          "description": "Код операции",
          "type": "integer"
        },
        "operationImageSrc": {
          "description": "Ссылка на логотип операции",
          "type": "string"
        },
        "isRegular": {
          "description": "Шаблон запланирован на автоматическое выполнение",
          "type": "boolean"
        },
        "isHistoryAvailable": {
          "description": "Шаблон имеет историю выполнения",
          "type": "boolean"
        },
        "operation": {
          "$ref": "#/definitions/Operation",
          "description": "Operation"
        },
        "categoryID": {
          "description": "ID категории шаблона",
          "type": "string"
        },
        "parentCategoryID": {
          "description": "ID родительской категории шаблона",
          "type": "string"
        },
        "sum": {
          "format": "double",
          "description": "Сумма по шаблону",
          "type": "number"
        },
        "channels": {
          "format": "int32",
          "description": "Каналы доступа (1 = Phone , 2 = WWW , 4 = Mobile , 8 = SMS , 16 = Kiosk , 32 = MobileApp , 64 = TabletApp , 128 = InternetBank , 256 = Manager , 512 = WebManager , 1024 = BankAtWork , 2048 = MobileAppNew , 4096 = AtmViaProvider , 6398 = ActualClientChannels , 8192 = MobileNetwork , 16384 = Partner , 32767 = AllChannels )",
          "enum": [
            1,
            2,
            4,
            8,
            16,
            32,
            64,
            128,
            256,
            512,
            1024,
            2048,
            4096,
            6398,
            8192,
            16384,
            32767
          ],
          "type": "integer"
        },
        "templateParams": {
          "description": "Параметры шаблона",
          "type": "array",
          "items": { "$ref": "#/definitions/ScenarioParam" }
        }
      }
    },
    "AutomaticPayment": {
      "description": "Параметры автополнения",
      "type": "object",
      "properties": {
        "automaticPaymentId": {
          "format": "int32",
          "description": "Идентификатор автоплатежа",
          "type": "integer"
        },
        "name": { "description": "Наименование автоплатежа", "type": "string" },
        "accountNumber": {
          "description": "Номер пополняемого счета/кошелька/телефона",
          "type": "string"
        },
        "paymentReceiverName": {
          "description": "Наименование получателя платежа",
          "type": "string"
        },
        "automaticInvoicePaymentMode": {
          "format": "int32",
          "description": "Режим автоматической оплаты выставленных счетов (1 = Manual , 2 = Automatic )",
          "enum": [1, 2],
          "type": "integer"
        },
        "sum": {
          "format": "double",
          "description": "Фиксированная сумма автоматического пополнения при достижении порогового баланса",
          "type": "number"
        },
        "maxAutomaticInvoicePaymentSum": {
          "format": "double",
          "description": "Максимальная сумма автоматической оплаты выставленного счета",
          "type": "number"
        },
        "maxMonthlySum": {
          "format": "double",
          "description": "Максимальная сумма автоматический пополнений в месяц",
          "type": "number"
        },
        "rechargeBalance": {
          "format": "double",
          "description": "Пороговый баланс, при котором срабатывает автоматическое пополнение",
          "type": "number"
        },
        "withInsurance": {
          "description": "Признак наличия добровольного страхования",
          "type": "boolean"
        },
        "operationImageSrc": {
          "description": "Ссылка на логотип операции",
          "type": "string"
        },
        "isHistoryAvailable": {
          "description": "Шаблон имеет историю выполнения",
          "type": "boolean"
        },
        "lastInvoiceSum": {
          "format": "double",
          "description": "Сумма по последнему инвойсу по автоплатежу",
          "type": "number"
        },
        "externalSubscriptionID": {
          "description": "Внешний идентификатор подписки",
          "type": "string"
        },
        "replenishedAccount": {
          "description": "Счет подписки",
          "type": "string"
        },
        "state": {
          "format": "int32",
          "description": "Статус (0 = Unknown , 1 = NeedConfirmation , 2 = Confirmed , 3 = Refused , 4 = Deleted , 5 = Deleting )",
          "enum": [0, 1, 2, 3, 4, 5],
          "type": "integer"
        }
      }
    },
    "RequestParam": {
      "description": "",
      "type": "object",
      "properties": {
        "name": { "description": "Наименование параметра", "type": "string" },
        "value": { "description": "", "type": "string" }
      }
    },
    "Document": {
      "description": "Документ",
      "type": "object",
      "properties": {
        "identifier": {
          "$ref": "#/definitions/DocumentIdentifier",
          "description": "Идентификатор документа"
        },
        "name": { "description": "Название документа", "type": "string" }
      }
    },
    "Comment": {
      "description": "Комментарии банка по поручению",
      "type": "object",
      "properties": {
        "createTime": {
          "format": "date-time",
          "description": "Дата создания комментария",
          "type": "string"
        },
        "text": {
          "description": "Комментарий банка/Текст сообщения",
          "type": "string"
        }
      }
    },
    "OperationHelp": {
      "description": "Operation Help",
      "type": "object",
      "properties": {
        "functionality": {
          "description": "Help on functionality",
          "type": "string"
        },
        "timeTable": {
          "description": "Help on execution time",
          "type": "string"
        },
        "features": { "description": "Особенности операции", "type": "string" },
        "comment": { "description": "Comment", "type": "string" },
        "paymentReceiver": {
          "$ref": "#/definitions/PaymentReceiver",
          "description": "Payment recepient"
        }
      }
    },
    "Category": {
      "description": "Категория операций",
      "type": "object",
      "properties": {
        "categoryId": {
          "format": "int32",
          "description": "Идентификатор категории",
          "type": "integer"
        },
        "parentCategory": {
          "$ref": "#/definitions/Category",
          "description": "Идентификатор родительской категории"
        },
        "name": { "description": "Наименование", "type": "string" },
        "state": {
          "format": "int32",
          "description": "Статус категории (1 = Active , 2 = Deleted )",
          "enum": [1, 2],
          "type": "integer"
        },
        "group": {
          "format": "int32",
          "description": "Группа (0 = None , 1 = Payment , 2 = Transfer )",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "operationsCount": {
          "format": "int32",
          "description": "Количество операций (включая операции в дочерних группах)",
          "type": "integer"
        },
        "imageSrc": {
          "description": "Ссылка на логотип категории операции",
          "type": "string"
        },
        "searchContext": {
          "format": "int32",
          "description": "Контекст категории, определяет ее поведение при переходе в нее, доступные маски поиска (1 = Common , 2 = TransfersToSelf , 3 = TransfersToPersons , 4 = TransfersToCompany , 5 = PhonePayments , 6 = InCategory , 7 = TransferToPersonByCard , 8 = TransferToPersonByPhone , 9 = AutoPayments )",
          "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9],
          "type": "integer"
        },
        "ordNum": {
          "format": "int32",
          "description": "Сортировка",
          "type": "integer"
        }
      }
    },
    "Locality": {
      "description": "Locality",
      "type": "object",
      "properties": {
        "localityId": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        },
        "name": { "description": "Name", "type": "string" },
        "priority": {
          "format": "int32",
          "description": "Sort order priority number",
          "type": "integer"
        },
        "federalDistrict": {
          "$ref": "#/definitions/FederalDistrict",
          "description": "Federal District"
        }
      }
    },
    "WikiPayRequisites": {
      "description": "Реквизиты поставщика услуги (WikiPay)",
      "type": "object",
      "properties": {
        "providerId": {
          "format": "int32",
          "description": "Id поставщика",
          "type": "integer"
        },
        "inn": { "description": "ИНН", "type": "string" },
        "accountNumber": { "description": "Номер счета", "type": "string" }
      }
    },
    "CardTransferRequisites": {
      "description": "Карта получателя",
      "type": "object",
      "properties": {
        "storedCardId": {
          "description": "идентификатор сохраненной карты, если указан, то для запуска операции используем метод запуска из контекста",
          "type": "string"
        },
        "cardNumber": {
          "description": "номер карты. используется, если не указан идентификатор. инициализация параметров (номер карты получателя) происходит на клиенте при запуске операции",
          "type": "string"
        },
        "bankInfo": {
          "$ref": "#/definitions/BankInfo",
          "description": "логотип банка"
        },
        "cardType": {
          "format": "int32",
          "description": "тип карты (1 = Visa , 2 = Master , 3 = Maestro , 4 = VisaElectron , 5 = Mir , 6 = UnionPay )",
          "enum": [1, 2, 3, 4, 5, 6],
          "type": "integer"
        },
        "holderName": { "description": "имя держателя", "type": "string" },
        "bin": { "description": "bin", "type": "string" }
      }
    },
    "TransferByPhoneRequisites": {
      "description": "параметры запуска превода по номеру телефона",
      "type": "object",
      "properties": {
        "originalPhoneBookNumber": {
          "description": "оригинальный номер в телефонной книге",
          "type": "string"
        },
        "phoneNumberToLaunchWith": {
          "description": "форматированный номер, по которому запускается операция",
          "type": "string"
        }
      }
    },
    "ScenarioParam": {
      "description": "Контейнер для параметра сценария",
      "type": "object",
      "properties": {
        "name": {
          "description": "Название параметра сценария",
          "type": "string"
        },
        "help": {
          "description": "Справка по параметру сценария",
          "type": "string"
        },
        "hideHelp": {
          "description": "Скрывать текст помощи по параметру",
          "type": "boolean"
        },
        "identifier": {
          "description": "Идентификатор параметра сценария",
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/VType",
          "description": "Значение параметра сценария"
        },
        "values": {
          "description": "Значения параметра сценария",
          "type": "array",
          "items": { "$ref": "#/definitions/VType" }
        },
        "visibility": {
          "format": "int32",
          "description": "Видимость параметра сценария (1 = ReadOnly , 2 = Editable , 3 = Hidden )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "className": {
          "description": "Название класса реализации параметра сценария",
          "type": "string"
        },
        "links": {
          "description": "Ссылочные параметры",
          "type": "array",
          "items": { "type": "string" }
        },
        "withPostBack": {
          "description": "Обрабатывать события обратного вызова",
          "type": "boolean"
        },
        "group": {
          "$ref": "#/definitions/ScenarioParamGroup",
          "description": "Название общей группы (первый уровень), в которую входит параметр"
        },
        "subGroup": {
          "$ref": "#/definitions/ScenarioParamGroup",
          "description": "Название группы/подгруппы, в которую входит параметр"
        }
      }
    },
    "DocumentIdentifier": {
      "description": "Идентификатор документа",
      "type": "object",
      "properties": {
        "requestId": {
          "format": "int64",
          "description": "RequestId",
          "type": "integer"
        },
        "taskId": {
          "format": "uuid",
          "description": "TaskId",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "taskTypeId": {
          "format": "int32",
          "description": "TaskTypeId",
          "type": "integer"
        },
        "documentId": {
          "format": "int32",
          "description": "DocumentId",
          "type": "integer"
        },
        "id": { "description": "Identifier", "type": "string" }
      }
    },
    "PaymentReceiver": {
      "description": "Получатель платежа - договорник нашего банка",
      "type": "object",
      "properties": {
        "commission": {
          "description": "Комиссия с плательщика",
          "type": "string"
        },
        "name": { "description": "Получатель платежа", "type": "string" },
        "features": { "description": "Особенности платежа", "type": "string" },
        "accountNumber": { "description": "Счет получателя", "type": "string" },
        "russianBank": {
          "$ref": "#/definitions/BankUnify",
          "description": "Банк"
        },
        "fullName": { "description": "", "type": "string" },
        "briefName": { "description": "", "type": "string" },
        "inn": { "description": "", "type": "string" },
        "accountDetails": {
          "$ref": "#/definitions/AccountBase",
          "description": "Реквизиты получателя в банке"
        }
      }
    },
    "FederalDistrict": {
      "description": "Federal District",
      "type": "object",
      "properties": {
        "federalDistrictId": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        },
        "code": {
          "format": "int32",
          "description": "Region Code",
          "type": "integer"
        },
        "name": { "description": "Name", "type": "string" },
        "priority": {
          "format": "int32",
          "description": "Sort order priority number",
          "type": "integer"
        }
      }
    },
    "BankInfo": {
      "description": "Информация о банке, выпустившем карту",
      "type": "object",
      "properties": {
        "bankId": {
          "format": "int32",
          "description": "Название",
          "type": "integer"
        },
        "bankName": { "description": "Название", "type": "string" },
        "mainColor": { "description": "Фирменный цвет", "type": "string" },
        "logoFileName": {
          "description": "Название файла логотипа",
          "type": "string"
        },
        "scalableLogoFileName": {
          "description": "Название файла логтипа (svg)",
          "type": "string"
        }
      }
    },
    "VType": {
      "description": "Тип параметра",
      "type": "object",
      "properties": {
        "typeCode": {
          "format": "int32",
          "description": "Код типа параметра (1 = String , 2 = Integer , 3 = Amount , 4 = Numeric , 5 = Decimal , 6 = Date , 7 = MonthYear , 8 = Long , 9 = Object , 10 = Boolean , 11 = Guid , 12 = DateTime , 13 = Percent , 14 = Binary , 21 = Phone , 22 = SecureString , 255 = Empty , -1 = Unknown )",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            21,
            22,
            255,
            -1
          ],
          "type": "integer"
        },
        "dictionary": {
          "$ref": "#/definitions/VtDictionary",
          "description": "Справочник"
        },
        "mayBeNull": { "description": "Может быть пустым", "type": "boolean" },
        "expectedValue": {
          "description": "Строка для формирования выражения: \"Ожидается ....\"",
          "type": "string"
        },
        "inputMask": { "description": "Маска ввода", "type": "string" }
      }
    },
    "ScenarioParamGroup": {
      "description": "Группа параметров сценария",
      "type": "object",
      "properties": {
        "id": { "description": "Идентификатор", "type": "string" },
        "name": { "description": "Наименование", "type": "string" },
        "ordNo": {
          "format": "int32",
          "description": "Порядок сортировки",
          "type": "integer"
        }
      }
    },
    "AccountBase": {
      "description": "Базовый класс для счетов",
      "type": "object",
      "properties": {
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "office": {
          "$ref": "#/definitions/Office",
          "description": "Servicing office"
        },
        "accountingBranch": {
          "$ref": "#/definitions/Branch",
          "description": "Accounting branch"
        },
        "number": { "description": "Number", "type": "string" },
        "previousNumber": {
          "description": "Номер счета до миграции",
          "type": "string"
        },
        "previousOpenDate": {
          "format": "date-time",
          "description": "Дата открытия до миграции",
          "type": "string"
        },
        "name": { "description": "Наименование", "type": "string" },
        "clientLabel": {
          "description": "Пользовательское наименование",
          "type": "string"
        },
        "balance": {
          "format": "double",
          "description": "Balance",
          "type": "number"
        },
        "availableBalance": {
          "format": "double",
          "description": "Доступный баланс",
          "type": "number"
        },
        "isWithReplenishment": {
          "description": "Is account replenishment available",
          "type": "boolean"
        },
        "isWithSubtraction": {
          "description": "Возможность снятия средств со счёта",
          "type": "boolean"
        },
        "openDate": {
          "format": "date-time",
          "description": "Дата открытия",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "description": "Состояние (1 = NotReady , 2 = Active , 3 = Blocked , 4 = Closed )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "closeDate": {
          "format": "date-time",
          "description": "Дата закрытия",
          "type": "string"
        },
        "requisites": {
          "$ref": "#/definitions/AccountRequisitesUnify",
          "description": "Реквизиты счёта"
        },
        "accountType": {
          "format": "int32",
          "description": "Тип счета системы ведения счетов (1 = Account , 2 = CardAccount , 3 = AbsAccount )",
          "enum": [1, 2, 3],
          "type": "integer",
          "readOnly": true
        },
        "entityIdentifier": {
          "$ref": "#/definitions/EntityIdentifier",
          "description": ""
        }
      }
    },
    "VtDictionary": {
      "description": "Справочник, ассоциированный с VType",
      "type": "object",
      "properties": {
        "isStrict": { "description": "Строгий справочник", "type": "boolean" },
        "dictItems": {
          "description": "Элементы словаря",
          "type": "array",
          "items": { "$ref": "#/definitions/DictItem" }
        }
      }
    },
    "DictItem": {
      "description": "Элемент словаря",
      "type": "object",
      "properties": {
        "display": { "description": "Внешнее представление", "type": "string" },
        "displayX": {
          "description": "Внешнее представление совместно с комментарием, если он присутствует (для отображения в списках, и т.п.)",
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/VType",
          "description": "Внутреннее значение"
        },
        "comment": {
          "description": "Дополнительное пояснение",
          "type": "string"
        },
        "systemValues": {
          "description": "Системные значения. Секретные не вводить",
          "type": "string"
        }
      }
    },
    "PeriodParams": {
      "description": "Параметры диапазона дат",
      "type": "object",
      "properties": {
        "startDate": {
          "format": "date-time",
          "description": "Дата начала",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "Дата окончания",
          "type": "string"
        }
      }
    },
    "SendStatementByEmailParams": {
      "description": "",
      "type": "object",
      "properties": {
        "startDate": {
          "format": "date-time",
          "description": "Дата начала",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "Дата окончания",
          "type": "string"
        },
        "email": { "description": "Адрес электронной почты", "type": "string" }
      }
    },
    "AbsLoanScheduleItem": {
      "description": "Точка графика погашения по кредиту АБС",
      "type": "object",
      "properties": {
        "obligationDate": {
          "format": "date-time",
          "description": "Дата платежа",
          "type": "string"
        },
        "mainDebtSum": {
          "format": "double",
          "description": "Основной долг",
          "type": "number"
        },
        "remainedMainDebtSum": {
          "format": "double",
          "description": "Оставшийся основной долг",
          "type": "number"
        },
        "interestSum": {
          "format": "double",
          "description": "Все непросроченные проценты",
          "type": "number"
        },
        "commissionSum": {
          "format": "double",
          "description": "Комиссия",
          "type": "number"
        },
        "voluntaryInsuranceSum": {
          "format": "double",
          "description": "Добровольное страхование",
          "type": "number"
        },
        "totalSum": {
          "format": "double",
          "description": "Сумма платежа",
          "type": "number"
        }
      }
    },
    "TermlessAccount": {
      "description": "Бессрочный счет",
      "type": "object",
      "properties": {
        "isCustomRateViewAvailable": { "type": "boolean" },
        "minBalance": {
          "format": "double",
          "description": "Минимальный баланс бессрочного вклада",
          "type": "number"
        },
        "maxBalance": {
          "format": "double",
          "description": "Максимальный баланс процентной ставки на сумму превышения",
          "type": "number"
        },
        "interestRate": {
          "format": "double",
          "description": "Процентная ставка",
          "type": "number"
        },
        "isSaving": { "description": "Накопительный счёт", "type": "boolean" },
        "isSavingRuleEnabled": {
          "description": "Влючено правило накопления",
          "type": "boolean"
        },
        "savingService": {
          "$ref": "#/definitions/SavingService",
          "description": "Информация по накопительному счету"
        },
        "isLifeGoalAttached": {
          "description": "К счету привязана цель клиента",
          "type": "boolean"
        },
        "isAccountClosureAvailable": {
          "description": "Доступность закрытия счёта",
          "type": "boolean"
        },
        "overflowInterestRate": {
          "format": "double",
          "description": "Процентная ставка на сумму превышения",
          "type": "number"
        },
        "overflowSum": {
          "format": "double",
          "description": "Сумма превышения",
          "type": "number"
        },
        "previousMonthPosTurnovers": {
          "format": "double",
          "description": "Сумма POS-оборотов за прошлый месяц",
          "type": "number"
        },
        "posTurnoversAdditionalRate": {
          "format": "double",
          "description": "Надбавка за POS-обороты",
          "type": "number"
        },
        "resultingRate": {
          "format": "double",
          "description": "Итоговая процентная ставка",
          "type": "number"
        },
        "posTornoversInterestRateInfo": {
          "description": "Повышенные ставки при наличии POS оборотов для брэнда",
          "type": "array",
          "items": { "$ref": "#/definitions/POSTurnoversInterestRate" }
        },
        "tariffUrl": { "description": "Ссылка на тариф", "type": "string" },
        "interestPaidSum": {
          "format": "double",
          "description": "Выплаченные проценты",
          "type": "number"
        },
        "isStoreAccount": {
          "description": "Является ли счет накопительным",
          "type": "boolean"
        },
        "currentMonthPosTurnovers": {
          "format": "double",
          "description": "Сумма POS-оборотов за текущий месяц",
          "type": "number"
        },
        "nextMonthPOSTurnoversAdditionalRate": {
          "format": "double",
          "description": "Надбавка за POS-обороты в след. месяце",
          "type": "number"
        },
        "nextMonthResultingRate": {
          "format": "double",
          "description": "Итоговая процентная ставка в след. месяце",
          "type": "number"
        },
        "interestRateHint": {
          "description": "Подсказка по процентной ставке",
          "type": "string"
        },
        "nextMonthEstimatedInterestRateHint": {
          "description": "Подсказка по прогнозной процентной ставке",
          "type": "string"
        },
        "promotionalRateHint": {
          "description": "Подсказка по акции",
          "type": "string"
        },
        "displayEstimatedInterestRate": {
          "description": "Отображать прогнозную ставку",
          "type": "boolean"
        },
        "displayPosTurnoversSum": {
          "description": "Отображать расходы по картам",
          "type": "boolean"
        },
        "estimatedIncomeHint": {
          "description": "Подсказка по ожидаемому доходу",
          "type": "string"
        },
        "accountId": {
          "format": "int32",
          "description": "Идентификатор счета",
          "type": "integer"
        },
        "contract": {
          "$ref": "#/definitions/ContractBase",
          "description": "Контракт"
        },
        "accountType": {
          "format": "int32",
          "description": "Тип счета (1 = Account , 2 = CardAccount , 3 = AbsAccount )",
          "enum": [1, 2, 3],
          "type": "integer",
          "readOnly": true
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "office": {
          "$ref": "#/definitions/Office",
          "description": "Servicing office"
        },
        "accountingBranch": {
          "$ref": "#/definitions/Branch",
          "description": "Accounting branch"
        },
        "number": { "description": "Number", "type": "string" },
        "previousNumber": {
          "description": "Номер счета до миграции",
          "type": "string"
        },
        "previousOpenDate": {
          "format": "date-time",
          "description": "Дата открытия до миграции",
          "type": "string"
        },
        "name": { "description": "Наименование", "type": "string" },
        "clientLabel": {
          "description": "Пользовательское наименование",
          "type": "string"
        },
        "balance": {
          "format": "double",
          "description": "Balance",
          "type": "number"
        },
        "availableBalance": {
          "format": "double",
          "description": "Доступный баланс",
          "type": "number"
        },
        "isWithReplenishment": {
          "description": "Is account replenishment available",
          "type": "boolean"
        },
        "isWithSubtraction": {
          "description": "Возможность снятия средств со счёта",
          "type": "boolean"
        },
        "openDate": {
          "format": "date-time",
          "description": "Дата открытия",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "description": "Состояние (1 = NotReady , 2 = Active , 3 = Blocked , 4 = Closed )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "closeDate": {
          "format": "date-time",
          "description": "Дата закрытия",
          "type": "string"
        },
        "requisites": {
          "$ref": "#/definitions/AccountRequisitesUnify",
          "description": "Реквизиты счёта"
        },
        "entityIdentifier": {
          "$ref": "#/definitions/EntityIdentifier",
          "description": ""
        }
      }
    },
    "SavingService": {
      "description": "Информация по накопительному счету",
      "type": "object",
      "properties": {
        "cards": {
          "description": "Привязанные карты к текущему накопительному счету",
          "type": "array",
          "items": { "$ref": "#/definitions/Card" }
        },
        "additionalInterestRate": {
          "format": "double",
          "description": "Процентная надбавка к процентной ставке",
          "type": "number"
        },
        "interestRate": {
          "format": "double",
          "description": "Процентная ставка без учета надбавок",
          "type": "number"
        },
        "totalInterestRate": {
          "format": "double",
          "description": "Итоговая процентная ставка по накопительному счету.",
          "type": "number"
        },
        "minBalance": {
          "format": "double",
          "description": "Минимальный баланс",
          "type": "number"
        },
        "clientCategory": {
          "format": "int32",
          "description": "Категория клиента (на основании наличия пакета и карт Золото и Платина) (0 = NonCategory , 1 = PSBGold , 2 = PSBPlatinum , 4 = PSBPriority , 8 = OrangePremiumClub , 16 = YourPSB , 32 = YourPSBPlus , 64 = YourPSBPremium )",
          "enum": [0, 1, 2, 4, 8, 16, 32, 64],
          "type": "integer"
        },
        "estimatedInterestSum": {
          "format": "double",
          "description": "Ожидаемая сумма процентов в ближайшую точку выплаты",
          "type": "number"
        },
        "savingStartDate": {
          "format": "date-time",
          "description": "Дата начала накопления",
          "type": "string"
        },
        "savingsSum": {
          "format": "double",
          "description": "Накопленная сумма",
          "type": "number"
        },
        "savingInterestSum": {
          "format": "double",
          "description": "Сумма накопленных процентов",
          "type": "number"
        },
        "savingLengthDays": {
          "format": "int32",
          "description": "Кол-во дней накопленния суммы",
          "type": "integer"
        }
      }
    },
    "POSTurnoversInterestRate": {
      "description": "Значение повышенной ставки в зависимости от POS оборотов",
      "type": "object",
      "properties": {
        "rate": {
          "format": "double",
          "description": "Ставка",
          "type": "number"
        },
        "conditionValueMin": {
          "format": "double",
          "description": "Минимальный оборот",
          "type": "number"
        },
        "conditionValueMax": {
          "format": "double",
          "description": "Максимальный оборот",
          "type": "number"
        }
      }
    },
    "ContractBase": {
      "description": "Contract base class",
      "type": "object",
      "properties": {
        "contractId": {
          "format": "int32",
          "description": "Идентификатор контракта",
          "type": "integer"
        },
        "brand": {
          "$ref": "#/definitions/BrandBase",
          "description": "Product brand"
        },
        "clientLabel": {
          "description": "Наименование от клиента",
          "type": "string"
        },
        "request": {
          "$ref": "#/definitions/Request",
          "description": "Поручение на открытие"
        },
        "closeRequest": {
          "$ref": "#/definitions/Request",
          "description": "Поручение на закрытие"
        },
        "office": {
          "$ref": "#/definitions/Office",
          "description": "Доп. офис банка"
        },
        "number": { "description": "Номер контракта", "type": "string" },
        "name": { "description": "Наименование договора", "type": "string" },
        "previousName": {
          "description": "Наименование договора до миграции",
          "type": "string"
        },
        "description": { "description": "Описание", "type": "string" },
        "beginDate": {
          "format": "date-time",
          "description": "Дата открытия",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "description": "Состояние (1 = NotReady , 2 = Active , 3 = Blocked , 4 = Closed )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "closeDate": {
          "format": "date-time",
          "description": "Дата закрытия",
          "type": "string"
        },
        "entityIdentifier": {
          "$ref": "#/definitions/EntityIdentifier",
          "description": ""
        }
      }
    },
    "Card": {
      "description": "Карта",
      "type": "object",
      "properties": {
        "cardId": {
          "format": "int64",
          "description": "Идентификатор карты",
          "type": "integer"
        },
        "account": {
          "$ref": "#/definitions/CardAccount",
          "description": "Счет карты"
        },
        "cardNumber": {
          "description": "Маскированный номер карты",
          "type": "string"
        },
        "state": {
          "format": "int32",
          "description": "Статус карты (1 = Closed , 2 = Blocked , 3 = Expired , 4 = ClientLocked , 5 = NotReady , 6 = BeforeIssueLocked , 7 = Wait45DayToClose , 255 = Active )",
          "enum": [1, 2, 3, 4, 5, 6, 7, 255],
          "type": "integer"
        },
        "isVirtual": { "description": "Карта виртуальная", "type": "boolean" },
        "isDigital": { "description": "Карта цифровая", "type": "boolean" },
        "isMadeWithoutPinCode": {
          "description": "Карта выпущена без ПИН-кода",
          "type": "boolean"
        },
        "pinCodeStatus": {
          "format": "int32",
          "description": "Статус установки ПИН кода (0 = NotAvailable , 1 = Ready , 2 = Processing , 3 = Completed )",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "changePinCodeStatus": {
          "format": "int32",
          "description": "Статус изменения пин кода карты: 1 - разрешено, != 1 - код ошибки",
          "type": "integer"
        },
        "pinCodeLaunchOperationAllowed": {
          "description": "Доступность запуска операции для смены ПИН кода",
          "type": "boolean"
        },
        "isPriorityPass": {
          "description": "Карта Priority Pass",
          "type": "boolean"
        },
        "smallImageSrc": {
          "description": "Uri пиктограммы \"рубашки\" карты",
          "type": "string"
        },
        "largeImageSrc": {
          "description": "Uri стандартного изображения \"рубашки\" карты",
          "type": "string"
        },
        "themeColor": {
          "description": "Основной цвет \"рубашки\" карты",
          "type": "string"
        },
        "application": {
          "$ref": "#/definitions/CardApplication",
          "description": "Заявка на карту"
        },
        "savingRule": {
          "$ref": "#/definitions/SavingRule",
          "description": "Правило накопления"
        },
        "cumulativeRule": {
          "$ref": "#/definitions/CumulativeRule",
          "description": "Правило накопления (замена свойства SavingRule с 15.10.2019 )"
        },
        "isSmsNotificationActive": {
          "description": "Подключен сервис СМС-информирования",
          "type": "boolean"
        },
        "is3DSecureActive": {
          "description": "Подключен сервис 3D Secure",
          "type": "boolean"
        },
        "isOwner": {
          "description": "Клиент является держателем данной карты",
          "type": "boolean"
        },
        "productionDate": {
          "format": "date-time",
          "description": "Дата изготовления",
          "type": "string"
        },
        "expireDate": {
          "format": "date-time",
          "description": "Срок действия",
          "type": "string"
        },
        "name": { "description": "Наименование карты", "type": "string" },
        "clientLabel": {
          "description": "Клиентское название карты",
          "type": "string"
        },
        "type": {
          "format": "int32",
          "description": "Тип карты (1 = Visa , 2 = Master , 3 = Maestro , 4 = VisaElectron , 5 = Mir , 6 = UnionPay )",
          "enum": [1, 2, 3, 4, 5, 6],
          "type": "integer"
        },
        "productTariffUrl": {
          "description": "Ссылка на тарифы",
          "type": "string"
        },
        "fee": {
          "$ref": "#/definitions/CardFee",
          "description": "Обслуживание карты"
        },
        "smsFee": {
          "$ref": "#/definitions/CardFee",
          "description": "Комиссия за смс-информирование карты"
        },
        "cardProduct": {
          "$ref": "#/definitions/CardProduct",
          "description": "Карточный продукт"
        },
        "entityIdentifier": {
          "$ref": "#/definitions/EntityIdentifier",
          "description": ""
        },
        "tariffNameIndex": {
          "description": "Имя тарифа в Way4",
          "type": "string"
        },
        "isExtraCard": {
          "description": "Дополнительная карта",
          "type": "boolean"
        },
        "isReissueAllowed": {
          "description": "Разрешён перевыпуск карты",
          "type": "boolean"
        },
        "isPlasticProductionAllowed": {
          "description": "Разрешен ли для карты выпуск пластика",
          "type": "boolean"
        },
        "isPlasticExists": {
          "description": "Наличие материального носителя у карты",
          "type": "boolean"
        },
        "embossingName": {
          "description": "Имя, отпечатанное на карте",
          "type": "string"
        },
        "financialGroup": {
          "$ref": "#/definitions/CardFinancialGroup",
          "description": "Финансовая группа карты"
        },
        "isCardSignificantDataAllowed": {
          "description": "Разрешен ли показ номера карты и CVC",
          "type": "boolean"
        },
        "loyaltyProduct": {
          "$ref": "#/definitions/CardLoyaltyProduct",
          "description": "Доступный продукт лояльности (бонуска). Если по карте бонуска недоступна, то значение равно null"
        },
        "isDocumentsInformationAvailable": {
          "description": "Доступна ли информация по документам поручения напрямую из карты\r\nВлияет на видимость вкладки документов в карте в ИБ/МБ",
          "type": "boolean"
        }
      }
    },
    "BrandBase": {
      "description": "Base class for product brands",
      "type": "object",
      "properties": {
        "brandId": {
          "format": "int32",
          "description": "Internal brand identifier",
          "type": "integer"
        },
        "name": { "description": "Brand name", "type": "string" },
        "juridicalName": {
          "description": "Brand name for documents",
          "type": "string"
        }
      }
    },
    "CardAccount": {
      "description": "Карточный счет",
      "type": "object",
      "properties": {
        "cardAccountId": {
          "format": "int64",
          "description": "Идентификатор карточного счёта во внешней системе",
          "type": "integer"
        },
        "cards": {
          "description": "Список дочерних карт",
          "type": "array",
          "items": { "$ref": "#/definitions/Card" }
        },
        "mainCreditLimit": {
          "format": "double",
          "description": "Кредитный лимит в основной валюте",
          "type": "number"
        },
        "isGrace": {
          "description": "Карта является кредитной с льготным периодом кредитования",
          "type": "boolean"
        },
        "grace": {
          "$ref": "#/definitions/CardGrace",
          "description": "Дополнительные свойства грейс-периода"
        },
        "isOwner": {
          "description": "Клиент является владельцем данного счёта",
          "type": "boolean"
        },
        "allCardsCount": {
          "format": "int32",
          "description": "Кол-во карт контракта (активных и закрытых)",
          "type": "integer"
        },
        "interestRate": {
          "format": "double",
          "description": "Процентная ставка по кредитному карточному счету",
          "type": "number"
        },
        "programType": {
          "$ref": "#/definitions/ProgramType",
          "description": "Программа выпуска"
        },
        "isVirtual": {
          "description": "Счёт виртуальной карты",
          "type": "boolean"
        },
        "cashbackData": {
          "$ref": "#/definitions/CashbackData",
          "description": "Категория кешбека карты"
        },
        "accountType": {
          "format": "int32",
          "description": "Тип счета (1 = Account , 2 = CardAccount , 3 = AbsAccount )",
          "enum": [1, 2, 3],
          "type": "integer",
          "readOnly": true
        },
        "tariffNameIndex": {
          "description": "Идентификатор тарифа в Way4",
          "type": "string"
        },
        "isAddVirtualMirCardAvailable": {
          "description": "Доступен выпуск дополнительной виртуальной карты Мир",
          "type": "boolean"
        },
        "openwayContractNumber": {
          "description": "Номер счетового контракта в Way4",
          "type": "string"
        },
        "isLoyaltyPackageSelectionAvailable": {
          "description": "Доступен ли выбор пакета лояльности",
          "type": "boolean"
        },
        "loyaltyProduct": {
          "$ref": "#/definitions/CardLoyaltyProduct",
          "description": "Доступный продукт лояльности (бонуска). Если бонуска недоступна, то значение равно null"
        },
        "cardManagement": {
          "$ref": "#/definitions/CardManagement",
          "description": "Функции по управлению картой"
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "office": {
          "$ref": "#/definitions/Office",
          "description": "Servicing office"
        },
        "accountingBranch": {
          "$ref": "#/definitions/Branch",
          "description": "Accounting branch"
        },
        "number": { "description": "Number", "type": "string" },
        "previousNumber": {
          "description": "Номер счета до миграции",
          "type": "string"
        },
        "previousOpenDate": {
          "format": "date-time",
          "description": "Дата открытия до миграции",
          "type": "string"
        },
        "name": { "description": "Наименование", "type": "string" },
        "clientLabel": {
          "description": "Пользовательское наименование",
          "type": "string"
        },
        "balance": {
          "format": "double",
          "description": "Balance",
          "type": "number"
        },
        "availableBalance": {
          "format": "double",
          "description": "Доступный баланс",
          "type": "number"
        },
        "isWithReplenishment": {
          "description": "Is account replenishment available",
          "type": "boolean"
        },
        "isWithSubtraction": {
          "description": "Возможность снятия средств со счёта",
          "type": "boolean"
        },
        "openDate": {
          "format": "date-time",
          "description": "Дата открытия",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "description": "Состояние (1 = NotReady , 2 = Active , 3 = Blocked , 4 = Closed )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "closeDate": {
          "format": "date-time",
          "description": "Дата закрытия",
          "type": "string"
        },
        "requisites": {
          "$ref": "#/definitions/AccountRequisitesUnify",
          "description": "Реквизиты счёта"
        },
        "entityIdentifier": {
          "$ref": "#/definitions/EntityIdentifier",
          "description": ""
        }
      }
    },
    "CardApplication": {
      "description": "Заказ карты",
      "type": "object",
      "properties": {
        "programType": {
          "$ref": "#/definitions/ProgramType",
          "description": "Программа выпуска"
        },
        "smallImageSrc": {
          "description": "Uri пиктограммы \"рубашки\" карты",
          "type": "string"
        },
        "largeImageSrc": {
          "description": "Uri стандартного изображения \"рубашки\" карты",
          "type": "string"
        },
        "cardApplicationMode": {
          "format": "int32",
          "description": "Режим выпуска карты (1 = ProduceNewCard , 2 = ProduceAddCard , 3 = ReProduceCard , 4 = IssuePrepaidCard , 5 = LinkedCardOrder , 6 = ReIssuePrepaidCard , 7 = ProduceNewCardWithDelivery , 9 = ChangeCreditLimit , 10 = IssuePrepaidAddCard , 11 = ProduceAddVirtualCard , 13 = LinkedCardWithDelivery , 15 = AutomaticReissuedCard , 16 = IssueDigitalCard , 17 = ProducePlasticToDigitalCard , 18 = ReIssueDigitalCard )",
          "enum": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 15, 16, 17, 18],
          "type": "integer"
        },
        "maskedCardNumber": {
          "description": "Маскированный номер карты",
          "type": "string"
        },
        "maskedBaseCardNumber": {
          "description": "Маскированный номер карты основной карты",
          "type": "string"
        },
        "linkedCardApplication": {
          "$ref": "#/definitions/CardApplication",
          "description": "Связанный заказ"
        },
        "cardProduct": {
          "$ref": "#/definitions/CardProduct",
          "description": "Карточный продукт"
        },
        "overdraftLimit": {
          "format": "double",
          "description": "Лимит оведрафта",
          "type": "number"
        },
        "financialGroup": {
          "$ref": "#/definitions/FinancialGroup",
          "description": "Финансовая схема"
        },
        "otherCardHolderFullName": {
          "description": "ФИО держателя карты на третье лицо",
          "type": "string"
        },
        "progressState": {
          "format": "int32",
          "description": "Состояние прогрес-бара заявки на карту (0 = Unknown , 1 = Active , 2 = PreliminaryApproved , 3 = Refused , 4 = Produce , 5 = ArrivedOffice , 6 = SubmittedToDeliveryService , 7 = PendingClientSign )",
          "enum": [0, 1, 2, 3, 4, 5, 6, 7],
          "type": "integer"
        },
        "progressStateDescription": {
          "description": "Сопроводительный текст состояния прогрес-бара",
          "type": "string"
        },
        "expirationDate": {
          "format": "date-time",
          "description": "Срок годности",
          "type": "string"
        },
        "way4BaseCardNumber": {
          "description": "Номер основной карты",
          "type": "string"
        },
        "states": {
          "description": "Список всех состояний прогресса",
          "type": "array",
          "items": { "$ref": "#/definitions/StateItem" }
        },
        "isSalary": {
          "description": "Является ли Зарплатной",
          "type": "boolean"
        },
        "isSocial": {
          "description": "Является ли социальной",
          "type": "boolean"
        },
        "openUponIssue": {
          "description": "Признак Открытие счета при выдаче карты",
          "type": "boolean"
        },
        "cardNativeID": {
          "format": "int64",
          "description": "Идентификатор карты в Way4",
          "type": "integer"
        },
        "viewType": {
          "format": "int32",
          "description": "Отображаемый тип карты (0 = Unknown , 1 = Debet , 2 = Credit , 3 = Additional )",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "isDigitalMirDocumentSignRequired": {
          "description": "Требуется ли подписание документов для оформления цифровой карты МИР для социальных выплат",
          "type": "boolean"
        },
        "digitalMirTariffUrl": {
          "description": "URL тарифа цифровой карты МИР для социальных выплат",
          "type": "string"
        },
        "tarifNameIndex": {
          "format": "int32",
          "description": "Идентификатор тарифа карты",
          "type": "integer"
        },
        "applicationId": {
          "format": "int32",
          "description": "Id заявки",
          "type": "integer"
        },
        "applicationDate": {
          "format": "date-time",
          "description": "Дата подачи заявки",
          "type": "string"
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "office": {
          "$ref": "#/definitions/Office",
          "description": "Офис банка"
        },
        "request": {
          "$ref": "#/definitions/Request",
          "description": "Поручение"
        }
      }
    },
    "SavingRule": {
      "description": "Параметры правила накопления по карте",
      "type": "object",
      "properties": {
        "savingRuleId": {
          "format": "int32",
          "description": "Идентификатор правила",
          "type": "integer"
        },
        "account": {
          "$ref": "#/definitions/Account",
          "description": "Накопительный счет"
        },
        "ruleName": { "description": "Наименование правила", "type": "string" },
        "description": { "description": "Описание правила", "type": "string" },
        "changeDate": {
          "format": "date-time",
          "description": "Дата изменения",
          "type": "string"
        },
        "startDate": {
          "format": "date-time",
          "description": "Дата начала действия правила",
          "type": "string"
        },
        "ruleParam": {
          "format": "int32",
          "description": "Параметр правила наколения",
          "type": "integer"
        },
        "simpleRuleType": {
          "format": "int32",
          "description": "Проценты или сумма",
          "type": "integer"
        }
      }
    },
    "CumulativeRule": {
      "description": "Правило накопления (Для нового UI с 15.10.2018)",
      "type": "object",
      "properties": {
        "type": {
          "format": "int32",
          "description": "Тип правила (0 = Undefined , 1 = FillAndSave , 2 = SpendAndSave )",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "unit": {
          "format": "int32",
          "description": "Единица измерения накопления (0 = Undefined , 1 = Money , 2 = Percent )",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "name": { "description": "Наименование правила", "type": "string" },
        "description": { "description": "Описание правила", "type": "string" },
        "quantity": {
          "format": "int32",
          "description": "Количество",
          "type": "integer"
        },
        "account": {
          "$ref": "#/definitions/Account",
          "description": "Накопительный счет"
        },
        "startDate": {
          "format": "date-time",
          "description": "Дата начала действия правила",
          "type": "string"
        },
        "changeDate": {
          "format": "date-time",
          "description": "Дата изменения",
          "type": "string"
        }
      }
    },
    "CardFee": {
      "description": "Информация по комиссии обслуживания карты",
      "type": "object",
      "properties": {
        "fee": {
          "format": "double",
          "description": "Размер комиссии",
          "type": "number"
        },
        "period": {
          "format": "int32",
          "description": "Период комиссии (1 = Month , 2 = Year )",
          "enum": [1, 2],
          "type": "integer"
        },
        "isSmsGracePeriod": {
          "description": "Находится ли карта в льготном периоде СМС-информирования или нет. В льготном периоде комиссия не взымается",
          "type": "boolean"
        },
        "currencyInfo": {
          "$ref": "#/definitions/Currency",
          "description": "Код валюты комиссии"
        }
      }
    },
    "CardProduct": {
      "description": "Карточный продукт",
      "type": "object",
      "properties": {
        "cardProductId": {
          "format": "int32",
          "description": "Id карточного продукта",
          "type": "integer"
        },
        "name": { "description": "Наименование", "type": "string" }
      }
    },
    "CardFinancialGroup": {
      "description": "Финансовая группа выпущенной карты",
      "type": "object",
      "properties": {
        "type": {
          "format": "int32",
          "description": "Тип финансовой группы (1 = Debet , 2 = Credit )",
          "enum": [1, 2],
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "description": "Наименование - \"Кредитная\" или \"Дебетовая\"",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CardLoyaltyProduct": {
      "description": "Продукт лояльности, который доступен по карте",
      "type": "object",
      "properties": {
        "productType": {
          "format": "int32",
          "description": "Тип продукта лояльности (1 = YourCashback , 2 = OrangePremiumClub , 3 = YourCashbackPlus , 4 = DoubleCachback , 5 = YourPlus , 6 = SalaryFlagman , 7 = Novatek , 8 = PsbEmployees , 9 = Cosmos , 10 = Roscosmos , 11 = StrongPeople , 12 = OrangePremiumClubNew , 13 = SalaryCashback , 14 = SalaryChoice , 15 = Cska , 16 = OrangePremiumClubCska )",
          "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],
          "type": "integer"
        },
        "displayAlert": {
          "description": "Отображать клиенту информационное сообщение или нет",
          "type": "boolean"
        },
        "loyaltyPackage": {
          "$ref": "#/definitions/CardLoyaltyPackage",
          "description": "Действующий в данный момент пакет лояльности (подключенный и действующий)"
        }
      }
    },
    "CardGrace": {
      "description": "Дополнительные свойства грейс-периода",
      "type": "object",
      "properties": {
        "number": { "description": "Number", "type": "string" },
        "ownAmount": {
          "format": "double",
          "description": "Собственные средства",
          "type": "number"
        },
        "creditLimit": {
          "format": "double",
          "description": "Кредитный лимит",
          "type": "number"
        },
        "blockedCreditLimit": {
          "format": "double",
          "description": "Заблокированный кредитный лимит",
          "type": "number"
        },
        "unusedCreditLimitAmount": {
          "format": "double",
          "description": "Неиспользованный кредитный лимит",
          "type": "number"
        },
        "holdDebit": {
          "format": "double",
          "description": "Заблокированная сумма",
          "type": "number"
        },
        "fullDebtAmount": {
          "format": "double",
          "description": "Задолженность перед банком",
          "type": "number"
        },
        "feeAmount": {
          "format": "double",
          "description": "Комиссии",
          "type": "number"
        },
        "penaltyAmount": {
          "format": "double",
          "description": "Штрафы",
          "type": "number"
        },
        "techOverAmount": {
          "format": "double",
          "description": "Несанкционированная задолженность",
          "type": "number"
        },
        "procTechOverAmount": {
          "format": "double",
          "description": "Проценты на несанкционированную задолженность",
          "type": "number"
        },
        "overDueAmount": {
          "format": "double",
          "description": "Просроченная задолженность",
          "type": "number"
        },
        "procOverDueAmount": {
          "format": "double",
          "description": "Проценты на просроченную задолженность",
          "type": "number"
        },
        "debtAmount": {
          "format": "double",
          "description": "Основной долг",
          "type": "number"
        },
        "procDebtAmount": {
          "format": "double",
          "description": "Проценты на основной долг",
          "type": "number"
        },
        "remainderFirstAmount": {
          "format": "double",
          "description": "Минимальный ежемесячный платеж (входит в основной долг)",
          "type": "number"
        },
        "firstDueDate": {
          "format": "date-time",
          "description": "Дата завершения платежного периода",
          "type": "string"
        },
        "futureProcAmount": {
          "format": "double",
          "description": "Комиссии и %, которые будут начислены при погашении в FirstDueDate",
          "type": "number"
        },
        "mopAmount": {
          "format": "double",
          "description": "Сумма задолженности",
          "type": "number"
        },
        "overDueProcAmount": {
          "format": "double",
          "description": "Просроченные проценты",
          "type": "number"
        },
        "graceAmount": {
          "format": "double",
          "description": "Сумма к погашению",
          "type": "number"
        },
        "graceDate": {
          "format": "date-time",
          "description": "Дата окончания платежного периода",
          "type": "string"
        },
        "availableOwnAmount": {
          "format": "double",
          "description": "Остаток собственных средств",
          "type": "number"
        }
      }
    },
    "ProgramType": {
      "description": "Тип программы выпуска",
      "type": "object",
      "properties": {
        "programTypeId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "name": { "description": "Наименование", "type": "string" },
        "isVip": {
          "description": "Является ли программой для VIP-сегмента",
          "type": "boolean"
        },
        "isTransaero": {
          "description": "Программа выпуска: Трансаеэро",
          "type": "boolean"
        },
        "isAllInclusive": {
          "description": "Программа выпуска: AllInclusive",
          "type": "boolean"
        },
        "isVirtual": {
          "description": "Программа выпуска: Виртуальная карта",
          "type": "boolean"
        },
        "isShoppingCard": {
          "description": "Программа выпуска: Shopping Card",
          "type": "boolean"
        },
        "isPlanet": {
          "description": "Программа выпуска: Planet",
          "type": "boolean"
        },
        "isTnsEnergo": {
          "description": "программа выпуска: ТНС-Энерго/А3",
          "type": "boolean"
        },
        "isWithoutBorders": {
          "description": "программа выпуска: #безграниц",
          "type": "boolean"
        }
      }
    },
    "CashbackData": {
      "description": "Информация по категории кешбека карты \r\n(для карт All inclusive)",
      "type": "object",
      "properties": {
        "cardId": {
          "format": "int64",
          "description": "Идентификатор карты",
          "type": "integer"
        },
        "category": {
          "$ref": "#/definitions/CashbackCategory",
          "description": "Текущая категория кешбека"
        },
        "activationDate": {
          "format": "date-time",
          "description": "Дата активации категории кешбека",
          "type": "string"
        },
        "nextCategory": {
          "$ref": "#/definitions/CashbackCategory",
          "description": "Следующая категория кешбека"
        },
        "nextActivationDate": {
          "format": "date-time",
          "description": "Дата активации следующей категории кешбека",
          "type": "string"
        }
      }
    },
    "CardManagement": {
      "description": "Инкапсулирует сущность управления картой",
      "type": "object",
      "properties": {
        "isIndividualSalaryContractAvailable": {
          "description": "Доступна ли клиенту работа с индивидуальным зарплатным проектом или нет",
          "type": "boolean"
        }
      }
    },
    "FinancialGroup": {
      "description": "Финансовая схема",
      "type": "object",
      "properties": {
        "financialGroupId": {
          "format": "int32",
          "description": "Id финансовой схемы",
          "type": "integer"
        },
        "name": { "description": "Наименование", "type": "string" },
        "debetOrCreditText": {
          "description": "Тип карты: дебетовая или кредитная",
          "type": "string"
        }
      }
    },
    "StateItem": {
      "description": "Состояния",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Идентификатор состояния",
          "type": "integer"
        },
        "name": { "description": "Назавание состояния", "type": "string" }
      }
    },
    "Account": {
      "description": "Внутренний счет системы PSB-Retail",
      "type": "object",
      "properties": {
        "isCustomRateViewAvailable": { "type": "boolean" },
        "accountId": {
          "format": "int32",
          "description": "Идентификатор счета",
          "type": "integer"
        },
        "contract": {
          "$ref": "#/definitions/ContractBase",
          "description": "Контракт"
        },
        "accountType": {
          "format": "int32",
          "description": "Тип счета (1 = Account , 2 = CardAccount , 3 = AbsAccount )",
          "enum": [1, 2, 3],
          "type": "integer",
          "readOnly": true
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "office": {
          "$ref": "#/definitions/Office",
          "description": "Servicing office"
        },
        "accountingBranch": {
          "$ref": "#/definitions/Branch",
          "description": "Accounting branch"
        },
        "number": { "description": "Number", "type": "string" },
        "previousNumber": {
          "description": "Номер счета до миграции",
          "type": "string"
        },
        "previousOpenDate": {
          "format": "date-time",
          "description": "Дата открытия до миграции",
          "type": "string"
        },
        "name": { "description": "Наименование", "type": "string" },
        "clientLabel": {
          "description": "Пользовательское наименование",
          "type": "string"
        },
        "balance": {
          "format": "double",
          "description": "Balance",
          "type": "number"
        },
        "availableBalance": {
          "format": "double",
          "description": "Доступный баланс",
          "type": "number"
        },
        "isWithReplenishment": {
          "description": "Is account replenishment available",
          "type": "boolean"
        },
        "isWithSubtraction": {
          "description": "Возможность снятия средств со счёта",
          "type": "boolean"
        },
        "openDate": {
          "format": "date-time",
          "description": "Дата открытия",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "description": "Состояние (1 = NotReady , 2 = Active , 3 = Blocked , 4 = Closed )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "closeDate": {
          "format": "date-time",
          "description": "Дата закрытия",
          "type": "string"
        },
        "requisites": {
          "$ref": "#/definitions/AccountRequisitesUnify",
          "description": "Реквизиты счёта"
        },
        "entityIdentifier": {
          "$ref": "#/definitions/EntityIdentifier",
          "description": ""
        }
      }
    },
    "CardLoyaltyPackage": {
      "description": "Пакет лояльности карты",
      "type": "object",
      "properties": {
        "productType": {
          "format": "int32",
          "description": "Продукт лояльности (1 = YourCashback , 2 = OrangePremiumClub , 3 = YourCashbackPlus , 4 = DoubleCachback , 5 = YourPlus , 6 = SalaryFlagman , 7 = Novatek , 8 = PsbEmployees , 9 = Cosmos , 10 = Roscosmos , 11 = StrongPeople , 12 = OrangePremiumClubNew , 13 = SalaryCashback , 14 = SalaryChoice , 15 = Cska , 16 = OrangePremiumClubCska )",
          "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],
          "type": "integer"
        },
        "endDate": {
          "format": "date-time",
          "description": "Дата окончания действия",
          "type": "string"
        },
        "categories": {
          "description": "Список категорий лояльности",
          "type": "array",
          "items": { "$ref": "#/definitions/CardLoyaltyCategory" }
        }
      }
    },
    "CashbackCategory": {
      "description": "Категория кешбека",
      "type": "object",
      "properties": {
        "cashBackCategoryId": {
          "format": "int32",
          "description": "Категория кешбека",
          "type": "integer"
        },
        "name": { "description": "Наименование", "type": "string" },
        "rate": {
          "format": "double",
          "description": "Ставка повышенного процента по категории, %",
          "type": "number"
        },
        "smallImageSrc": {
          "description": "Картинка категории",
          "type": "string"
        },
        "largeImageSrc": {
          "description": "Маленькая картинка категории",
          "type": "string"
        }
      }
    },
    "CardLoyaltyCategory": {
      "description": "Действующие в настоящий момент категории лояльности на карте",
      "type": "object",
      "properties": {
        "categoryId": {
          "format": "int32",
          "description": "Идентификтор категории лояльности",
          "type": "integer"
        },
        "name": { "description": "Наименование категории", "type": "string" },
        "remunerationInterest": {
          "format": "double",
          "description": "Размер вознаграждения в процентах по операции за счет кредитных средств",
          "type": "number"
        },
        "remunerationInterestDetails": {
          "description": "Проценты достигаемые по условиям",
          "type": "array",
          "items": { "$ref": "#/definitions/CardRemunerationInterestDetails" }
        },
        "iconCode": {
          "format": "int32",
          "description": "Код иконки. По этому коду на фронте подбирается необходимам для категории иконка",
          "type": "integer"
        },
        "isOtherMcc": {
          "description": "Категория \"Все остальное\"",
          "type": "boolean"
        }
      }
    },
    "CardRemunerationInterestDetails": {
      "description": "Детальная информация о проценте вознаграждения для карты",
      "type": "object",
      "properties": {
        "remunerationInterest": {
          "format": "double",
          "description": "Размер вознаграждения (в процентах)",
          "type": "number"
        },
        "amountFrom": {
          "format": "double",
          "description": "Сумма, начиная с которой начисляются проценты",
          "type": "number"
        },
        "goalReached": {
          "description": "Достигнуто условие получения процентов",
          "type": "boolean"
        }
      }
    },
    "LiteTermlessAccount": {
      "description": "Бессрочный счет. Упрощенная версия",
      "type": "object",
      "properties": {
        "accountId": {
          "format": "int32",
          "description": "Идентификатор счета",
          "type": "integer"
        },
        "status": {
          "format": "int32",
          "description": "Состояние (1 = NotReady , 2 = Active , 3 = Blocked , 4 = Closed )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "isLifeGoalAttached": {
          "description": "К счету привязана цель клиента",
          "type": "boolean"
        },
        "name": { "description": "Наименование", "type": "string" },
        "clientLabel": {
          "description": "Пользовательское наименование",
          "type": "string"
        },
        "availableBalance": {
          "format": "double",
          "description": "Доступный баланс",
          "type": "number"
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "closeDate": {
          "format": "date-time",
          "description": "Дата закрытия",
          "type": "string"
        },
        "isSaving": { "description": "Накопительный счёт", "type": "boolean" },
        "isSavingRuleEnabled": {
          "description": "Влючено правило накопления",
          "type": "boolean"
        },
        "isStoreAccount": {
          "description": "Является ли счет накопительным",
          "type": "boolean"
        },
        "number": { "description": "Номер счёта", "type": "string" },
        "entityIdentifier": {
          "$ref": "#/definitions/EntityIdentifier",
          "description": "Универсальный идентификатор сущности"
        }
      }
    },
    "ScenarioResult": {
      "description": "Контейнер интерактивного шага",
      "type": "object",
      "properties": {
        "caption": { "description": "Заголовок шага", "type": "string" },
        "params": {
          "description": "Параметры операции (для отображения)",
          "type": "array",
          "items": { "$ref": "#/definitions/ScenarioParam" }
        },
        "stepClass": {
          "description": "Класс специальной реализации шага (спец. контрол)",
          "type": "string"
        },
        "requestId": {
          "format": "int64",
          "description": "Номер поручения",
          "type": "integer"
        },
        "isFinished": { "description": "Завершен", "type": "boolean" },
        "hasPreviousStep": {
          "description": "Доступен переход на предыдущий шаг",
          "type": "boolean"
        },
        "skipConfirmStep": {
          "description": "Пропустить шаг подтверждения",
          "type": "boolean"
        },
        "messages": {
          "description": "Сообщения (предупреждения) клиенту",
          "type": "array",
          "items": { "$ref": "#/definitions/StepMessage" }
        },
        "operation": {
          "$ref": "#/definitions/Operation",
          "description": "Операция"
        },
        "template": {
          "$ref": "#/definitions/Template",
          "description": "Операция по шаблону"
        },
        "stepId": {
          "format": "int32",
          "description": "Идентификатор шага",
          "type": "integer"
        },
        "nextButtonTitle": {
          "description": "Заголовок шага",
          "type": "string"
        },
        "groups": {
          "description": "Группы параментров на этом шаге",
          "type": "array",
          "items": { "$ref": "#/definitions/ScenarioStepParamGroup" }
        },
        "popups": {
          "description": "Получает или устанавливает список всплывающих сообщений.",
          "type": "array",
          "items": { "$ref": "#/definitions/Popup" }
        },
        "customData": {
          "description": "Дополнительные данные",
          "type": "array",
          "items": { "$ref": "#/definitions/ScenarioResultCustomData" }
        },
        "googleAnalyticParams": {
          "description": "Дополнительные параметры для Google аналитики",
          "type": "array",
          "items": { "$ref": "#/definitions/GoogleAnalyticItem" }
        },
        "scenarioParams": {
          "description": "Список наименований параметров сценария",
          "type": "array",
          "items": { "type": "string" }
        },
        "stepParams": {
          "description": "Список наименований параметров шага",
          "type": "array",
          "items": { "type": "string" }
        },
        "autoCloseFormOnOperationFinish": {
          "description": "Признак необходимости закрытия формы операции по её завершению.",
          "type": "boolean"
        }
      }
    },
    "StepMessage": {
      "description": "Step Message\r\n<remarks>A message to display on the operation step. If StepMessageType = Confirmation then user should confirm the message</remarks>",
      "type": "object",
      "properties": {
        "text": { "description": "Text", "type": "string" },
        "type": {
          "format": "int32",
          "description": "Step Message Type (1 = Warning , 2 = Confirmation )",
          "enum": [1, 2],
          "type": "integer"
        }
      }
    },
    "ScenarioStepParamGroup": {
      "description": "Контейнер для сведений о группировке параметров сценария",
      "type": "object",
      "properties": {
        "name": { "description": "Наименование группы", "type": "string" },
        "description": { "description": "Описание группы", "type": "string" },
        "class": { "description": "Класс группы", "type": "string" },
        "scenarioParamIdentifiers": {
          "description": "Параметры сценария, принадлежащие этой группе",
          "type": "array",
          "items": { "type": "string" }
        },
        "children": {
          "description": "Вложенные группы",
          "type": "array",
          "items": { "$ref": "#/definitions/ScenarioStepParamGroup" }
        }
      }
    },
    "Popup": {
      "description": "Всплывающее сообщение.",
      "type": "object",
      "properties": {
        "caption": {
          "description": "Получает или устанавливает заголовок сообщения.",
          "type": "string"
        },
        "text": {
          "description": "Получает или устанавливает текст сообщения.",
          "type": "string"
        },
        "buttonText": {
          "description": "Получает или устанавливает текст на кнопке.",
          "type": "string"
        }
      }
    },
    "ScenarioResultCustomData": {
      "description": "Дополнительное значение, которое может передаваться в ScenarioResult",
      "type": "object",
      "properties": {
        "value": { "description": "Значение", "type": "string" },
        "type": {
          "format": "int32",
          "description": "Тип данных (0 = Unknown , 1 = StepIndex )",
          "enum": [0, 1],
          "type": "integer"
        }
      }
    },
    "GoogleAnalyticItem": {
      "description": "Класс элемента Google аналитики",
      "type": "object",
      "properties": {
        "key": {
          "format": "int32",
          "description": "Ключ (1 = ProductName , 2 = ProductCategory , 3 = Insurance )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "value": { "description": "Значение", "type": "string" }
      }
    },
    "AccountStatement": {
      "description": "Выписка по счету PSB-Retail",
      "type": "object",
      "properties": {
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "incomingBalance": {
          "format": "double",
          "description": "Входящий остаток",
          "type": "number"
        },
        "creditTurn": {
          "format": "double",
          "description": "Суммарный приход",
          "type": "number"
        },
        "debitTurn": {
          "format": "double",
          "description": "Суммарный расход",
          "type": "number"
        },
        "outcomingBalance": {
          "format": "double",
          "description": "Исходящий остаток",
          "type": "number"
        },
        "holdDebit": {
          "format": "double",
          "description": "Сумма заблокированных средств",
          "type": "number"
        },
        "transactions": {
          "description": "Список проводок",
          "type": "array",
          "items": { "$ref": "#/definitions/AccountTransaction" }
        },
        "totalTransactionCount": {
          "format": "int32",
          "description": "Общее число проводок",
          "type": "integer"
        },
        "sortDirection": {
          "format": "int32",
          "description": "Направление сортировки выписки (по убыванию или возрастанию даты) (1 = Ascending , 2 = Descending )",
          "enum": [1, 2],
          "type": "integer"
        }
      }
    },
    "AccountTransaction": {
      "description": "Транзакция по счету PSB-Retail",
      "type": "object",
      "properties": {
        "accountId": {
          "format": "int64",
          "description": "Идентификатор счёта",
          "type": "integer"
        },
        "accountNumber": { "description": "Номер счета", "type": "string" },
        "accountName": {
          "description": "Наименование счета",
          "type": "string"
        },
        "isCardAccountTransaction": {
          "description": "Транзакция была проведена по карточному счета",
          "type": "boolean"
        },
        "valueDate": {
          "format": "date-time",
          "description": "Дата валютирования",
          "type": "string"
        },
        "transactionDate": {
          "format": "date-time",
          "description": "Дата проводки",
          "type": "string"
        },
        "ground": { "description": "Основание (назначение)", "type": "string" },
        "transactionSum": {
          "format": "double",
          "description": "Сумма транзакции",
          "type": "number"
        },
        "transactionCurrency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "request": {
          "$ref": "#/definitions/Request",
          "description": "Поручение"
        },
        "isProcessed": {
          "description": "Завершенная транзакция",
          "type": "boolean"
        },
        "title": {
          "description": "Наименование операции на основе транзакции для отображения в разделе истории в МБ и ИБ",
          "type": "string"
        }
      }
    },
    "AccountBalance": {
      "description": "Балан по счету на дату",
      "type": "object",
      "properties": {
        "date": {
          "format": "date-time",
          "description": "Дата",
          "type": "string"
        },
        "outcomingBalance": {
          "format": "double",
          "description": "Исходящий баланс",
          "type": "number"
        }
      }
    },
    "MarketplaceProductOrderParams": {
      "description": "Параметры заказа из неавторизованной зоны",
      "type": "object",
      "properties": {
        "productCatalogIdentifier": {
          "description": "Идентификатор продукта.",
          "type": "string"
        },
        "referalLink": {
          "description": "Ссылка по которой потенциальный клиент пришел",
          "type": "string"
        },
        "referalLinkSource": {
          "description": "Источник реферальной ссылки",
          "type": "string"
        },
        "cardProductID": {
          "format": "int32",
          "description": "Предпочительный карточный продукт.",
          "type": "integer"
        },
        "currencyID": {
          "format": "int32",
          "description": "Предпочительная валюта.",
          "type": "integer"
        }
      }
    },
    "SessionSaltResult": {
      "description": "ответ на запрос сессионной соли",
      "type": "object",
      "properties": {
        "sessionSalt": { "description": "", "type": "string" },
        "requestId": { "description": "", "type": "string" },
        "passwordSalt": { "description": "", "type": "string" },
        "hashType": {
          "format": "int32",
          "description": " (1 = Common , 2 = Sha1Sha256 )",
          "enum": [1, 2],
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "LoginResult": {
      "description": "Login result",
      "type": "object",
      "properties": {
        "mustChangePassword": {
          "description": "Необходимость смены пароля",
          "type": "boolean"
        },
        "lastSessionTime": {
          "format": "date-time",
          "description": "Дата предыдущего входа в систему",
          "type": "string"
        },
        "lastSessionHost": {
          "description": "IP адрес сервера при предыдущем входе в систему",
          "type": "string"
        },
        "lastAccessChannelType": {
          "format": "int32",
          "description": "Канал доступа при предыдущем входе в систему (2 = Phone , 3 = WWW , 4 = Mobile , 7 = MobileApp , 9 = TabletApp , 10 = InternetBank , 12 = MobileAppNew )",
          "enum": [2, 3, 4, 7, 9, 10, 12],
          "type": "integer"
        },
        "hasActualBulletins": {
          "description": "if any unread news available",
          "type": "boolean"
        },
        "isContactInfoUpdateRequired": {
          "description": "Contact info is required to be updated",
          "type": "boolean"
        },
        "isNewRulesConfirmationRequired": {
          "description": "New rules confirmation required",
          "type": "boolean"
        },
        "isFirstTimeVisitor": {
          "description": "Первый раз воспользовался данным каналом доступа",
          "type": "boolean"
        },
        "clientProfile": {
          "$ref": "#/definitions/ClientProfile",
          "description": "Профиль клиента"
        },
        "isRemoteApplicationExists": {
          "description": "Существует заявка на подключение ДБО",
          "type": "boolean"
        },
        "dkoRequiredMode": {
          "format": "int32",
          "description": "возможность установки ДКО (0 = None , 1 = OnlyInOffice , 2 = Online )",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "isPushEnabled": {
          "description": "Доступно ли подтверждение push-кодом",
          "type": "boolean"
        },
        "chatHash": { "description": "Hash Для входа в чат", "type": "string" }
      }
    },
    "ClientProfile": {
      "description": "Профиль клиента",
      "type": "object",
      "properties": {
        "token": {
          "description": "Токен, производный от номера клиента (для хранения локальных настроек по клиенту)",
          "type": "string"
        },
        "clientId": {
          "format": "int32",
          "description": "Идентификатор клиента",
          "type": "integer"
        },
        "isValid": {
          "description": "Признак действительности данных клиента. При самостоятельной регистрации через интернет IsValid = false до подтверждения данных операционистом",
          "type": "boolean"
        },
        "login": { "description": "Логин", "type": "string" },
        "firstName": { "description": "Имя клиента", "type": "string" },
        "lastName": { "description": "Фамилия клиента", "type": "string" },
        "middleName": { "description": "Отчество клиента", "type": "string" },
        "inn": { "description": "ИНН", "type": "string" },
        "email": { "description": "Адрес электронной почты", "type": "string" },
        "isEmailConfirmed": {
          "description": "Подтвержден ли адрес электронной почты",
          "type": "boolean"
        },
        "mobilePhone": { "description": "Мобильный телефон", "type": "string" },
        "homePhone": { "description": "Домашний телефон", "type": "string" },
        "servicePhone": {
          "description": "Номер телефона для сервисов",
          "type": "string"
        },
        "remoteAccessLevel": {
          "format": "int32",
          "description": "Уровень доступа клиента к услугам дистанционного обслуживания (1 = PriorAccess , 2 = InformationAccess , 3 = OperationAccess )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "isLiteOperationAccess": {
          "description": "Ограничения ДБО Лайт для операционного доступа",
          "type": "boolean"
        },
        "locality": {
          "$ref": "#/definitions/Locality",
          "description": "Locality"
        },
        "federalDistrict": {
          "$ref": "#/definitions/FederalDistrict",
          "description": "Federal District"
        },
        "avatar": {
          "$ref": "#/definitions/Avatar",
          "description": "Аватар клиента"
        },
        "clientSegment": {
          "format": "int32",
          "description": "Сегмент клиента (0 = Unknown , 1 = Retail , 2 = Vip , 4 = OrangePremiumClub )",
          "enum": [0, 1, 2, 4],
          "type": "integer"
        },
        "residenceType": {
          "format": "int32",
          "description": "Резидентство клиента (0 = Unknown , 1 = Resident , 2 = NonResident )",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "sex": {
          "format": "int32",
          "description": "Пол клиента (0 = Unknown , 1 = Male , 2 = Female )",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "legalResidence": {
          "description": "Адрес регистрации",
          "type": "string"
        },
        "permanentResidence": {
          "description": "Адрес проживания",
          "type": "string"
        },
        "idns": {
          "$ref": "#/definitions/ClientIdns",
          "description": "Документы"
        },
        "dataCompletionPercentage": {
          "format": "int32",
          "description": "Процент заполнения данными",
          "type": "integer"
        },
        "profAreaWithoutSnils": {
          "format": "int32",
          "description": "Отношение к категории без СНИЛС",
          "type": "integer"
        }
      }
    },
    "Avatar": {
      "description": "Аватар клиента",
      "type": "object",
      "properties": {
        "hash": { "description": "Hash изображения аватара", "type": "string" },
        "isAvatarAllowed": {
          "description": "Разрешен ли аватар для клиента",
          "type": "boolean"
        },
        "mimeType": {
          "description": "Тип изображения (image или png)",
          "type": "string"
        },
        "imageData": {
          "format": "byte",
          "description": "Данные изображения",
          "type": "string"
        }
      }
    },
    "ClientIdns": {
      "description": "Документы клиента",
      "type": "object",
      "properties": {
        "primaryIdn": {
          "$ref": "#/definitions/ClientIdn",
          "description": "Основное удостоверение личности (паспорт или его аналог)"
        },
        "snilsIdn": {
          "$ref": "#/definitions/ClientIdn",
          "description": "СНИЛС"
        },
        "drivingLicenses": {
          "description": "Водительские удостоверения",
          "type": "array",
          "items": { "$ref": "#/definitions/ClientIdn" }
        },
        "vehicleOwnershipCertificates": {
          "description": "Свидетельства о регистрации на ТС",
          "type": "array",
          "items": { "$ref": "#/definitions/VehicleIdn" }
        }
      }
    },
    "ClientIdn": {
      "description": "Документ клиента",
      "type": "object",
      "properties": {
        "clientIdnId": {
          "format": "int32",
          "description": "Идентификатор документа",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": "Тип (1 = RussianPassport , 25 = DrivingLicense , 28 = Snils , 31 = VehicleOwnershipCertificate )",
          "enum": [1, 25, 28, 31],
          "type": "integer"
        },
        "idnName": { "description": "Наименование типа", "type": "string" },
        "series": { "description": "Серия", "type": "string" },
        "number": { "description": "Номер", "type": "string" },
        "whenGiven": {
          "format": "date-time",
          "description": "Дата выдачи",
          "type": "string"
        },
        "whereGiven": { "description": "Место выдачи", "type": "string" },
        "expires": {
          "format": "date-time",
          "description": "Когда истекает срок действия",
          "type": "string"
        },
        "name": { "description": "Наименование документа", "type": "string" },
        "docName": { "description": "Наименование", "type": "string" }
      }
    },
    "VehicleIdn": {
      "description": "Свидетельство о регистрации на ТС",
      "type": "object",
      "properties": {
        "vehicleMaker": { "description": "Марка ТС", "type": "string" },
        "clientIdnId": {
          "format": "int32",
          "description": "Идентификатор документа",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": "Тип (1 = RussianPassport , 25 = DrivingLicense , 28 = Snils , 31 = VehicleOwnershipCertificate )",
          "enum": [1, 25, 28, 31],
          "type": "integer"
        },
        "idnName": { "description": "Наименование типа", "type": "string" },
        "series": { "description": "Серия", "type": "string" },
        "number": { "description": "Номер", "type": "string" },
        "whenGiven": {
          "format": "date-time",
          "description": "Дата выдачи",
          "type": "string"
        },
        "whereGiven": { "description": "Место выдачи", "type": "string" },
        "expires": {
          "format": "date-time",
          "description": "Когда истекает срок действия",
          "type": "string"
        },
        "name": { "description": "Наименование документа", "type": "string" },
        "docName": { "description": "Наименование", "type": "string" }
      }
    },
    "AuthRequest": {
      "description": "Запрос аутентификации",
      "type": "object",
      "properties": {
        "preferredAuthorizerType": {
          "format": "int32",
          "description": "Предпочтительное (последнее использованное клиентом) средство авторизации (1 = Password , 2 = Sms , 3 = Otp , 6 = Certificate , 10 = SpecialCode , 11 = Push , 13 = Sec3D )",
          "enum": [1, 2, 3, 6, 10, 11, 13],
          "type": "integer"
        },
        "smsStatus": {
          "format": "int32",
          "description": "Статус смс-авторизатора (0 = Disabled , 1 = Blocked , 2 = Expired , 3 = WaitForNext , 4 = Available )",
          "enum": [0, 1, 2, 3, 4],
          "type": "integer"
        },
        "smsData": {
          "$ref": "#/definitions/SmsData",
          "description": "Данные смс-авторизатора"
        },
        "pushStatus": {
          "format": "int32",
          "description": "Статус push-авторизатора (0 = Disabled , 1 = Blocked , 2 = Expired , 3 = WaitForNext , 4 = Available )",
          "enum": [0, 1, 2, 3, 4],
          "type": "integer"
        },
        "pushData": {
          "$ref": "#/definitions/PushData",
          "description": "Данные push-авторизатора"
        },
        "otpStatus": {
          "format": "int32",
          "description": "Статус таблицы разовых ключей (0 = Disabled , 1 = Blocked , 2 = Expired , 3 = WaitForNext , 4 = Available )",
          "enum": [0, 1, 2, 3, 4],
          "type": "integer"
        },
        "otpData": {
          "$ref": "#/definitions/OtpData",
          "description": "Данные таблицы разовых ключей"
        },
        "specialCodeStatus": {
          "format": "int32",
          "description": "Статус авторизатора спец.код (0 = Disabled , 1 = Blocked , 2 = Expired , 3 = WaitForNext , 4 = Available )",
          "enum": [0, 1, 2, 3, 4],
          "type": "integer"
        },
        "specialCodeData": {
          "$ref": "#/definitions/SpecialCodeData",
          "description": "Данные авторизатора спец.код"
        },
        "sec3DStatus": {
          "format": "int32",
          "description": "Статус авторизатора 3Dsec (0 = Disabled , 1 = Blocked , 2 = Expired , 3 = WaitForNext , 4 = Available )",
          "enum": [0, 1, 2, 3, 4],
          "type": "integer"
        },
        "sec3DData": {
          "$ref": "#/definitions/Card2CardTransferResult",
          "description": "Данные автоизатора 3dsec"
        }
      }
    },
    "SmsData": {
      "description": "Sms authorizer data",
      "type": "object",
      "properties": {
        "phoneNumber": {
          "description": "Client phone number to which a Sms message is sent.",
          "type": "string"
        },
        "smsNumber": {
          "format": "int32",
          "description": "Sequence Sms number (if any)",
          "type": "integer"
        },
        "sentTime": {
          "format": "date-time",
          "description": "Date and time when Sms was sent (if any)",
          "type": "string"
        },
        "serverTime": {
          "format": "date-time",
          "description": "Server date and time to give an idea when next Sms can be sent",
          "type": "string"
        },
        "repeatInterval": {
          "format": "int32",
          "description": "Minimal interval when next Sms-code can be send, in seconds",
          "type": "integer"
        },
        "lifetime": {
          "format": "int32",
          "description": "Sms-code lifetime, in seconds",
          "type": "integer"
        }
      }
    },
    "PushData": {
      "description": "Push authorizer data",
      "type": "object",
      "properties": {
        "deviceName": {
          "description": "Client device name to which a Push message is sent.",
          "type": "string"
        },
        "deviceId": {
          "description": "Client device identifier to which a Push message is sent.",
          "type": "string"
        },
        "pushNumber": {
          "format": "int32",
          "description": "Sequence Push number (if any)",
          "type": "integer"
        },
        "sentTime": {
          "format": "date-time",
          "description": "Date and time when Push was sent (if any)",
          "type": "string"
        },
        "serverTime": {
          "format": "date-time",
          "description": "Server date and time to give an idea when next Push can be sent",
          "type": "string"
        },
        "repeatInterval": {
          "format": "int32",
          "description": "Minimal interval when next Push-code can be send, in seconds",
          "type": "integer"
        },
        "lifetime": {
          "format": "int32",
          "description": "Push-code lifetime, in seconds",
          "type": "integer"
        }
      }
    },
    "OtpData": {
      "description": "Данные авторизатора - таблицы разовых ключей",
      "type": "object",
      "properties": {
        "otpEnvelopeId": {
          "format": "int32",
          "description": "Номер таблицы разовых ключей",
          "type": "integer"
        },
        "nextOtpNumber": {
          "format": "int32",
          "description": "Номер запрашиваемого ключа",
          "type": "integer"
        }
      }
    },
    "SpecialCodeData": {
      "description": "SpecialCode authorizer data",
      "type": "object",
      "properties": {
        "phoneNumber": {
          "description": "Client phone number to which any special code messages are sent.",
          "type": "string"
        },
        "specialCodeNumber": {
          "format": "int32",
          "description": "Sequence Special Code number (if any)",
          "type": "integer"
        },
        "sentTime": {
          "format": "date-time",
          "description": "Date and time when Sms was sent (if any)",
          "type": "string"
        },
        "serverTime": {
          "format": "date-time",
          "description": "Server date and time to give an idea when next Sms can be sent",
          "type": "string"
        },
        "repeatInterval": {
          "format": "int32",
          "description": "Minimal interval when next Sms-code can be send, in seconds",
          "type": "integer"
        },
        "lifetime": {
          "format": "int32",
          "description": "Sms-code lifetime, in seconds",
          "type": "integer"
        }
      }
    },
    "Card2CardTransferResult": {
      "description": "Card2CardTransferResult",
      "type": "object",
      "properties": {
        "redirect": { "description": "", "type": "string" },
        "paReq": { "description": "", "type": "string" },
        "md": { "description": "", "type": "string" },
        "termUrl": { "description": "", "type": "string" },
        "responseResult": {
          "format": "int32",
          "description": " (1 = Refuse , 2 = AskedFor3DSec )",
          "enum": [1, 2],
          "type": "integer"
        },
        "html": { "description": "Html-страница c 3DSecure", "type": "string" },
        "notifyUrl": {
          "description": "URL для ответов с результатами аутентификации в 3DSecure",
          "type": "string"
        }
      }
    },
    "AuthResponse": {
      "description": "Ответ на запрос аутентификации",
      "type": "object",
      "properties": {
        "value": {
          "description": "Ответ на запрос при аутентификации (например, разовый ключ из таблицы)",
          "type": "string"
        },
        "authorizerType": {
          "format": "int32",
          "description": "Тип авторизатора (1 = Password , 2 = Sms , 3 = Otp , 6 = Certificate , 10 = SpecialCode , 11 = Push , 13 = Sec3D )",
          "enum": [1, 2, 3, 6, 10, 11, 13],
          "type": "integer"
        }
      }
    },
    "PasswordRecoveryParams": {
      "description": "Параметры для восстановления доступа",
      "type": "object",
      "properties": {
        "captchaResponse": {
          "$ref": "#/definitions/CaptchaResponse",
          "description": "Ответ клиента на запрос капчи"
        },
        "actionType": {
          "format": "int32",
          "description": "Тип действия по восстановлению доступа (1 = Login , 2 = PhoneId , 3 = IdnNumber )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "login": { "description": "Номер клиента (логин)", "type": "string" },
        "idnNumber": {
          "description": "Серия и номер паспорта РФ",
          "type": "string"
        },
        "phoneId": {
          "description": "Телефонный номер клиента",
          "type": "string"
        },
        "cardLast8Digits": {
          "description": "Последние цифры номера карты",
          "type": "string"
        },
        "cardExpireDate": {
          "format": "date-time",
          "description": "Срок действия карты",
          "type": "string"
        }
      }
    },
    "CaptchaResponse": {
      "description": "Ответ клиента на запрос капчи",
      "type": "object",
      "properties": {
        "token": { "description": "Токен из Captcha", "type": "string" },
        "providedValue": {
          "description": "Значение, указанное клиентом",
          "type": "string"
        }
      }
    },
    "PasswordRecoveryConfirmResult": {
      "description": "Контейнер для подтверждающего экрана восстановления доступа",
      "type": "object",
      "properties": {
        "token": { "description": "Токен", "type": "string" },
        "maskedMobilePhone": {
          "description": "Маскированный номер телефона",
          "type": "string"
        },
        "requestId": {
          "format": "int64",
          "description": "Номер поручения",
          "type": "integer"
        },
        "confirmParams": {
          "description": "Подтверждающие параметры операции",
          "type": "array",
          "items": { "$ref": "#/definitions/OperationParam" }
        },
        "authRequest": {
          "$ref": "#/definitions/AuthRequest",
          "description": "Запрос на подтверждение операции"
        },
        "documents": {
          "description": "Документы операции перед подтверждением",
          "type": "array",
          "items": { "$ref": "#/definitions/Document" }
        }
      }
    },
    "OperationParam": {
      "description": "Operation Param",
      "type": "object",
      "properties": {
        "name": { "description": "Name", "type": "string" },
        "value": { "description": "Value", "type": "string" }
      }
    },
    "PasswordRecoveryFinalizeParams": {
      "description": "Класс для передачи параметров при завершении операции",
      "type": "object",
      "properties": {
        "authResponse": {
          "$ref": "#/definitions/AuthResponse",
          "description": "Авторизация клиентом проведения операции"
        }
      }
    },
    "RegistrationParams": {
      "description": "Параметры для регистрации нового клиента",
      "type": "object",
      "properties": {
        "captchaResponse": {
          "$ref": "#/definitions/CaptchaResponse",
          "description": "Ответ клиента на запрос капчи"
        },
        "phoneId": {
          "description": "Номер телефона клиента (обязателен)",
          "type": "string"
        },
        "cardNumber": {
          "description": "Номер карты клиента (опционален)",
          "type": "string"
        },
        "codeWord": { "description": "Кодовое слово", "type": "string" }
      }
    },
    "RegistrationConfirmParams": {
      "description": "Параметры смены пароля",
      "type": "object",
      "properties": {
        "token": { "description": "Токен", "type": "string" },
        "smsCode": {
          "description": "Код подтверждения PhoneId",
          "type": "string"
        },
        "newPassword": { "description": "Новый пароль", "type": "string" }
      }
    },
    "SessionsHistory": {
      "description": "История входов в систему",
      "type": "object",
      "properties": {
        "items": {
          "description": "Данные (возвращается только определенная страница)",
          "type": "array",
          "items": { "$ref": "#/definitions/SessionInfo" }
        },
        "pageCount": {
          "format": "int32",
          "description": "Число страниц",
          "type": "integer"
        }
      }
    },
    "SessionInfo": {
      "description": "Информация о входе в систему",
      "type": "object",
      "properties": {
        "loginDate": {
          "format": "date-time",
          "description": "Время входа в систему (дата со временем)",
          "type": "string"
        },
        "remoteHostAddress": {
          "description": "IP, с которого был произведен вход",
          "type": "string"
        },
        "accessChannelType": {
          "format": "int32",
          "description": "Канал удаленного доступа (2 = Phone , 3 = WWW , 4 = Mobile , 7 = MobileApp , 9 = TabletApp , 10 = InternetBank , 12 = MobileAppNew )",
          "enum": [2, 3, 4, 7, 9, 10, 12],
          "type": "integer"
        }
      }
    },
    "TicketAuthRequest": {
      "description": "Запрос аутентификации по номеру телефона",
      "type": "object",
      "properties": {
        "ticket": {
          "format": "uuid",
          "description": "Тикет",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "authRequest": {
          "$ref": "#/definitions/AuthRequest",
          "description": "Данные запроса аутентификации"
        }
      }
    },
    "ClientInitialData": {
      "description": "Данные для создания клиента при заказе кредитной карты",
      "type": "object",
      "properties": {
        "firstName": { "description": "Имя", "type": "string" },
        "lastName": { "description": "Фамилия", "type": "string" },
        "middleName": { "description": "Отчество", "type": "string" },
        "birthDate": { "description": "Дата рождения", "type": "string" },
        "sex": {
          "format": "int32",
          "description": "Пол (0 = Unknown , 1 = Male , 2 = Female )",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "mobilePhone": { "description": "Мобильный телефон", "type": "string" },
        "russianFederationResident": {
          "description": "Признак резидентства РФ",
          "type": "boolean"
        },
        "isDSA": { "description": "Признак, что это DSA.", "type": "boolean" },
        "token": {
          "description": "Токен для проверки капчи",
          "type": "string"
        },
        "authRequestType": {
          "format": "int32",
          "description": "Тип запроса в расширенной авторизации, разграничивает разный функционал (0 = NotDefined , 1 = Marketplace , 2 = RemoteAuth , 3 = DigitalProfile )",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "email": { "description": "Email клиента", "type": "string" },
        "personalDataProcessingAgreement": {
          "description": "Согласие на обработку персональных данных",
          "type": "boolean"
        },
        "promotionAgreement": {
          "description": "Согласие на обработку персональных данных",
          "type": "boolean"
        },
        "bkiRequestAgreement": {
          "description": "Согласие на запрос в БКИ",
          "type": "boolean"
        }
      }
    },
    "DeviceEventModel": {
      "description": "",
      "type": "object",
      "properties": {
        "launchId": { "description": "", "type": "string" },
        "eventID": {
          "format": "int32",
          "description": "ID события.",
          "type": "integer"
        },
        "eventDate": { "description": "Дата события.", "type": "string" },
        "eventLevel": {
          "format": "int32",
          "description": "Уровень события.",
          "type": "integer"
        },
        "tag": { "description": "Тег.", "type": "string" },
        "message": { "description": "Сообщение.", "type": "string" },
        "os": {
          "format": "int32",
          "description": "Операционная система. (1 = iOS , 2 = Android )",
          "enum": [1, 2],
          "type": "integer"
        },
        "osVersion": {
          "description": "Версия операционной системы.",
          "type": "string"
        },
        "deviceModel": {
          "description": "Модель устройства.",
          "type": "string"
        },
        "applicationVersion": {
          "description": "Версия приложения.",
          "type": "string"
        }
      }
    },
    "InvoiceData": {
      "description": "Информация определяющая запуск операции над выставленым счетом по подписке",
      "type": "object",
      "properties": {
        "changeType": {
          "format": "int32",
          "description": "тип изменения (1 = Pay , 2 = Delete )",
          "enum": [1, 2],
          "type": "integer"
        },
        "invoiceID": {
          "description": "ID инвойса в AnyWay - AutoPayExternalID",
          "type": "string"
        }
      }
    },
    "SubscriptionData": {
      "description": "Информация определяющая запуск операции над подпиской",
      "type": "object",
      "properties": {
        "changeType": {
          "format": "int32",
          "description": "тип изменения (1 = Update , 2 = Delete )",
          "enum": [1, 2],
          "type": "integer"
        },
        "subscriptionID": {
          "description": "ID подписки в AnyWay - ExternalSubscriptionID",
          "type": "string"
        }
      }
    },
    "SubscriptionInvoices": {
      "description": "счета по подписке",
      "type": "object",
      "properties": {
        "paymentSubscribtionInfo": {
          "$ref": "#/definitions/AutomaticPayment",
          "description": "информация о подписке"
        },
        "descriptionItems": {
          "description": "нетипизированные элементы (описания)",
          "type": "array",
          "items": { "$ref": "#/definitions/SubscriptionDescriptionItem" }
        },
        "invoices": {
          "description": "счета к оплате",
          "type": "array",
          "items": { "$ref": "#/definitions/Invoice" }
        }
      }
    },
    "SubscriptionDescriptionItem": {
      "description": "",
      "type": "object",
      "properties": {
        "name": { "description": "", "type": "string" },
        "value": { "description": "", "type": "string" }
      }
    },
    "Invoice": {
      "description": "Счет к оплате",
      "type": "object",
      "properties": {
        "invoiceId": { "description": "Идентификатор счета", "type": "string" },
        "invoiceNumber": { "description": "Номер счета", "type": "string" },
        "invoiceDate": {
          "format": "date-time",
          "description": "Дата выставления счета",
          "type": "string"
        },
        "state": {
          "format": "int32",
          "description": "Статус (1 = Received , 2 = Pending , 3 = Paid , 4 = InsufficientFunds , 5 = PaymentLimitExceeded , 6 = Deleted , 7 = Cancelled , 8 = Expired , 9 = Postponed , 10 = PaidAnotherPlace , 11 = PaymentStarted )",
          "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],
          "type": "integer"
        },
        "sum": {
          "format": "double",
          "description": "Сумма платежа",
          "type": "number"
        },
        "commissionSum": {
          "format": "double",
          "description": "Сумма комиссии",
          "type": "number"
        },
        "dueDate": {
          "format": "date-time",
          "description": "Оплатить до",
          "type": "string"
        },
        "paymentPeriod": {
          "format": "date-time",
          "description": "Период оплаты",
          "type": "string"
        },
        "paymentDate": {
          "format": "date-time",
          "description": "Дата оплаты (может быть установлена будущая дата для счетов, ожидающих автоматической оплаты)",
          "type": "string"
        },
        "name": { "description": "Наименование счета", "type": "string" },
        "autoPayExternalID": {
          "description": "Внешний идентификатор для счета",
          "type": "string"
        },
        "simpleState": {
          "format": "int32",
          "description": "Статус для платежей AnyWay (1 = Unpaid , 2 = Paid , 3 = PaidAnotherPlace )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "autoReplenishmentInvoiceID": {
          "format": "int64",
          "description": "ID счета из базы",
          "type": "integer"
        }
      }
    },
    "RegularOperation": {
      "description": "Данные о регулярной операции",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Идентификатор операции",
          "type": "integer"
        },
        "templateNumber": {
          "description": "Номер шаблона операции",
          "type": "string"
        },
        "sum": {
          "format": "double",
          "description": "Сумма операции",
          "type": "number"
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта операции"
        },
        "name": { "description": "Название операции", "type": "string" },
        "imageSrc": { "description": "Картинка операции", "type": "string" },
        "scheduleDescription": {
          "description": "Описание графика выполнения",
          "type": "string"
        },
        "scheduledRequests": {
          "description": "Запланированные выполнения",
          "type": "array",
          "items": { "$ref": "#/definitions/RegularOperationRequest" }
        },
        "templateId": {
          "format": "int32",
          "description": "Идентификатор шаблона операции",
          "type": "integer"
        },
        "isActive": {
          "description": "Существует ли расписание",
          "type": "boolean"
        }
      }
    },
    "RegularOperationRequest": {
      "description": "Запрос на выполнение регулярной операции",
      "type": "object",
      "properties": {
        "requestId": {
          "format": "int64",
          "description": "Идентификатор поручения",
          "type": "integer"
        },
        "datePlanned": {
          "format": "date-time",
          "description": "Запланированная дата проведения операции",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "description": "Статус проведения операции (1 = Planned , 2 = Executed , 3 = Skipped , 4 = Canceled )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "dateProcessed": {
          "format": "date-time",
          "description": "Фактическая дата проведения операции",
          "type": "string"
        }
      }
    },
    "Badge": {
      "description": "Бейдж для навигации в мобильном приложении",
      "type": "object",
      "properties": {
        "path": { "description": "Путь", "type": "string" },
        "value": {
          "format": "int32",
          "description": "Бейдж",
          "type": "integer"
        },
        "children": {
          "description": "Children",
          "type": "array",
          "items": { "$ref": "#/definitions/Badge" }
        }
      }
    },
    "RussianBankFilterParams": {
      "description": "Параметры поиска российского банка",
      "type": "object",
      "properties": {
        "searchString": { "description": "Строка поиска", "type": "string" },
        "numHits": {
          "format": "int32",
          "description": "Количество выводимых записей",
          "type": "integer"
        }
      }
    },
    "RussianBank": {
      "description": "Российский банк",
      "type": "object",
      "properties": {
        "bic": { "description": "БИК", "type": "string" },
        "inn": { "description": "ИНН банка", "type": "string" },
        "imageSrc": {
          "description": "Ссылка на логотип банка",
          "type": "string"
        },
        "displayMember": {
          "description": "Получает отображаемое имя банка.",
          "type": "string",
          "readOnly": true
        },
        "name": { "description": "Bank's name", "type": "string" },
        "correspondenceAccount": {
          "description": "Счет банка в банке-корреспонденте",
          "type": "string"
        }
      }
    },
    "ForeignBank": {
      "description": "",
      "type": "object",
      "properties": {
        "swiftCode": { "description": "Swift код банка", "type": "string" },
        "abaCode": {
          "description": "ABA (USA banking number, the same thing as Swift code for other countries",
          "type": "string"
        },
        "physicalAddress": { "description": "Адрес", "type": "string" },
        "cityHeading": { "description": "Город", "type": "string" },
        "country": { "$ref": "#/definitions/Country", "description": "Страна" },
        "displayMember": {
          "description": "Получает отображаемое имя банка.",
          "type": "string",
          "readOnly": true
        },
        "name": { "description": "Bank's name", "type": "string" },
        "correspondenceAccount": {
          "description": "Счет банка в банке-корреспонденте",
          "type": "string"
        }
      }
    },
    "Banner": {
      "description": "Банер",
      "type": "object",
      "properties": {
        "bannerId": {
          "format": "int32",
          "description": "ID банера",
          "type": "integer"
        },
        "templateType": {
          "description": "Тип шаблона банера (определяет способ отображения)",
          "type": "string"
        },
        "url": { "description": "Url для перехода", "type": "string" },
        "caption": { "description": "Заголовок", "type": "string" },
        "text": { "description": "Текст", "type": "string" },
        "imageSrc": { "description": "Картинка", "type": "string" },
        "layout": {
          "format": "int32",
          "description": "Компоновка элементов баннера (1 = CaptionTextImage , 2 = CaptionImageText , 3 = ImageCaptionText )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "linkText": { "description": "Текст ссылки", "type": "string" },
        "isPopup": { "description": "Popup", "type": "boolean" },
        "popupLayout": {
          "format": "int32",
          "description": "Порядок компоновки элементов popup-баннера (0 = Text1TopImageMiddleText2Bottom , 1 = Text1TopImageBottom , 2 = ImageTopText1Bottom , 3 = Text1Only , 4 = ImageOnly , 5 = ImageLeftText1Right , 6 = Text1LeftImageRight )",
          "enum": [0, 1, 2, 3, 4, 5, 6],
          "type": "integer"
        },
        "text2": { "description": "Информационный текст 2", "type": "string" },
        "imageUrl": { "description": "Ссылка под картинкой", "type": "string" },
        "isImageUrlTargetBlank": {
          "description": "Открывать ссылку под картинкой в новом окне",
          "type": "boolean"
        },
        "linkButtonText": {
          "description": "Текст ссылки-кнопки в popup-баннере",
          "type": "string"
        },
        "linkButtonUrl": {
          "description": "Ссылка ссылки-кнопки в popup-баннере",
          "type": "string"
        },
        "isLinkButtonUrlTargetBlank": {
          "description": "Открывать ссылку ссылки-кнопки в popup-баннере в новом окне",
          "type": "boolean"
        },
        "applyTransparentLayout": {
          "description": "Применить прозрачный шаблон",
          "type": "boolean"
        }
      }
    },
    "PersonalOfferingStory": {
      "description": "Story (Группа баннеров)",
      "type": "object",
      "properties": {
        "storyId": {
          "format": "int64",
          "description": "Идентификатор",
          "type": "integer"
        },
        "offerId": {
          "format": "int64",
          "description": "Id предложения клиента",
          "type": "integer"
        },
        "caption": { "description": "Заголовок", "type": "string" },
        "imageUrl": { "description": "Ссылка на картинку", "type": "string" },
        "textColor": { "description": "Цвет текста", "type": "string" },
        "viewed": {
          "description": "История была просмотрена клиентом",
          "type": "boolean"
        },
        "url": {
          "description": "Ссылка на старт операции или иной ресурс",
          "type": "string"
        },
        "params": {
          "description": "Параметры предложения клиента",
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      }
    },
    "PersonalOfferingBanner": {
      "description": "Баннер",
      "type": "object",
      "properties": {
        "id": { "format": "int64", "description": "Id", "type": "integer" },
        "storyId": {
          "format": "int64",
          "description": "Id Story в рамках которой создан банер",
          "type": "integer"
        },
        "campaignId": {
          "format": "int64",
          "description": "Идентификатор кампании",
          "type": "integer"
        },
        "offerId": {
          "format": "int64",
          "description": "Id предложения клиента",
          "type": "integer"
        },
        "placeHolderType": {
          "format": "int32",
          "description": "расположение банера",
          "type": "integer"
        },
        "imageUrl": {
          "description": "Ссылка на изображение",
          "type": "string"
        },
        "color": { "description": "Цвет баннера", "type": "string" },
        "layout": {
          "format": "int32",
          "description": "Расположение кнопок",
          "type": "integer"
        },
        "viewTime": {
          "format": "int32",
          "description": "Время просмотра баннера (автоматическое переключение на следующий баннер в истории)",
          "type": "integer"
        },
        "params": {
          "description": "Параметры предложения клиента",
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "controls": {
          "description": "Кнопки",
          "type": "array",
          "items": {
            "type": "array",
            "items": { "$ref": "#/definitions/PersonalOfferingClientControl" }
          }
        }
      }
    },
    "PersonalOfferingClientControl": {
      "description": "Контролы (элементы на баннере)",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "ID контрола",
          "type": "integer"
        },
        "controlType": {
          "format": "int32",
          "description": "ID типа контрола (1 = Text , 2 = Input , 3 = Button , 4 = RadioButton , 5 = CheckBox , 6 = Like , 7 = Dislike , 8 = Gratitude , 9 = RateStars , 10 = Reference , 11 = Image , 12 = Details , 13 = Promocode , 14 = Chips )",
          "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],
          "type": "integer"
        },
        "properties": {
          "$ref": "#/definitions/PersonalOfferingControlProperties",
          "description": "Параметры контрола для отображения"
        },
        "state": {
          "format": "int32",
          "description": "Состояние контрола",
          "type": "integer"
        },
        "value": { "description": "Значение контрола", "type": "string" }
      }
    },
    "PersonalOfferingControlProperties": {
      "description": "Свойства контрола",
      "type": "object",
      "properties": {
        "bgColor": { "description": "Фоновый цвет", "type": "string" },
        "textColor": { "description": "Цвет текста", "type": "string" },
        "text": { "description": "Текст", "type": "string" },
        "textHint": { "description": "Текстовая подсказка", "type": "string" },
        "textSize": {
          "format": "int32",
          "description": "Размер текста",
          "type": "integer"
        },
        "editable": {
          "description": "Разрешено ли изменение",
          "type": "boolean"
        },
        "secondaryText": { "description": "Вторичный текст", "type": "string" },
        "secondaryTextColor": {
          "description": "Вторичный цвет текста",
          "type": "string"
        },
        "secondaryBgColor": {
          "description": "Вторичный фоновый цвет",
          "type": "string"
        },
        "url": { "description": "Ссылка для перехода", "type": "string" },
        "rate": {
          "format": "int32",
          "description": "Оценка",
          "type": "integer"
        },
        "align": {
          "format": "int32",
          "description": "Выравнивание",
          "type": "integer"
        },
        "imageUrl": { "description": "Ссылка на изображение", "type": "string" }
      }
    },
    "PersonalOfferingSaveStateDto": {
      "description": "DTO для сохранения состояния контролла баннера",
      "type": "object",
      "properties": {
        "offerId": {
          "format": "int64",
          "description": "Id предложения",
          "type": "integer"
        },
        "campaignId": {
          "format": "int64",
          "description": "Id кампании",
          "type": "integer"
        },
        "bannerId": {
          "format": "int64",
          "description": "Id баннера",
          "type": "integer"
        },
        "bannerControlId": {
          "format": "int64",
          "description": "Id контролла баннера",
          "type": "integer"
        },
        "state": {
          "format": "int32",
          "description": "Новое состояние контролла",
          "type": "integer"
        },
        "value": { "description": "Новое значение контролла", "type": "string" }
      }
    },
    "PersonalOfferingUnauthorizedZoneBanner": {
      "description": "Баннер в неавториованной зоне МБ.",
      "type": "object",
      "properties": {
        "entityType": { "format": "int32", "type": "integer" },
        "id": {
          "format": "int64",
          "description": "Идентификатор баннера неавторизованной зоны.",
          "type": "integer"
        },
        "backgroundColor": { "description": "Фоновый цвет.", "type": "string" },
        "controls": {
          "description": "Коллекция контролов (элементов) в баннере.",
          "type": "array",
          "items": {
            "type": "array",
            "items": { "$ref": "#/definitions/PersonalOfferingClientControl" }
          }
        }
      }
    },
    "PersonalOfferingInvestitionBanner": {
      "description": "Баннер инвестиционный",
      "type": "object",
      "properties": {
        "id": { "format": "int64", "description": "Id", "type": "integer" },
        "campaignId": {
          "format": "int64",
          "description": "Идентификатор кампании",
          "type": "integer"
        },
        "offerId": {
          "format": "int64",
          "description": "Id предложения клиента",
          "type": "integer"
        },
        "imageUrl": {
          "description": "Ссылка на изображение",
          "type": "string"
        },
        "params": {
          "description": "Параметры предложения клиента",
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "controls": {
          "description": "Кнопки",
          "type": "array",
          "items": {
            "type": "array",
            "items": { "$ref": "#/definitions/PersonalOfferingClientControl" }
          }
        }
      }
    },
    "PersonalOfferingInvitePage": {
      "description": "Страница для приглашений",
      "type": "object",
      "properties": {
        "id": { "format": "int64", "description": "Id", "type": "integer" },
        "imageUrl": {
          "description": "Ссылка на изображение",
          "type": "string"
        },
        "title": { "description": "Заголовок", "type": "string" },
        "subtitle": { "description": "Подзаголовок", "type": "string" },
        "promoTitle": { "description": "Заголовок акции", "type": "string" },
        "promoDescription": {
          "description": "Описание",
          "type": "array",
          "items": { "type": "string" }
        },
        "promoUrl": {
          "description": "Ссылка на документ акции",
          "type": "string"
        },
        "promoUrlText": { "description": "Текст ссылки", "type": "string" },
        "shareText": {
          "description": "Текст для нового клиента",
          "type": "string"
        },
        "shareLink": {
          "description": "Ссылка для нового клиента",
          "type": "string"
        }
      }
    },
    "WebBoxProduct": {
      "description": "Коробочный продукт",
      "type": "object",
      "properties": {
        "boxProductId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "name": { "description": "Название", "type": "string" },
        "operationCode": {
          "format": "int32",
          "description": "Код операции",
          "type": "integer"
        },
        "sortOrder": {
          "format": "int32",
          "description": "Порядок сортировки",
          "type": "integer"
        },
        "boxProductSupplier": {
          "$ref": "#/definitions/WebBoxProductSupplier",
          "description": "Поставщик продукта"
        },
        "boxProductActivationInfo": {
          "$ref": "#/definitions/WebBoxProductActivationInfo",
          "description": "Информация по активации"
        },
        "infoDocs": {
          "description": "Информационные документы",
          "type": "array",
          "items": { "$ref": "#/definitions/WebBoxProductInfoDoc" }
        },
        "features": {
          "description": "Фичи",
          "type": "array",
          "items": { "$ref": "#/definitions/WebBoxProductFeature" }
        },
        "descrs": {
          "description": "Описания",
          "type": "array",
          "items": { "$ref": "#/definitions/WebBoxProductDescription" }
        },
        "packages": {
          "description": "Пакеты",
          "type": "array",
          "items": { "$ref": "#/definitions/WebBoxPackage" }
        }
      }
    },
    "WebBoxProductSupplier": {
      "description": "Поставщик продукта",
      "type": "object",
      "properties": {
        "boxProductSupplierId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "receiverId": {
          "format": "int32",
          "description": "Идентификатор получателя",
          "type": "integer"
        },
        "name": { "description": "Наименование", "type": "string" },
        "contacts": {
          "description": "Контакты",
          "type": "array",
          "items": { "$ref": "#/definitions/WebBoxProductSupplierContact" }
        }
      }
    },
    "WebBoxProductActivationInfo": {
      "description": "Информация об активации",
      "type": "object",
      "properties": {
        "boxProductActivationInfoId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "description": { "description": "Описание", "type": "string" },
        "contact": { "description": "Контакт для активации", "type": "string" }
      }
    },
    "WebBoxProductInfoDoc": {
      "description": "Информационный документ",
      "type": "object",
      "properties": {
        "boxProductInfoDocId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "sortOrder": {
          "format": "int32",
          "description": "Порядок сортировки",
          "type": "integer"
        },
        "name": { "description": "Название", "type": "string" },
        "docUrl": { "description": "Ссылка на документ", "type": "string" },
        "boxProduct": {
          "$ref": "#/definitions/WebBoxProduct",
          "description": "Продукт"
        }
      }
    },
    "WebBoxProductFeature": {
      "description": "Особенности продукта",
      "type": "object",
      "properties": {
        "boxProductFeatureId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "sortOrder": {
          "format": "int32",
          "description": "Порядок сортировки",
          "type": "integer"
        },
        "content": { "description": "Описание", "type": "string" },
        "boxProduct": {
          "$ref": "#/definitions/WebBoxProduct",
          "description": "Продукт"
        }
      }
    },
    "WebBoxProductDescription": {
      "description": "Описание продукта",
      "type": "object",
      "properties": {
        "boxProductDescriptionId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "sortOrder": {
          "format": "int32",
          "description": "Порядок сортировки",
          "type": "integer"
        },
        "name": { "description": "Название", "type": "string" },
        "content": { "description": "Содержание", "type": "string" },
        "boxProduct": {
          "$ref": "#/definitions/WebBoxProduct",
          "description": "Продукт"
        }
      }
    },
    "WebBoxPackage": {
      "description": "Пакет продукта",
      "type": "object",
      "properties": {
        "boxPackageId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "boxProduct": {
          "$ref": "#/definitions/WebBoxProduct",
          "description": "Продукт"
        },
        "name": { "description": "Имя пакета", "type": "string" },
        "isVisible": {
          "description": "Является видимым на карточке купленного продукта",
          "type": "boolean"
        },
        "tariffs": {
          "description": "Список тарифов",
          "type": "array",
          "items": { "$ref": "#/definitions/WebBoxProductTariff" }
        }
      }
    },
    "WebBoxProductSupplierContact": {
      "description": "Контакт поставщика продуктов",
      "type": "object",
      "properties": {
        "boxProductSupplierContactId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "contactType": { "description": "Тип контакта", "type": "string" },
        "contact": { "description": "Контакт", "type": "string" },
        "sortOrder": {
          "format": "int32",
          "description": "Порядок сортировки",
          "type": "integer"
        },
        "contactLabel": {
          "description": "Название контакта",
          "type": "string"
        },
        "boxProductSupplier": {
          "$ref": "#/definitions/WebBoxProductSupplier",
          "description": "Поставщик"
        }
      }
    },
    "WebBoxProductTariff": {
      "description": "Тариф по которому продукт продается сегменту (может быть несколько тарифов на один продукт-сегмент)",
      "type": "object",
      "properties": {
        "boxProductTariffId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "boxPackage": {
          "$ref": "#/definitions/WebBoxPackage",
          "description": "Пакет"
        },
        "boxProductClientSegment": {
          "$ref": "#/definitions/WebBoxProductClientSegment",
          "description": "Сегмент"
        },
        "beginDate": {
          "format": "date-time",
          "description": "Дата начала",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "Дата окончания",
          "type": "string"
        },
        "name": { "description": "Название", "type": "string" },
        "price": { "format": "double", "description": "Цена", "type": "number" }
      }
    },
    "WebBoxProductClientSegment": {
      "description": "Сегмент клиента",
      "type": "object",
      "properties": {
        "boxProductClientSegmentId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "name": { "description": "Название", "type": "string" }
      }
    },
    "WebBoxContract": {
      "description": "Договор коробочного страхования",
      "type": "object",
      "properties": {
        "boxContractId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "createRequestId": {
          "format": "int64",
          "description": "Номер поручения",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "description": "Дата создания договора",
          "type": "string"
        },
        "planningCloseDate": {
          "format": "date-time",
          "description": "Плановая дата закрытия",
          "type": "string"
        },
        "contractNumber": { "description": "Номер договора", "type": "string" },
        "boxProduct": {
          "$ref": "#/definitions/WebBoxProduct",
          "description": "Продукт"
        },
        "boxProductTariff": {
          "$ref": "#/definitions/WebBoxProductTariff",
          "description": "Тариф"
        }
      }
    },
    "BrokerageData": {
      "description": "",
      "type": "object",
      "properties": {
        "applications": {
          "description": "Заявки",
          "type": "array",
          "items": { "$ref": "#/definitions/BrokerageApplication" }
        },
        "contracts": {
          "description": "Контракты",
          "type": "array",
          "items": { "$ref": "#/definitions/BrokerageContract" }
        }
      }
    },
    "BrokerageApplication": {
      "description": "Заявка на договор на брокерское обслуживание",
      "type": "object",
      "properties": {
        "state": {
          "format": "int32",
          "description": " (1 = Active , 2 = Prolonged , 4 = Expired , 5 = Canceled , 10 = Completed )",
          "enum": [1, 2, 4, 5, 10],
          "type": "integer"
        },
        "applicationDate": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "id": { "format": "int32", "description": "", "type": "integer" },
        "requestId": {
          "format": "int64",
          "description": "",
          "type": "integer"
        },
        "tradingPlatforms": {
          "description": "Торговые площадки",
          "type": "array",
          "items": { "$ref": "#/definitions/TradingPlatform" }
        },
        "quikKeys": {
          "description": "",
          "type": "array",
          "items": { "$ref": "#/definitions/QuikKey" }
        },
        "quikKey": {
          "$ref": "#/definitions/QuikKey",
          "description": "Действующий ключ по договору"
        },
        "office": {
          "$ref": "#/definitions/Office",
          "description": "Офис обслуживания"
        },
        "tariffName": { "description": "", "type": "string" },
        "marginTrade": {
          "description": "Необеспеченные сделки",
          "type": "boolean"
        },
        "usingQuick": {
          "description": "Использование QUIK",
          "type": "boolean"
        },
        "usingWebQuick": {
          "description": "Использование WebQUIK",
          "type": "boolean"
        },
        "securitiesPaymentType": {
          "description": "Тип выплаты доходов по ценным бумагам",
          "type": "string"
        }
      }
    },
    "BrokerageContract": {
      "description": "Информация по договору на брокерское обслуживание",
      "type": "object",
      "properties": {
        "applicationId": {
          "format": "int32",
          "description": "Номер заявки",
          "type": "integer"
        },
        "quikKeys": {
          "description": "WebQUIK ключи",
          "type": "array",
          "items": { "$ref": "#/definitions/QuikKey" }
        },
        "tariffName": {
          "description": "Наименование тарифного плана",
          "type": "string"
        },
        "tradingPlatforms": {
          "description": "Торговые площадки",
          "type": "array",
          "items": { "$ref": "#/definitions/TradingPlatform" }
        },
        "accountNumber": { "description": "Счет 306", "type": "string" },
        "accounts": {
          "description": "Счета брокерского договора",
          "type": "array",
          "items": { "$ref": "#/definitions/Account" }
        },
        "currencyAccounts": {
          "description": "Валютные счета брокерского договора",
          "type": "array",
          "items": { "$ref": "#/definitions/Account" }
        },
        "currencyAccountsForSecuritiesMarkets": {
          "description": "Валютные счета РЦБ брокерского договора",
          "type": "array",
          "items": { "$ref": "#/definitions/Account" }
        },
        "marginTrade": {
          "description": "Необеспеченные сделки",
          "type": "boolean"
        },
        "usingQuick": {
          "description": "Использование QUIK",
          "type": "boolean"
        },
        "usingWebQuick": {
          "description": "Использование WebQUIK",
          "type": "boolean"
        },
        "receivingReportInOffice": {
          "description": "Получение отчета в офисе",
          "type": "boolean"
        },
        "receivingReportByEmail": {
          "description": "Получение отчета по электронной почте",
          "type": "boolean"
        },
        "email": {
          "description": "Email для получения отчета",
          "type": "string"
        },
        "highRiskLevel": {
          "description": "Повышенный уровень риска",
          "type": "boolean"
        },
        "isQualifiedInvestor": {
          "description": "Квалифицированный инвестор",
          "type": "boolean"
        },
        "serviceType": {
          "format": "int32",
          "description": "Получает или устанавливает тип БО. (1 = Standard , 2 = IndividualInvestmentAccount , 4 = Light )",
          "enum": [1, 2, 4],
          "type": "integer"
        },
        "securitiesPaymentType": {
          "description": "Тип выплаты доходов по ценным бумагам",
          "type": "string"
        },
        "contractId": {
          "format": "int32",
          "description": "Идентификатор контракта",
          "type": "integer"
        },
        "brand": {
          "$ref": "#/definitions/BrandBase",
          "description": "Product brand"
        },
        "clientLabel": {
          "description": "Наименование от клиента",
          "type": "string"
        },
        "request": {
          "$ref": "#/definitions/Request",
          "description": "Поручение на открытие"
        },
        "closeRequest": {
          "$ref": "#/definitions/Request",
          "description": "Поручение на закрытие"
        },
        "office": {
          "$ref": "#/definitions/Office",
          "description": "Доп. офис банка"
        },
        "number": { "description": "Номер контракта", "type": "string" },
        "name": { "description": "Наименование договора", "type": "string" },
        "previousName": {
          "description": "Наименование договора до миграции",
          "type": "string"
        },
        "description": { "description": "Описание", "type": "string" },
        "beginDate": {
          "format": "date-time",
          "description": "Дата открытия",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "description": "Состояние (1 = NotReady , 2 = Active , 3 = Blocked , 4 = Closed )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "closeDate": {
          "format": "date-time",
          "description": "Дата закрытия",
          "type": "string"
        },
        "entityIdentifier": {
          "$ref": "#/definitions/EntityIdentifier",
          "description": ""
        }
      }
    },
    "TradingPlatform": {
      "description": "",
      "type": "object",
      "properties": { "name": { "description": "", "type": "string" } }
    },
    "QuikKey": {
      "description": "",
      "type": "object",
      "properties": {
        "quikKeyId": {
          "format": "int32",
          "description": "",
          "type": "integer"
        },
        "state": {
          "format": "int32",
          "description": " (1 = Active , 2 = Revoked , 3 = Locked , 4 = Deleted , 5 = Wait4Activation )",
          "enum": [1, 2, 3, 4, 5],
          "type": "integer"
        },
        "activationDate": {
          "format": "date-time",
          "description": "Дата активации",
          "type": "string"
        },
        "keyIdentifier": { "description": "", "type": "string" }
      }
    },
    "VoiceRegistry": {
      "description": "",
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": " (1 = Active , 2 = Signed , 3 = Rejected , 4 = Replaced )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "name": { "description": "", "type": "string" },
        "voiceRegistryId": {
          "format": "int32",
          "description": "",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "caption": { "description": "", "type": "string" }
      }
    },
    "Security": {
      "description": "Ценная бумага из списка всех эмиссионных ценных бумаг.",
      "type": "object",
      "properties": {
        "securityId": {
          "format": "int64",
          "description": "ID ценной бумаги.",
          "type": "integer"
        },
        "issuerShortName": {
          "description": "Краткое наименование эмитента.",
          "type": "string"
        },
        "issuerFullName": {
          "description": "Полное наименование эмитента.",
          "type": "string"
        },
        "regNum": {
          "description": "Номер гос. регистрации.",
          "type": "string"
        },
        "isin": { "description": "ISIN.", "type": "string" },
        "issue": { "description": "Выпуск.", "type": "string" },
        "tranche": { "description": "Транш.", "type": "string" },
        "series": { "description": "Серия.", "type": "string" },
        "type": { "description": "Вид.", "type": "string" },
        "category": { "description": "Категория.", "type": "string" },
        "couponInterestRate": {
          "format": "double",
          "description": "Ставка купона.",
          "type": "number"
        },
        "nextOfferDate": {
          "format": "date-time",
          "description": "Дата ближайшей оферты.",
          "type": "string"
        },
        "couponPeriod": {
          "format": "int32",
          "description": "Получает или устанавливает купонный период.",
          "type": "integer"
        },
        "nextCouponDate": {
          "format": "date-time",
          "description": "Дата ближайшей выплаты купона.",
          "type": "string"
        },
        "placementDate": {
          "format": "date-time",
          "description": "Дата размещения.",
          "type": "string"
        },
        "volume": {
          "format": "double",
          "description": "Номинальный объем выпуска.",
          "type": "number"
        },
        "endDate": {
          "format": "date-time",
          "description": "Дата погашения.",
          "type": "string"
        },
        "faceValue": {
          "format": "double",
          "description": "Получает или устанавливает номинал бумаги.",
          "type": "number"
        },
        "currency": {
          "description": "Получает или устанавливает валюту бумаги.",
          "type": "string"
        },
        "displayMember": {
          "description": "Получает описание ценной бумаги.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "FederalBondCounter": {
      "description": "Информация о количестве ОФЗ-н",
      "type": "object",
      "properties": {
        "totalCount": {
          "format": "int32",
          "description": "Общее количество ОФЗ-н у клиента (купленных и в обработке)",
          "type": "integer"
        },
        "inProgressCount": {
          "format": "int32",
          "description": "Количество ОФЗ-н по заявкам, находящимся обработке",
          "type": "integer"
        }
      }
    },
    "Issuer": {
      "description": "Эмитент ценных бумаг.",
      "type": "object",
      "properties": {
        "issuerId": {
          "format": "int64",
          "description": "ID эмитента.",
          "type": "integer"
        },
        "shortName": {
          "description": "Краткое наименование эмитента.",
          "type": "string"
        },
        "fullName": {
          "description": "Полное наименование эмитента.",
          "type": "string"
        },
        "displayMember": {
          "description": "Получает отображаемое имя эмитента.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "QuikSecurity": {
      "description": "Ценная бумага Quik.",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Получает или устанавливает ID ценной бумаги.",
          "type": "integer"
        },
        "class": {
          "description": "Получает или устанавливает код класса ценной бумаги.",
          "type": "string"
        },
        "code": {
          "description": "Получает или устанавливает код ценной бумаги.",
          "type": "string"
        },
        "name": {
          "description": "Получает или устанавливает наименование ценной бумаги.",
          "type": "string"
        },
        "regNum": {
          "description": "Получает или устанавливает номер гос. регистрации ценной бумаги..",
          "type": "string"
        },
        "isin": {
          "description": "Получает или устанавливает ISIN ценной бумаги.",
          "type": "string"
        },
        "cfi": {
          "description": "Получает или устанавливает CFI ценной бумаги.",
          "type": "string"
        },
        "faceValue": {
          "format": "double",
          "description": "Получает или устанавливает номинал ценной бумаги.",
          "type": "number"
        },
        "currencyId": {
          "format": "int32",
          "description": "Получает или устанавливает ID валюты номинала.",
          "type": "integer"
        },
        "category": {
          "description": "Получает или устанавливает категорию ценной бумаги.",
          "type": "string"
        },
        "firmIdBurse": { "description": "Код фирмы биржа", "type": "string" },
        "firmIdBquote": {
          "description": "Код фирмы внебиржа",
          "type": "string"
        },
        "depoCode": {
          "description": "Номер счета депо (пока L01+00000F00)",
          "type": "string"
        },
        "displayMember": {
          "description": "Получает описание ценной бумаги.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TaxReportHistory": {
      "description": "История налоговых справок.",
      "type": "object",
      "properties": {
        "items": {
          "description": "Данные (возвращается только определенная страница).",
          "type": "array",
          "items": { "$ref": "#/definitions/TaxReport" }
        },
        "totalItemCount": {
          "format": "int32",
          "description": "Всего отчетов.",
          "type": "integer"
        }
      }
    },
    "TaxReport": {
      "description": "Налоговая справка.",
      "type": "object",
      "properties": {
        "taxReportId": {
          "format": "int32",
          "description": "Получает или устанавливает уникальный ID справки.",
          "type": "integer"
        },
        "fileName": {
          "description": "Получает или устанавливает имя файла справки.",
          "type": "string"
        },
        "requestTime": {
          "format": "date-time",
          "description": "Получает или устанавливает дату и время запроса справки.",
          "type": "string"
        },
        "begDate": {
          "format": "date-time",
          "description": "Получает или устанавливает начальную дату отчетного периода.",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "Получает или устанавливает конечную дату отчетного периода.",
          "type": "string"
        },
        "reportType": {
          "description": "Получает или устанавливает наименование типа налоговой справки.",
          "type": "string"
        },
        "displayMember": {
          "description": "Получает отображаемое имя справки.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SecurityForSale": {
      "description": "Ценная бумага на размещении.",
      "type": "object",
      "properties": {
        "securityForSaleId": {
          "format": "int32",
          "description": "Получает или устанавливает ID бумаги на размещении.",
          "type": "integer"
        },
        "security": {
          "$ref": "#/definitions/Security",
          "description": "Получает или устанавливает свойства ценной бумаги, которая находится на размещении."
        },
        "accruedInterest": {
          "format": "double",
          "description": "Получает или устанавливает НКД по бумаге на текущую дату.",
          "type": "number"
        },
        "market": {
          "description": "Получает или устанавливает площадку размещения и вторичного обращения бумаги.",
          "type": "string"
        },
        "infoSource": {
          "description": "Получает или устанавливает источник информации о ценных бумагах.",
          "type": "string"
        },
        "issuerType": {
          "format": "int32",
          "description": "Получает или устанавливает тип эмитента бумаги. (1 = ThirdParty , 2 = Own , 3 = PsnOrPsbGroup )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "yield": {
          "format": "double",
          "description": "Получает или устанавливает текущую доходность по бумаге.",
          "type": "number"
        },
        "minBuyQty": {
          "format": "int64",
          "description": "Минимально возможное кол-во бумаг для покупки.",
          "type": "integer"
        },
        "maxBuyQty": {
          "format": "int64",
          "description": "Максимально возможное кол-во бумаг для покупки.",
          "type": "integer"
        },
        "securityForSaleType": {
          "format": "int32",
          "description": "Тип ЦБ для продажи в ИБ. (1 = OrdinaryBond , 2 = FederalBond )",
          "enum": [1, 2],
          "type": "integer"
        },
        "securityForSaleTypeName": {
          "description": "Тип ЦБ для продажи в ИБ.",
          "type": "string"
        },
        "lastPrice": {
          "format": "double",
          "description": "Последняя цена.",
          "type": "number"
        },
        "banner": {
          "description": "Определяет, нужно ли отображать баннер для данной бумаги.",
          "type": "boolean"
        }
      }
    },
    "CalendarEvent": {
      "description": "Календарное событие",
      "type": "object",
      "properties": {
        "calendarEventId": {
          "format": "int64",
          "description": "Первичный ключ",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "description": "Дата создания в системе",
          "type": "string"
        },
        "obligationDate": {
          "format": "date-time",
          "description": "Дата события",
          "type": "string"
        },
        "remindDate": {
          "format": "date-time",
          "description": "Дата напоминания",
          "type": "string"
        },
        "content": { "description": "Текст сообщения", "type": "string" },
        "readDate": {
          "format": "date-time",
          "description": "Дата прочтения",
          "type": "string"
        },
        "entityType": {
          "format": "int32",
          "description": "Тип сущности (5 = Account , 10 = Request , 34 = Trust , 51 = DepositContract , 69 = LoanContract , 85 = LoanApplication , 88 = CardOrder , 207 = Card , 209 = OpenwayAccount , 211 = Invoice , 212 = CalendarEvents )",
          "enum": [5, 10, 34, 51, 69, 85, 88, 207, 209, 211, 212],
          "type": "integer"
        },
        "entityId": { "description": "ID сущности", "type": "string" },
        "contract": {
          "$ref": "#/definitions/ContractBase",
          "description": "Контракт"
        },
        "attachments": {
          "description": "Вложения",
          "type": "array",
          "items": { "$ref": "#/definitions/CalendarEventAttachment" }
        }
      }
    },
    "CalendarEventAttachment": {
      "description": "Вложение календарного события",
      "type": "object",
      "properties": {
        "documentImageId": {
          "format": "int32",
          "description": "ID файла",
          "type": "integer"
        },
        "fileName": { "description": "Имя файла", "type": "string" },
        "fileLength": {
          "format": "int64",
          "description": "Размер файла в байтах",
          "type": "integer"
        }
      }
    },
    "CalendarEventCreateParams": {
      "description": "Данные для создания календарного события",
      "type": "object",
      "properties": {
        "content": { "description": "Текст сообщения", "type": "string" },
        "obligationDate": {
          "format": "date-time",
          "description": "Дата события",
          "type": "string"
        },
        "fileName": { "description": "Имя файла вложения", "type": "string" },
        "attachment": { "description": "Содержимое вложения", "type": "string" }
      }
    },
    "CalendarEventAggregate": {
      "description": "Агрегатные данные по сущности календарного события",
      "type": "object",
      "properties": {
        "entityType": {
          "format": "int32",
          "description": "Тип сущности (5 = Account , 10 = Request , 34 = Trust , 51 = DepositContract , 69 = LoanContract , 85 = LoanApplication , 88 = CardOrder , 207 = Card , 209 = OpenwayAccount , 211 = Invoice , 212 = CalendarEvents )",
          "enum": [5, 10, 34, 51, 69, 85, 88, 207, 209, 211, 212],
          "type": "integer"
        },
        "eventCount": {
          "format": "int32",
          "description": "Количество событий",
          "type": "integer"
        }
      }
    },
    "CalendarEventUnreadAggregate": {
      "description": "Агрегатные данные по сущности календарного события",
      "type": "object",
      "properties": {
        "remindDate": {
          "format": "date-time",
          "description": "Дата",
          "type": "string"
        },
        "eventCount": {
          "format": "int32",
          "description": "Количество событий",
          "type": "integer"
        }
      }
    },
    "Captcha": {
      "description": "Информация для отображения капчи на клиенте",
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/Image64",
          "description": "Изображение"
        },
        "token": {
          "description": "Токен для последующей проверки капчи",
          "type": "string"
        }
      }
    },
    "Image64": {
      "description": "Идентификатор сущности",
      "type": "object",
      "properties": {
        "mimeType": {
          "description": "Тип изображения (image или png)",
          "type": "string"
        },
        "imageData": {
          "format": "byte",
          "description": "Данные изображения",
          "type": "string"
        }
      }
    },
    "Card2CardTransfer": {
      "description": "Card2CardTransfer",
      "type": "object",
      "properties": {
        "amount": {
          "format": "double",
          "description": "Сумма перевода (от 0.01 до 99 999 999.99)\r\n<remarks>без комиссии</remarks>",
          "type": "number"
        },
        "commission": {
          "format": "double",
          "description": "Размер комиссии за перевод, вычисленный ранее сервисом, предоставленным Way4",
          "type": "number"
        },
        "cardNumber": { "description": "Номер карты", "type": "string" },
        "expMonth": {
          "format": "int32",
          "description": "Дата окончания срока действия (месяц)",
          "type": "integer"
        },
        "expYear": {
          "format": "int32",
          "description": "Дата окончания срока действия (год)",
          "type": "integer"
        },
        "cvc2": {
          "format": "int32",
          "description": "Дополнительный код безопасности",
          "type": "integer"
        },
        "receiverCardNumber": {
          "description": "Номер карты получателя",
          "type": "string"
        }
      }
    },
    "Card2CardTariff": {
      "description": "",
      "type": "object",
      "properties": {
        "commissionSum": {
          "format": "double",
          "description": "Если null, то \"по тарифам банка\"",
          "type": "number"
        },
        "maxTransferSum": {
          "format": "double",
          "description": "",
          "type": "number"
        },
        "isFreeOfCharge": {
          "description": "Признак отсутствия комиссии",
          "type": "boolean"
        }
      }
    },
    "Card2CardClientTransfer": {
      "description": "Card2CardTransfer для авторизованного клиента",
      "type": "object",
      "properties": {
        "senderCardId": {
          "description": "Идентификатор карты отправителя. Если заполнен, поля CardNumber, ExpMonth, ExpYear игнорируются.",
          "type": "string"
        },
        "receiverCardId": {
          "description": "Идентификатор карты получателя. Если заполнен, поле ReceiverCardNumber игнорируется.",
          "type": "string"
        },
        "senderCardName": {
          "description": "Наименование карты отправителя",
          "type": "string"
        },
        "receiverCardName": {
          "description": "Наименование карты получателя",
          "type": "string"
        },
        "needSaveSenderCard": {
          "description": "Признак требования сохранить данные карты отправителя",
          "type": "boolean"
        },
        "needSaveReceiverCard": {
          "description": "Признак требования сохранить данные карты получателя",
          "type": "boolean"
        },
        "amount": {
          "format": "double",
          "description": "Сумма перевода (от 0.01 до 99 999 999.99)\r\n<remarks>без комиссии</remarks>",
          "type": "number"
        },
        "commission": {
          "format": "double",
          "description": "Размер комиссии за перевод, вычисленный ранее сервисом, предоставленным Way4",
          "type": "number"
        },
        "cardNumber": { "description": "Номер карты", "type": "string" },
        "expMonth": {
          "format": "int32",
          "description": "Дата окончания срока действия (месяц)",
          "type": "integer"
        },
        "expYear": {
          "format": "int32",
          "description": "Дата окончания срока действия (год)",
          "type": "integer"
        },
        "cvc2": {
          "format": "int32",
          "description": "Дополнительный код безопасности",
          "type": "integer"
        },
        "receiverCardNumber": {
          "description": "Номер карты получателя",
          "type": "string"
        }
      }
    },
    "CardTransferFee": {
      "description": "",
      "type": "object",
      "properties": {
        "commission": {
          "format": "double",
          "description": "",
          "type": "number"
        },
        "maxTransferSum": {
          "format": "double",
          "description": "",
          "type": "number"
        },
        "totalLimit": {
          "format": "double",
          "description": "",
          "type": "number"
        },
        "usedLimit": {
          "format": "double",
          "description": "",
          "type": "number"
        },
        "availableLimit": {
          "format": "double",
          "description": "",
          "type": "number"
        },
        "comissionText": { "description": "", "type": "string" }
      }
    },
    "LiteCardsData": {
      "description": "Класс, содержащий данные о картах для карточной страницы",
      "type": "object",
      "properties": {
        "cardAccounts": {
          "description": "Список карточных счетов",
          "type": "array",
          "items": { "$ref": "#/definitions/LiteCardAccount" }
        },
        "cardApplications": {
          "description": "Список заказов карт",
          "type": "array",
          "items": { "$ref": "#/definitions/CardApplication" }
        },
        "cards": {
          "description": "Список карт на 3-е лицо (у них нет cardAccount)",
          "type": "array",
          "items": { "$ref": "#/definitions/LiteCard" }
        },
        "isProduceAddVirtualMirCardAvailable": {
          "description": "Доступен выпуск дополнительной виртуальной карты Мир",
          "type": "boolean"
        }
      }
    },
    "LiteCardAccount": {
      "description": "Карточный счет. Упрощенный вариант. Структура для метода API",
      "type": "object",
      "properties": {
        "cardAccountId": {
          "format": "int64",
          "description": "Идентификатор карточного счёта во внешней системе",
          "type": "integer"
        },
        "status": {
          "format": "int32",
          "description": "Состояние (1 = NotReady , 2 = Active , 3 = Blocked , 4 = Closed )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "clientLabel": {
          "description": "Пользовательское наименование",
          "type": "string"
        },
        "name": { "description": "Наименование", "type": "string" },
        "availableBalance": {
          "format": "double",
          "description": "Доступный баланс",
          "type": "number"
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "programType": {
          "$ref": "#/definitions/ProgramType",
          "description": "Программа выпуска"
        },
        "openDate": {
          "format": "date-time",
          "description": "Дата открытия",
          "type": "string"
        },
        "closeDate": {
          "format": "date-time",
          "description": "Дата закрытия",
          "type": "string"
        },
        "mainCreditLimit": {
          "format": "double",
          "description": "Кредитный лимит в основной валюте",
          "type": "number"
        },
        "tarifNameIndex": {
          "format": "int32",
          "description": "Номер тарифа",
          "type": "integer"
        },
        "isLoyaltyPackageSelectionAvailable": {
          "description": "Доступен ли выбор пакета лояльности",
          "type": "boolean"
        },
        "cards": {
          "description": "Список дочерних карт",
          "type": "array",
          "items": { "$ref": "#/definitions/CardOfCardAccount" }
        },
        "entityIdentifier": {
          "$ref": "#/definitions/EntityIdentifier",
          "description": "Универсальный идентификатор сущности"
        }
      }
    },
    "LiteCard": {
      "description": "Карта. Упрощенный вариант",
      "type": "object",
      "properties": {
        "cardId": {
          "format": "int64",
          "description": "Идентификатор карты",
          "type": "integer"
        },
        "cardNumber": {
          "description": "Маскированный номер карты",
          "type": "string"
        },
        "state": {
          "format": "int32",
          "description": "Статус карты (1 = Closed , 2 = Blocked , 3 = Expired , 4 = ClientLocked , 5 = NotReady , 6 = BeforeIssueLocked , 7 = Wait45DayToClose , 255 = Active )",
          "enum": [1, 2, 3, 4, 5, 6, 7, 255],
          "type": "integer"
        },
        "isMadeWithoutPinCode": {
          "description": "Карта выпущена без ПИН-кода",
          "type": "boolean"
        },
        "pinCodeStatus": {
          "format": "int32",
          "description": "Статус установки ПИН кода (0 = NotAvailable , 1 = Ready , 2 = Processing , 3 = Completed )",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "smallImageSrc": {
          "description": "Uri пиктограммы \"рубашки\" карты",
          "type": "string"
        },
        "largeImageSrc": {
          "description": "Uri стандартного изображения \"рубашки\" карты",
          "type": "string"
        },
        "name": { "description": "Наименование карты", "type": "string" },
        "clientLabel": {
          "description": "Клиентское название карты",
          "type": "string"
        },
        "productionDate": {
          "format": "date-time",
          "description": "Дата изготовления",
          "type": "string"
        },
        "account": {
          "$ref": "#/definitions/CardAccountOfCard",
          "description": "Счет карты"
        },
        "isVirtual": { "description": "Карта виртуальная", "type": "boolean" },
        "isOwner": {
          "description": "Клиент является держателем данной карты",
          "type": "boolean"
        },
        "entityIdentifier": {
          "$ref": "#/definitions/EntityIdentifier",
          "description": "Универсальный идентификатор сущности"
        }
      }
    },
    "CardOfCardAccount": {
      "description": "Данные о карте в карточном счете",
      "type": "object",
      "properties": {
        "cardNumber": {
          "description": "Маскированный номер карты",
          "type": "string"
        },
        "smallImageSrc": {
          "description": "Uri пиктограммы \"рубашки\" карты",
          "type": "string"
        },
        "largeImageSrc": {
          "description": "Uri стандартного изображения \"рубашки\" карты",
          "type": "string"
        },
        "state": {
          "format": "int32",
          "description": "Статус карты (1 = Closed , 2 = Blocked , 3 = Expired , 4 = ClientLocked , 5 = NotReady , 6 = BeforeIssueLocked , 7 = Wait45DayToClose , 255 = Active )",
          "enum": [1, 2, 3, 4, 5, 6, 7, 255],
          "type": "integer"
        },
        "isMadeWithoutPinCode": {
          "description": "Карта выпущена без ПИН-кода",
          "type": "boolean"
        },
        "pinCodeStatus": {
          "format": "int32",
          "description": "Статус установки ПИН кода (0 = NotAvailable , 1 = Ready , 2 = Processing , 3 = Completed )",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "isOwner": {
          "description": "Клиент является держателем данной карты",
          "type": "boolean"
        },
        "isVirtual": { "description": "Карта виртуальная", "type": "boolean" },
        "isExtraCard": {
          "description": "Дополнительная карта",
          "type": "boolean"
        },
        "cardProduct": {
          "$ref": "#/definitions/CardProduct",
          "description": "Карточный продукт"
        },
        "isPriorityPass": {
          "description": "Карта PriorityPass",
          "type": "boolean"
        },
        "entityIdentifier": {
          "$ref": "#/definitions/EntityIdentifier",
          "description": "Универсальный идентификатор сущности"
        }
      }
    },
    "CardAccountOfCard": {
      "description": "Счет карты",
      "type": "object",
      "properties": {
        "cardAccountId": {
          "format": "int64",
          "description": "Идентификатор карточного счёта во внешней системе",
          "type": "integer"
        },
        "availableBalance": {
          "format": "double",
          "description": "Доступный баланс",
          "type": "number"
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "entityIdentifier": {
          "$ref": "#/definitions/EntityIdentifier",
          "description": "Универсальный идентификатор сущности"
        }
      }
    },
    "CardStatement": {
      "description": "Выписка по карте",
      "type": "object",
      "properties": {
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "incomingBalance": {
          "format": "double",
          "description": "Входящий остаток",
          "type": "number"
        },
        "creditTurn": {
          "format": "double",
          "description": "Суммарный приход",
          "type": "number"
        },
        "debitTurn": {
          "format": "double",
          "description": "Суммарный расход",
          "type": "number"
        },
        "outcomingBalance": {
          "format": "double",
          "description": "Исходящий остаток",
          "type": "number"
        },
        "holdDebit": {
          "format": "double",
          "description": "Сумма заблокированных средств",
          "type": "number"
        },
        "transactions": {
          "description": "Список проводок",
          "type": "array",
          "items": { "$ref": "#/definitions/CardTransaction" }
        },
        "totalTransactionCount": {
          "format": "int32",
          "description": "Общее число проводок",
          "type": "integer"
        },
        "sortDirection": {
          "format": "int32",
          "description": "Направление сортировки выписки (по убыванию или возрастанию даты) (1 = Ascending , 2 = Descending )",
          "enum": [1, 2],
          "type": "integer"
        }
      }
    },
    "CardTransaction": {
      "description": "Транзакции по карте",
      "type": "object",
      "properties": {
        "cardId": {
          "format": "int64",
          "description": "Идентификатор карты",
          "type": "integer"
        },
        "cardSum": {
          "format": "double",
          "description": "Сумма по карте",
          "type": "number"
        },
        "cardCommissionSum": {
          "format": "double",
          "description": "Комиссия по карте",
          "type": "number"
        },
        "cardNumber": { "description": "Номер карты", "type": "string" },
        "cardCurrency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта карты"
        },
        "mcc": { "description": "Код торговой категории", "type": "string" },
        "mccImageSrc": {
          "description": "Ссылка на картинку кода торговой категории",
          "type": "string"
        },
        "country": { "description": "Страна", "type": "string" },
        "city": { "description": "Город", "type": "string" },
        "tradeEnterpriseName": {
          "description": "Наименование торгово-сервисного предприятия (ТСП)",
          "type": "string"
        },
        "authCode": { "description": "Код авторизации", "type": "string" },
        "transactionTypeId": {
          "format": "int32",
          "description": "Идентификатор типа транзакции",
          "type": "integer"
        },
        "transactionTypeName": {
          "description": "Наименование типа транзакции",
          "type": "string"
        },
        "isToken": {
          "description": "Операция совершена по токену или нет",
          "type": "boolean"
        },
        "accountId": {
          "format": "int64",
          "description": "Идентификатор контракта карты",
          "type": "integer"
        },
        "valueDate": {
          "format": "date-time",
          "description": "Дата валютирования",
          "type": "string"
        },
        "transactionDate": {
          "format": "date-time",
          "description": "Дата проводки",
          "type": "string"
        },
        "ground": { "description": "Основание (назначение)", "type": "string" },
        "transactionSum": {
          "format": "double",
          "description": "Сумма транзакции",
          "type": "number"
        },
        "transactionCurrency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "request": {
          "$ref": "#/definitions/Request",
          "description": "Поручение"
        },
        "isProcessed": {
          "description": "Завершенная транзакция",
          "type": "boolean"
        },
        "title": {
          "description": "Наименование операции на основе транзакции для отображения в разделе истории в МБ и ИБ",
          "type": "string"
        }
      }
    },
    "TransaeroCardStatement": {
      "description": "Выписка начисления баллов по карте Трансаэро",
      "type": "object",
      "properties": {
        "transaeroNumber": { "description": "", "type": "string" },
        "points": {
          "format": "int64",
          "description": "Число баллов",
          "type": "integer"
        },
        "specialPoints": {
          "format": "int64",
          "description": "Число специальных баллов",
          "type": "integer"
        },
        "totalSum": {
          "format": "double",
          "description": "Сумма операций по карте, по которым начисляются баллы",
          "type": "number"
        },
        "specialTotalSum": {
          "format": "double",
          "description": "Сумма операций по карте, по которым начисляются специальные баллы",
          "type": "number"
        },
        "transactions": {
          "description": "Детализация транзакций",
          "type": "array",
          "items": { "$ref": "#/definitions/TransaeroCardTransaction" }
        }
      }
    },
    "TransaeroCardTransaction": {
      "description": "Транзакция по карте Трансаэро с начислением баллов",
      "type": "object",
      "properties": {
        "points": {
          "format": "int64",
          "description": "Число баллов, начисленных по транзакции",
          "type": "integer"
        },
        "cardId": {
          "format": "int64",
          "description": "Идентификатор карты",
          "type": "integer"
        },
        "cardSum": {
          "format": "double",
          "description": "Сумма по карте",
          "type": "number"
        },
        "cardCommissionSum": {
          "format": "double",
          "description": "Комиссия по карте",
          "type": "number"
        },
        "cardNumber": { "description": "Номер карты", "type": "string" },
        "cardCurrency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта карты"
        },
        "mcc": { "description": "Код торговой категории", "type": "string" },
        "mccImageSrc": {
          "description": "Ссылка на картинку кода торговой категории",
          "type": "string"
        },
        "country": { "description": "Страна", "type": "string" },
        "city": { "description": "Город", "type": "string" },
        "tradeEnterpriseName": {
          "description": "Наименование торгово-сервисного предприятия (ТСП)",
          "type": "string"
        },
        "authCode": { "description": "Код авторизации", "type": "string" },
        "transactionTypeId": {
          "format": "int32",
          "description": "Идентификатор типа транзакции",
          "type": "integer"
        },
        "transactionTypeName": {
          "description": "Наименование типа транзакции",
          "type": "string"
        },
        "isToken": {
          "description": "Операция совершена по токену или нет",
          "type": "boolean"
        },
        "accountId": {
          "format": "int64",
          "description": "Идентификатор контракта карты",
          "type": "integer"
        },
        "valueDate": {
          "format": "date-time",
          "description": "Дата валютирования",
          "type": "string"
        },
        "transactionDate": {
          "format": "date-time",
          "description": "Дата проводки",
          "type": "string"
        },
        "ground": { "description": "Основание (назначение)", "type": "string" },
        "transactionSum": {
          "format": "double",
          "description": "Сумма транзакции",
          "type": "number"
        },
        "transactionCurrency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "request": {
          "$ref": "#/definitions/Request",
          "description": "Поручение"
        },
        "isProcessed": {
          "description": "Завершенная транзакция",
          "type": "boolean"
        },
        "title": {
          "description": "Наименование операции на основе транзакции для отображения в разделе истории в МБ и ИБ",
          "type": "string"
        }
      }
    },
    "ChangeCardClientLabelParams": {
      "description": "Параметры изменения наименования карты",
      "type": "object",
      "properties": {
        "isOwner": { "description": "Владелец карты", "type": "boolean" },
        "clientLabel": {
          "description": "Новое пользовательское наименование",
          "type": "string"
        }
      }
    },
    "CardImageInfo": {
      "description": "Картинка для карты клиента",
      "type": "object",
      "properties": {
        "cardMaskedNumber": {
          "description": "маскированный номер карты",
          "type": "string"
        },
        "smallImageSrc": {
          "description": "ссылка на маленькую картинку",
          "type": "string"
        },
        "largeImageSrc": {
          "description": "ссылка на большую картинку",
          "type": "string"
        },
        "isActive": { "description": "активна ли карта", "type": "boolean" }
      }
    },
    "CardsData": {
      "description": "",
      "type": "object",
      "properties": {
        "cardAccounts": {
          "description": "Список карточных счетов",
          "type": "array",
          "items": { "$ref": "#/definitions/CardAccount" }
        },
        "cardApplications": {
          "description": "Список заказов карт",
          "type": "array",
          "items": { "$ref": "#/definitions/CardApplication" }
        },
        "cards": {
          "description": "Список карт",
          "type": "array",
          "items": { "$ref": "#/definitions/Card" }
        },
        "isProduceAddVirtualMirCardAvailable": {
          "description": "Доступен выпуск дополнительной виртуальной карты Мир",
          "type": "boolean"
        }
      }
    },
    "CardLimit": {
      "description": "",
      "type": "object",
      "properties": {
        "clientCardLimitId": {
          "format": "int64",
          "description": "Идентификатор",
          "type": "integer"
        },
        "periodType": {
          "format": "int32",
          "description": "Тип периода лимита (1 = Daily , 2 = Monthly )",
          "enum": [1, 2],
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": "Тип операций (наличный/безналичный) (1 = Cash , 2 = InternetBank , 3 = Internet , 4 = Overall )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "sum": {
          "format": "double",
          "description": "Сумма лимита",
          "type": "number"
        },
        "usedSum": {
          "format": "double",
          "description": "Сумма израсходованных средств",
          "type": "number"
        }
      }
    },
    "CardLimitParams": {
      "description": "Параметры установки/удаления клиентских лимитов",
      "type": "object",
      "properties": {
        "cardLimitPeriodType": {
          "format": "int32",
          "description": "Тип периода лимита (1 = Daily , 2 = Monthly )",
          "enum": [1, 2],
          "type": "integer"
        },
        "cardLimitType": {
          "format": "int32",
          "description": "Тип операций (1 = Cash , 2 = InternetBank , 3 = Internet , 4 = Overall )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        }
      }
    },
    "CardApplePayAddWalletRequestParams": {
      "description": "Параметры запроса для подключения карты к Apple Pay",
      "type": "object",
      "properties": {
        "certificates": {
          "description": "сертификаты с устройства",
          "type": "array",
          "items": { "type": "string" }
        },
        "nOnce": { "description": "nOnce", "type": "string" },
        "nOnceSignature": { "description": "nOnceSignature", "type": "string" }
      }
    },
    "FlagmanCashbackCategoriesResult": {
      "description": "Наличие у клиента категорий кэшбэка Флагман",
      "type": "object",
      "properties": {
        "flagmanCardExists": {
          "description": "Есть ли карта Флагман",
          "type": "boolean"
        },
        "categories": {
          "description": "Список действующих категорий кэшбэка",
          "type": "array",
          "items": { "$ref": "#/definitions/FlagmanCashbackCategory" }
        },
        "contractIds": {
          "description": "Список действующих карточных счетов Way4",
          "type": "array",
          "items": { "format": "int64", "type": "integer" }
        },
        "nextPeriodCashbackCategoryStatus": {
          "format": "int32",
          "description": "Доступность выбора категорий на следующий период.\r\nПризнак со следующими значениями:\r\n0 = дата выбора категорий на следующий период не наступила, выбор недоступен;\r\n1 = категории на следующий период не выбраны, выбор доступен;\r\n2 = категории на следующий период выбраны, выбор недоступен. (1 = ChoiceNotAvailableDueEarlyDate , 2 = ChoiceAvailabeForNextPeriod , 3 = ChoiceNotAvailableDueAlreadyChosen , 4 = ChoiceAvailabeForCurrentPeriod )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "categoriesForNextPeriod": {
          "description": "Категории, выбранные на следующий период.\r\nРавен null, если признак NextPeriodCashbackCategoryStatus имеет значения 0 или 1.",
          "type": "array",
          "items": { "$ref": "#/definitions/FlagmanCashbackCategory" }
        },
        "periodAhead": {
          "format": "int32",
          "description": "Определяет количество дней до окончания периода (квартала),\r\nкогда появляется возможность выбрать категории на следующий период.",
          "type": "integer"
        }
      }
    },
    "FlagmanCashbackCategory": {
      "description": "Категория Флагман кешбека",
      "type": "object",
      "properties": {
        "cashBackCategoryId": {
          "format": "int32",
          "description": "Категория кешбека",
          "type": "integer"
        },
        "name": { "description": "Наименование", "type": "string" },
        "rate": {
          "format": "double",
          "description": "Ставка повышенного процента по категории, %",
          "type": "number"
        },
        "special": {
          "description": "Специальное предложение",
          "type": "boolean"
        },
        "startDate": {
          "format": "date-time",
          "description": "Дата начала действия",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "Дата окончания действия",
          "type": "string"
        },
        "endDateDescription": {
          "description": "Строковое описание даты окончания действия",
          "type": "string"
        },
        "overflowAmount": {
          "description": "Строковое описание суммы с которой начисляется кэшбэк",
          "type": "string"
        },
        "isDefaultBankCategory": {
          "description": "Является дефолтной банковской категорией",
          "type": "boolean"
        }
      }
    },
    "ConfidentialCardValuesInfo": {
      "type": "object",
      "properties": {
        "embossingName": { "type": "string" },
        "cardNumber": { "type": "string" },
        "expiryMonth": { "format": "int32", "type": "integer" },
        "expiryYear": { "format": "int32", "type": "integer" },
        "cvc2": { "type": "string" }
      }
    },
    "WalletTokenizationData": {
      "description": "Параметры токенизации карты в кошельке",
      "type": "object",
      "properties": {
        "walletCodeOpen": {
          "format": "int32",
          "description": "Тип кошелька (1 = ApplePay , 2 = GooglePay , 3 = SamsungPay )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "paymentCompany": {
          "format": "int32",
          "description": "Платежная система (0 = Mastercard , 1 = Visa , 2 = PriorityPass , 3 = Mir , 4 = UnionPayInternational )",
          "enum": [0, 1, 2, 3, 4],
          "type": "integer"
        },
        "certs": {
          "description": "X509Certificate",
          "type": "array",
          "items": { "type": "string" }
        },
        "nOnce": { "description": "NOnce", "type": "string" },
        "nOnceSignature": { "description": "NOnceSignature", "type": "string" }
      }
    },
    "LoyaltyPackagesData": {
      "description": "Контейнер для хранения подключенных пакетов лояльности клиента",
      "type": "object",
      "properties": {
        "isMemberOfLoyaltyProgram": {
          "description": "Признак, является ли клиент участником бонусной программы. Если программа не доступна, то в ИБ выводится специальное сообщение о необходимости запустить операцию 0601\r\nВременно свойство с 07.2020 планируется от него избавиться, а шаги подключения к программе вшить в операцию 2441",
          "type": "boolean"
        },
        "bonusChangeConditions": {
          "description": "Условия изменения бонусов по продукту лояльности",
          "type": "string"
        },
        "bonusCalculationConditions": {
          "description": "Условия начисления бонусов по продукту лояльности",
          "type": "string"
        },
        "comment": {
          "description": "Описание продукта лояльности",
          "type": "string"
        },
        "packages": {
          "description": "Пакеты лояльности, отображаемые клиенту",
          "type": "array",
          "items": { "$ref": "#/definitions/LoyaltyPackage" }
        },
        "productType": {
          "format": "int32",
          "description": "Идентификатор продукта лояльности (1 = YourCashback , 2 = OrangePremiumClub , 3 = YourCashbackPlus , 4 = DoubleCachback , 5 = YourPlus , 6 = SalaryFlagman , 7 = Novatek , 8 = PsbEmployees , 9 = Cosmos , 10 = Roscosmos , 11 = StrongPeople , 12 = OrangePremiumClubNew , 13 = SalaryCashback , 14 = SalaryChoice , 15 = Cska , 16 = OrangePremiumClubCska )",
          "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],
          "type": "integer"
        }
      }
    },
    "LoyaltyPackage": {
      "description": "Пакет лояльности",
      "type": "object",
      "properties": {
        "packageId": {
          "format": "int32",
          "description": "Идентификатор пакета лояльности",
          "type": "integer"
        },
        "name": {
          "description": "Наименование пакета лояльности",
          "type": "string"
        },
        "commission": {
          "format": "double",
          "description": "Комиссия за подключение пакета",
          "type": "number"
        },
        "comment": {
          "description": "Комментарий к пакету лояльности, который отображается в UI",
          "type": "string"
        },
        "numberOfCategoriesToSelect": {
          "format": "int32",
          "description": "Количество категорий, которое необходимо выбрать клиенту. Для некоторых пакетов может не задаваться",
          "type": "integer"
        },
        "startDate": {
          "format": "date-time",
          "description": "Дата начала действия",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "Дата окончания действия",
          "type": "string"
        },
        "connectionStatus": {
          "format": "int32",
          "description": "Статус пакета лояльности (1 = ConnectedAndAvailableForConnection , 2 = ConnectedAndNotAvailableForConnection , 3 = ConnectedAndFuture , 4 = NotConnected , 5 = Protected )",
          "enum": [1, 2, 3, 4, 5],
          "type": "integer"
        },
        "loyaltyCategoriesGroups": {
          "description": "Группы категорий лояльности",
          "type": "array",
          "items": { "$ref": "#/definitions/LoyaltyCategoryGroup" }
        },
        "categories": {
          "description": "Список доступных для подключения категорий лояльности",
          "type": "array",
          "items": { "$ref": "#/definitions/LoyaltyCategory" }
        },
        "isAutoProlongation": {
          "description": "Доступна ли автоматическая пролонгация пакета",
          "type": "boolean"
        },
        "bonusCalculationConditions": {
          "description": "Текст условия начисления бонусов. Текст отображается клиентам в ИБ и МП",
          "type": "string"
        }
      }
    },
    "LoyaltyCategoryGroup": {
      "description": "Пакет лояльности",
      "type": "object",
      "properties": {
        "categoryGroupId": {
          "format": "int32",
          "description": "Идентификатор пакета лояльности",
          "type": "integer"
        },
        "name": {
          "description": "Навзание группы категорий лояльности",
          "type": "string"
        },
        "comment": {
          "description": "Комментарий к группе категорий лояльности, который отображается в UI",
          "type": "string"
        },
        "numberOfCategoriesToSelect": {
          "format": "int32",
          "description": "Количество категорий, которое необходимо выбрать клиенту. Для некоторых пакетов может не задаваться",
          "type": "integer"
        }
      }
    },
    "LoyaltyCategory": {
      "description": "Категория лояльности",
      "type": "object",
      "properties": {
        "categoryId": {
          "format": "int32",
          "description": "Идентификтор категории лояльности",
          "type": "integer"
        },
        "name": {
          "description": "Наименование категории лояльности",
          "type": "string"
        },
        "remunerationInterest": {
          "format": "double",
          "description": "Размер вознаграждения в процентах по операции за счет кредитных средств",
          "type": "number"
        },
        "iconCode": {
          "format": "int32",
          "description": "Код иконки. По этому коду на фронте подбирается необходимам для категории иконка",
          "type": "integer"
        },
        "isAutoConnect": {
          "description": "Подключать автоматически",
          "type": "boolean"
        },
        "loyaltyCategoryGroupId": {
          "format": "int32",
          "description": "Id группы категорий для группировки на фронте",
          "type": "integer"
        },
        "remunerationInterestDetails": {
          "description": "Детальная информация о ставке вознаграждения",
          "type": "array",
          "items": { "$ref": "#/definitions/RemunerationInterestDetail" }
        }
      }
    },
    "RemunerationInterestDetail": {
      "description": "Детальная информация о проценте вознаграждения",
      "type": "object",
      "properties": {
        "remunerationInterest": {
          "format": "double",
          "description": "Размер вознаграждения (в процентах)",
          "type": "number"
        },
        "amountFrom": {
          "format": "double",
          "description": "Сумма, начиная с которой начисляются проценты",
          "type": "number"
        },
        "amountTo": {
          "format": "double",
          "description": "Сумма, до которой начисляются проценты",
          "type": "number"
        }
      }
    },
    "ConnectLoyaltyPackageParams": {
      "description": "Параметры запроса для подключения нового пакета лояльности",
      "type": "object",
      "properties": {
        "packageId": {
          "format": "int32",
          "description": "Идентификатор пакета",
          "type": "integer"
        },
        "categoryIdList": {
          "description": "Список идентификаторов категорий",
          "type": "string"
        }
      }
    },
    "IndividualSalaryContract": {
      "description": "Договор индивидуального зарплатного проекта (ИЗП)",
      "type": "object",
      "properties": {
        "isUsed": {
          "description": "Используется договор ИЗП или нет (используется означает, что ДС поступают на счет)",
          "type": "boolean"
        },
        "isGracePeriod": {
          "description": "Договор ИЗП находится в льготном периоде или нет",
          "type": "boolean"
        },
        "freePeriodEndDate": {
          "format": "date-time",
          "description": "Дата окончания действия льготного периода",
          "type": "string"
        },
        "isAccountConnected": {
          "description": "Текущий счет подключен или нет",
          "type": "boolean"
        },
        "requestId": {
          "format": "int64",
          "description": "Номер поручения с помощью которого был подключен/изменен счет",
          "type": "integer"
        },
        "accountDetailsDocumentId": {
          "format": "int32",
          "description": "Идентификатор документа \"Заявление с реквизитами карты\"",
          "type": "integer"
        }
      }
    },
    "ClientLimits": {
      "description": "Лимиты клиента",
      "type": "object",
      "properties": {
        "dailyLimitSum": {
          "format": "double",
          "description": "Сумма установленного суточного клиентского лимита",
          "type": "number"
        },
        "monthlyLimitSum": {
          "format": "double",
          "description": "Сумма установленного месячного клиентского лимита",
          "type": "number"
        },
        "dailyUsedLimitSum": {
          "format": "double",
          "description": "Сумма израсходованного суточного клиентского лимита",
          "type": "number"
        },
        "monthlyUsedLimitSum": {
          "format": "double",
          "description": "Сумма израсходованного месячного клиентского лимита",
          "type": "number"
        },
        "freeTransfersLeft": {
          "format": "double",
          "description": "Сумма оставшихся бесплатных переводов в другой банк.",
          "type": "number"
        }
      }
    },
    "TransferContextForCommissionCalculation": {
      "description": "Контекст операции перевода для рассчета комиссии",
      "type": "object",
      "properties": {
        "sum": {
          "format": "double",
          "description": "Сумма перевода",
          "type": "number"
        },
        "requestID": {
          "format": "int64",
          "description": "Идентификатор поручения",
          "type": "integer"
        },
        "payerAccountNumber": {
          "description": "Номер счёта плательщика",
          "type": "string"
        },
        "receiverAccountNumber": {
          "description": "Номер счёта получателя",
          "type": "string"
        },
        "transferDirection": {
          "format": "int32",
          "description": "Направление перевода",
          "type": "integer"
        },
        "transferKind": {
          "format": "int32",
          "description": "Вид перевода",
          "type": "integer"
        },
        "paymentReceiverType": {
          "format": "int32",
          "description": "Кому",
          "type": "integer"
        }
      }
    },
    "OperationCommissionInfo": {
      "description": "Представление для передачи информации о комиссии по операции",
      "type": "object",
      "properties": {
        "rate": {
          "format": "double",
          "description": "Ставка Комиссии",
          "type": "number"
        },
        "value": {
          "format": "double",
          "description": "Значение комиссии",
          "type": "number"
        },
        "operationSum": {
          "format": "double",
          "description": "Сумма операции",
          "type": "number"
        },
        "totalSum": {
          "format": "double",
          "description": "Сумма с комиссией",
          "type": "number"
        },
        "minValue": {
          "format": "double",
          "description": "Минимальное значение комиссии",
          "type": "number"
        },
        "maxValue": {
          "format": "double",
          "description": "Максимальное значение комиссии",
          "type": "number"
        }
      }
    },
    "ConversionConfirmationData": {
      "description": "Подтверждение конверсии.",
      "type": "object",
      "properties": {
        "conversionRequestId": {
          "description": "Получает или устанавливает ID запроса конверсии.",
          "type": "string"
        },
        "conversionData": {
          "description": "Получает или устанавливает данные, необходимые для проведения конверсионной сделки.",
          "type": "string"
        }
      }
    },
    "Division": {
      "description": "Служба переписки",
      "type": "object",
      "properties": {
        "divisionId": {
          "format": "int32",
          "description": "Id службы",
          "type": "integer"
        },
        "name": {
          "description": "Клиентское наименование службы",
          "type": "string"
        },
        "description": {
          "description": "Дополнительное описание",
          "type": "string"
        },
        "orgUnitType": {
          "format": "int32",
          "description": "Уровень структурного подразделения, на котором задана служба (0 = Unknown , 1 = Bank , 2 = Branch , 4 = Office , 8 = Placement , 16 = BankGroup , 32 = Workplace , 64 = RegionalOffice )",
          "enum": [0, 1, 2, 4, 8, 16, 32, 64],
          "type": "integer"
        },
        "isLetterRatingAllowed": {
          "description": "Доступно ли выставление рейтинга клиентом при переписке со службой",
          "type": "boolean"
        },
        "letterRatingScale": {
          "format": "double",
          "description": "Шкала оценок сообщений для службы",
          "type": "number"
        },
        "isMessageWithoutRequestAllowed": {
          "description": "Могут ли создавать сообщения в адрес службы без поручения",
          "type": "boolean"
        },
        "isClientStartingMessageAllowed": {
          "description": "Разрешено ли клиенту инициировать переписку",
          "type": "boolean"
        },
        "answerRequirement": {
          "description": "Настройка обязательности/допустимости ответа на сообщение из банка",
          "type": "boolean"
        },
        "isDefault": {
          "description": "Является ли службой по умолчанию",
          "type": "boolean"
        },
        "confirmationWithAttachment": {
          "description": "Требуется ли подтверждение при отправке сообщения с аттачментом\r\n<remarks>Использовать или нет средства клиентского подтверждения (SMS-код, таблица разовых ключей)</remarks>",
          "type": "boolean"
        },
        "confirmationWithoutAttachment": {
          "description": "Требуется ли подтверждение при отправке сообщения без аттачмента\r\n<remarks>Использовать или нет средства клиентского подтверждения (SMS-код, таблица разовых ключей)</remarks>",
          "type": "boolean"
        }
      }
    },
    "RatingCriteria": {
      "description": "Критерий оценки",
      "type": "object",
      "properties": {
        "ratingCriteriaId": {
          "format": "int32",
          "description": "Id критерия оценки",
          "type": "integer"
        },
        "name": { "description": "Наименование критерия", "type": "string" },
        "text": { "description": "Текст для вывода", "type": "string" },
        "division": {
          "$ref": "#/definitions/Division",
          "description": "Служба, для которой заведены критерии оценки"
        }
      }
    },
    "LetterFilterParams": {
      "description": "Параметры для отбора списка писем",
      "type": "object",
      "properties": {
        "filterMode": {
          "format": "int32",
          "description": "Режим фильтрации (1 = LastLettersOfAllChains , 2 = ByRequest , 3 = ByLetter , 4 = ByKeyPhrase )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "requestId": {
          "format": "int64",
          "description": "ID поручения",
          "type": "integer"
        },
        "letterId": {
          "format": "int64",
          "description": "Письмо из цепочки",
          "type": "integer"
        },
        "keyPhrase": { "description": "Ключевая фраза", "type": "string" },
        "keyPhraseHighliteTagName": {
          "description": "Имя тега для подсветки",
          "type": "string"
        },
        "startDate": {
          "format": "date-time",
          "description": "Дата начала",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "Дата окончания",
          "type": "string"
        }
      }
    },
    "Letter": {
      "description": "Письмо системы переписки с банком",
      "type": "object",
      "properties": {
        "letterId": {
          "format": "int64",
          "description": "ID письма",
          "type": "integer"
        },
        "origin": {
          "format": "int32",
          "description": "Источник письма (0 = Unknown , 1 = Client , 2 = Bank )",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "parentLetter": {
          "$ref": "#/definitions/Letter",
          "description": "Письмо, на которое данное письмо написано в ответ"
        },
        "rootLetter": {
          "$ref": "#/definitions/Letter",
          "description": "Корневое письмо"
        },
        "status": {
          "format": "int32",
          "description": "Статус (0 = Editing , 1 = Deleted , 2 = WaitingVisa , 3 = Discarded , 4 = SecurityCheck , 5 = SecurityCheckFailed , 6 = SentWithRequest , 7 = Sent , 8 = Delivered , 9 = WaitingAnswer , 10 = Processing , 11 = Declined , 12 = InternalRequestSent , 13 = AnswerSent , 14 = AnswerReceived , 15 = Processed , 16 = ProcessedWithAnswer )",
          "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],
          "type": "integer"
        },
        "isProcessingRequired": {
          "description": "Требуется ли обработка",
          "type": "boolean"
        },
        "isNew": {
          "description": "Является ли письмо новым для клиента",
          "type": "boolean"
        },
        "request": {
          "$ref": "#/definitions/Request",
          "description": "Поручение, в рамках которого идет переписка"
        },
        "confirmationRequest": {
          "$ref": "#/definitions/Request",
          "description": "Поручение, подтверждающее отправку письма клиентом\r\n<remarks>заполняется на стороне сервера в случае, если отправка письма клиентом требует подтверждения. Понять - требуется подтверждение или нет - можно по возвращаемому результату метода SendLetter</remarks>"
        },
        "orgUnitContext": {
          "$ref": "#/definitions/OrgUnitContext",
          "description": "Подразделение"
        },
        "division": {
          "$ref": "#/definitions/Division",
          "description": "Служба"
        },
        "createDate": {
          "format": "date-time",
          "description": "Дата письма",
          "type": "string"
        },
        "title": { "description": "Тема письма", "type": "string" },
        "text": { "description": "Текст письма", "type": "string" },
        "attachments": {
          "description": "Вложения",
          "type": "array",
          "items": { "$ref": "#/definitions/LetterAttachment" }
        },
        "isRatingEnabled": {
          "description": "Признак доступности оценки для письма\r\n<remarks>к оценке клиентом доступны входящие письма (т.е. письма от банка)</remarks>",
          "type": "boolean"
        },
        "ratingScale": {
          "format": "double",
          "description": "Шкала оценок",
          "type": "number"
        },
        "averageRating": {
          "format": "double",
          "description": "Средняя оценка письма\r\n<remarks>заполняется в GetLetters, не заполняется в GetLetter</remarks>",
          "type": "number"
        },
        "ratings": {
          "description": "Рейтинги письма по критериям",
          "type": "array",
          "items": { "$ref": "#/definitions/LetterRating" }
        },
        "isAnswerPossible": {
          "description": "Возможен ли ответ на письмо из банка",
          "type": "boolean"
        }
      }
    },
    "OrgUnitContext": {
      "description": "Контекст организационной структуры",
      "type": "object",
      "properties": {
        "bankGroup": {
          "$ref": "#/definitions/BankGroup",
          "description": "Ограничение по банковской группе"
        },
        "bank": {
          "$ref": "#/definitions/Bank",
          "description": "Ограничение на уровне банка"
        },
        "branch": {
          "$ref": "#/definitions/Branch",
          "description": "Ограничение на уровне филиала"
        },
        "office": {
          "$ref": "#/definitions/Office",
          "description": "Ограничение на уровне офиса"
        }
      }
    },
    "LetterAttachment": {
      "description": "Вложения письма системы переписки",
      "type": "object",
      "properties": {
        "letterAttachmentId": {
          "format": "int32",
          "description": "ID вложения",
          "type": "integer"
        },
        "letter": {
          "$ref": "#/definitions/Letter",
          "description": "Письмо, к которому относится вложение"
        },
        "fileName": { "description": "Имя файла", "type": "string" },
        "fileSizeKbytes": {
          "format": "int32",
          "description": "Размер файла в килобайтах",
          "type": "integer"
        },
        "data": {
          "description": "Attachemnt binary data in base64 format",
          "type": "string"
        },
        "hashCodeStr": {
          "description": "Литеральное представление хэш-кода двичного изображения\r\n<remarks>используется для отображения при создании или просмотре изображения. В случае необходимости подтверждения отправки клиент подписывает именно этот хэш</remarks>",
          "type": "string"
        }
      }
    },
    "LetterRating": {
      "description": "Рейтинг письма",
      "type": "object",
      "properties": {
        "letter": {
          "$ref": "#/definitions/Letter",
          "description": "Письмо, по которому выставляется рейтинг"
        },
        "criteria": {
          "$ref": "#/definitions/RatingCriteria",
          "description": "Критерий рейтингования"
        },
        "rating": {
          "format": "double",
          "description": "Рейтинг",
          "type": "number"
        },
        "canBeChanged": {
          "description": "Может ли быть изменен",
          "type": "boolean"
        }
      }
    },
    "InitializeNewLetterParams": {
      "description": "InitializeNewLetterParams",
      "type": "object",
      "properties": {
        "parentLetterId": {
          "format": "int64",
          "description": "ParentLetterId",
          "type": "integer"
        },
        "requestId": {
          "format": "int64",
          "description": "RequestId",
          "type": "integer"
        }
      }
    },
    "SendLetterResult": {
      "description": "Результат отправки письма",
      "type": "object",
      "properties": {
        "letterId": {
          "format": "int64",
          "description": "ID отправленного письма",
          "type": "integer"
        },
        "scenarioResult": {
          "$ref": "#/definitions/ScenarioResult",
          "description": "Результат работы сценария регистрации поручения"
        }
      }
    },
    "LetterRatingParams": {
      "description": "Параметры рейтингования для письма",
      "type": "object",
      "properties": {
        "letter": { "$ref": "#/definitions/Letter", "description": "Письмо" },
        "letterRating": {
          "$ref": "#/definitions/LetterRating",
          "description": "Рейтинг"
        }
      }
    },
    "RoubleCurrencyRate": {
      "description": "Курс валюты к рублю",
      "type": "object",
      "properties": {
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "multiplier": {
          "format": "double",
          "description": "Множитель",
          "type": "number"
        },
        "date": {
          "format": "date-time",
          "description": "Дата курса (может быть со временем)",
          "type": "string"
        },
        "centralBankRate": {
          "format": "double",
          "description": "Курс ЦБ",
          "type": "number"
        },
        "centralBankRateTrend": {
          "format": "int32",
          "description": "Тренд курса ЦБ (0 = None , 1 = Up , 2 = Down )",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "sell": {
          "format": "double",
          "description": "Курс продажи (коммерческий)",
          "type": "number"
        },
        "buy": {
          "format": "double",
          "description": "Курс покупки (коммерческий)",
          "type": "number"
        }
      }
    },
    "DepositContract": {
      "description": "Информация по депозиту",
      "type": "object",
      "properties": {
        "lengthDays": {
          "format": "int32",
          "description": "Продолжительность вклада (в днях)",
          "type": "integer"
        },
        "lengthMonths": {
          "format": "int32",
          "description": "Продолжительность вклада (в месяцах)",
          "type": "integer"
        },
        "lengthDescription": {
          "description": "Строковое представление продолжительности вклада",
          "type": "string"
        },
        "restProlongationsCount": {
          "format": "int32",
          "description": "Оставшееся количество пролонгаций.\r\nИспользуется для вкладов, у которых в договрах явно огрничено количество пролонгаций по ним.",
          "type": "integer"
        },
        "depositClosureType": {
          "format": "int32",
          "description": "Тип закрытия (1 = Planned , 2 = EarlyClosure )",
          "enum": [1, 2],
          "type": "integer"
        },
        "isWithProlongation": {
          "description": "Автоматическая пролонгация (false - отсутствует)",
          "type": "boolean"
        },
        "isWithReplenishment": {
          "description": "Является пополняемым",
          "type": "boolean"
        },
        "isWithSubtraction": {
          "description": "Есть возможность частичного списания",
          "type": "boolean"
        },
        "isWithSetOfMinBalance": {
          "description": "Есть возможность задания неснижаемого остатка при пролонгации",
          "type": "boolean"
        },
        "isMultiCurrency": {
          "description": "Мультивалютный вклад",
          "type": "boolean"
        },
        "lastIncarnationNumber": {
          "format": "int32",
          "description": "Номер последней пролонгации",
          "type": "integer"
        },
        "incarnations": {
          "description": "Последняя (активная) пролонгация срочного вклада",
          "type": "array",
          "items": { "$ref": "#/definitions/ContractIncarnation" }
        },
        "capitalPeriodType": {
          "format": "int32",
          "description": "Период капитализации (для вкладов с капитализацией и периодической выплатой) (0 = Unknown , 1 = FixByPeriod , 2 = FixByIncarnationBeginDate , 3 = FixByYearBeginDate , 4 = InPercentPeriodEnding )",
          "enum": [0, 1, 2, 3, 4],
          "type": "integer"
        },
        "capitalPeriodDays": {
          "format": "int32",
          "description": "Период капитализации (в днях)",
          "type": "integer"
        },
        "capitalPeriodMonths": {
          "format": "int32",
          "description": "Период капитализации (в месяцах)",
          "type": "integer"
        },
        "isRemoteClosureAllowed": {
          "description": "Доступно ли закрытие депозита",
          "type": "boolean"
        },
        "allowedInterestPaymentTypes": {
          "format": "int32",
          "description": "Допустимые типы выплаты процентов (берется с бренда) (1 = DepositClosure , 2 = Periodical , 4 = Capitalization , 8 = InTheBeginning , 16 = DepositClosureCapitalization , 31 = All )",
          "enum": [1, 2, 4, 8, 16, 31],
          "type": "integer"
        },
        "isSubtractionAllowed": {
          "description": "Разрешено списание",
          "type": "boolean"
        },
        "estimatedIncomeHint": {
          "description": "Подсказка по ожидаемому доходу",
          "type": "string"
        },
        "contractId": {
          "format": "int32",
          "description": "Идентификатор контракта",
          "type": "integer"
        },
        "brand": {
          "$ref": "#/definitions/BrandBase",
          "description": "Product brand"
        },
        "clientLabel": {
          "description": "Наименование от клиента",
          "type": "string"
        },
        "request": {
          "$ref": "#/definitions/Request",
          "description": "Поручение на открытие"
        },
        "closeRequest": {
          "$ref": "#/definitions/Request",
          "description": "Поручение на закрытие"
        },
        "office": {
          "$ref": "#/definitions/Office",
          "description": "Доп. офис банка"
        },
        "number": { "description": "Номер контракта", "type": "string" },
        "name": { "description": "Наименование договора", "type": "string" },
        "previousName": {
          "description": "Наименование договора до миграции",
          "type": "string"
        },
        "description": { "description": "Описание", "type": "string" },
        "beginDate": {
          "format": "date-time",
          "description": "Дата открытия",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "description": "Состояние (1 = NotReady , 2 = Active , 3 = Blocked , 4 = Closed )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "closeDate": {
          "format": "date-time",
          "description": "Дата закрытия",
          "type": "string"
        },
        "entityIdentifier": {
          "$ref": "#/definitions/EntityIdentifier",
          "description": ""
        }
      }
    },
    "ContractIncarnation": {
      "description": "Информация по пролонгации срочного вклада",
      "type": "object",
      "properties": {
        "incarnationNumber": {
          "format": "int32",
          "description": "Номер пролонгации",
          "type": "integer"
        },
        "request": {
          "$ref": "#/definitions/Request",
          "description": "Поручение на пролонгацию контракта"
        },
        "beginDate": {
          "format": "date-time",
          "description": "Дата открытия",
          "type": "string"
        },
        "planningEndDate": {
          "format": "date-time",
          "description": "Планируемая дата закрытия (без учета переноса выходных)",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "Планируемая дата закрытия  (с учетом переноса выходных)",
          "type": "string"
        },
        "lastReplenishmentDate": {
          "format": "date-time",
          "description": "Последняя допустимая дата пополнения (для пополняемых вкладов)",
          "type": "string"
        },
        "interestPaymentType": {
          "format": "int32",
          "description": "Тип выплаты процентов (может быть переопределен на уровне детали инкарнации) (1 = DepositClosure , 2 = Periodical , 3 = Capitalization , 4 = InTheBeginning , 5 = DepositClosureCapitalization )",
          "enum": [1, 2, 3, 4, 5],
          "type": "integer"
        },
        "contractDetails": {
          "description": "Детализация по контаркту",
          "type": "array",
          "items": { "$ref": "#/definitions/ContractDetail" }
        },
        "aggregateFrozenAmount": {
          "format": "double",
          "description": "Агрегированный неснижаемый остаток (задается для ограниченного количества вкладов)",
          "type": "number"
        }
      }
    },
    "ContractDetail": {
      "description": "Информация по детали депозитного контракта",
      "type": "object",
      "properties": {
        "contractDetailId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "clientAccount": {
          "$ref": "#/definitions/Account",
          "description": "Депозитный счет"
        },
        "mainSumAccount": {
          "$ref": "#/definitions/AccountBase",
          "description": "Счет возврата основной суммы"
        },
        "interestSumAccount": {
          "$ref": "#/definitions/AccountBase",
          "description": "Счет для выплаты процентов"
        },
        "interestPaymentType": {
          "format": "int32",
          "description": "Тип выплаты процентов (1 = DepositClosure , 2 = Periodical , 3 = Capitalization , 4 = InTheBeginning , 5 = DepositClosureCapitalization )",
          "enum": [1, 2, 3, 4, 5],
          "type": "integer"
        },
        "closeDate": {
          "format": "date-time",
          "description": "Дата закрытия (один из счетов пролонгации депозитного мультивалютного контракта может быть закрыт досрочно в рамках судебных решений)",
          "type": "string"
        },
        "closeRequest": {
          "$ref": "#/definitions/Request",
          "description": "Поручение на закрытие (один из счетов пролонгации депозитного мультивалютного контракта может быть закрыт досрочно в рамках судебных решений)"
        },
        "initialInstalmentSum": {
          "format": "double",
          "description": "Сумма первоначального взноса",
          "type": "number"
        },
        "replenishmentTotalSum": {
          "format": "double",
          "description": "Сумма пополнений",
          "type": "number"
        },
        "subtractionTotalSum": {
          "format": "double",
          "description": "Сумма списаний",
          "type": "number"
        },
        "conversionTotalSum": {
          "format": "double",
          "description": "Сумма конверсий",
          "type": "number"
        },
        "capitalizationTotalSum": {
          "format": "double",
          "description": "Сумма капитализации",
          "type": "number"
        },
        "totalSum": {
          "format": "double",
          "description": "Общая сумма вклада",
          "type": "number"
        },
        "estimatedInterestSum": {
          "format": "double",
          "description": "Ожидаемая сумма процентов",
          "type": "number"
        },
        "frozenAmount": {
          "format": "double",
          "description": "Неснижаемый остаток",
          "type": "number"
        },
        "frozenAmountInRoubles": {
          "format": "double",
          "description": "Неснижаемый остаток в рублевом эквиваленте",
          "type": "number"
        },
        "maxLimit": {
          "format": "double",
          "description": "Максимальный лимит суммы вклада",
          "type": "number"
        },
        "overLimitSumInterestRate": {
          "format": "double",
          "description": "Ставка на сумму сверх лимита",
          "type": "number"
        },
        "interestRate": {
          "format": "double",
          "description": "Основная процентная ставка - может быть не задана, если есть только условные ставки",
          "type": "number"
        },
        "conditionalInterestRates": {
          "description": "Условные процентные ставки",
          "type": "array",
          "items": { "$ref": "#/definitions/ConditionalInterestRate" }
        },
        "isReplenishmentAllowed": {
          "description": "Возможность пополнения вклада с учетом даты LatestDateForReplenishment",
          "type": "boolean"
        }
      }
    },
    "ConditionalInterestRate": {
      "description": "Условие для вкладов (используется для процентных ставок)",
      "type": "object",
      "properties": {
        "interestRate": {
          "format": "double",
          "description": "Процентная ставка",
          "type": "number"
        },
        "periodConditionType": {
          "format": "int32",
          "description": "Тип условия по сроку (1 = FromDepositOpening , 2 = FromDepositClosure , 3 = ActualPeriod )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "periodMinLengthDays": {
          "format": "int32",
          "description": "Мин. период в днях",
          "type": "integer"
        },
        "periodMaxLengthDays": {
          "format": "int32",
          "description": "Макс. период в днях",
          "type": "integer"
        },
        "periodConditionDescription": {
          "description": "Строковое описание условия по сроку",
          "type": "string"
        },
        "valueMin": {
          "format": "double",
          "description": "Минимальное значение для условия по значению",
          "type": "number"
        },
        "valueMax": {
          "format": "double",
          "description": "Максимальное значение для условия по значению",
          "type": "number"
        },
        "valueConditionType": {
          "format": "int32",
          "description": "Тип условия по значению (1 = AccountBalance )",
          "enum": [1],
          "type": "integer"
        },
        "valueConditionDescription": {
          "description": "Строковое описание условия по значению",
          "type": "string"
        }
      }
    },
    "DepositSummary": {
      "description": "Информация по вкладу",
      "type": "object",
      "properties": {
        "terms": {
          "description": "Условия по вкладу",
          "type": "array",
          "items": { "$ref": "#/definitions/DepositTerm" }
        },
        "currencies": {
          "description": "Валюты",
          "type": "array",
          "items": { "$ref": "#/definitions/Currency" }
        },
        "earlyClosureTerms": {
          "description": "Условия досрочного закрытия",
          "type": "array",
          "items": { "$ref": "#/definitions/DepositEarlyClosureTerm" }
        },
        "bonusTerms": {
          "$ref": "#/definitions/DepositBonusTerm",
          "description": "Условия надбавок"
        },
        "depositParams": {
          "description": "Параметры вклада",
          "type": "array",
          "items": { "$ref": "#/definitions/DepositParam" }
        },
        "interestPaymentTypes": {
          "$ref": "#/definitions/DepositPaymentTypes",
          "description": "Типы выплаты процентов"
        }
      }
    },
    "DepositTerm": {
      "description": "Условие вклада",
      "type": "object",
      "properties": {
        "minSum": {
          "format": "double",
          "description": "Мин сумма",
          "type": "number"
        },
        "maxSum": {
          "format": "double",
          "description": "Макс сумма",
          "type": "number"
        },
        "amountCurrencyID": {
          "format": "int32",
          "description": "Валюта",
          "type": "integer"
        },
        "interestRates": {
          "description": "Процентные ставки",
          "type": "array",
          "items": { "$ref": "#/definitions/DepositTermInterestRate" }
        }
      }
    },
    "DepositEarlyClosureTerm": {
      "description": "Условия досрочного закрытия вклада",
      "type": "object",
      "properties": {
        "conditionID": {
          "format": "int32",
          "description": "ID условия",
          "type": "integer"
        },
        "earlyClosureTerm": {
          "description": "Условие досрочного закрытия",
          "type": "string"
        },
        "earlyClosureTermValue": {
          "description": "Значение условия досрочного закрытия",
          "type": "string"
        },
        "currencyID": {
          "format": "int32",
          "description": "Валюта",
          "type": "integer"
        }
      }
    },
    "DepositBonusTerm": {
      "description": "Надбавки вклада",
      "type": "object",
      "properties": {
        "bonusTerm": { "description": "Срок надбавки", "type": "string" },
        "bonusRate": { "description": "Процент надбавки", "type": "string" },
        "bonusTermsDescription": {
          "description": "Описание надбавки",
          "type": "string"
        }
      }
    },
    "DepositParam": {
      "description": "Параметры вклада",
      "type": "object",
      "properties": {
        "name": { "description": "Наименование параметра", "type": "string" },
        "value": { "description": "Значение параметра", "type": "string" },
        "currencyID": {
          "format": "int32",
          "description": "Валюта",
          "type": "integer"
        }
      }
    },
    "DepositPaymentTypes": {
      "description": "Выплаты процентов",
      "type": "object",
      "properties": {
        "paymentTypes": {
          "description": "Выплата процентов",
          "type": "string"
        },
        "paymentTypesDescription": {
          "description": "Описание выплата процентов",
          "type": "string"
        }
      }
    },
    "DepositTermInterestRate": {
      "description": "Процентная ставка по вкладу",
      "type": "object",
      "properties": {
        "timelineScale": {
          "$ref": "#/definitions/TimelineScale",
          "description": "Временная шкала"
        },
        "interestRate": {
          "format": "double",
          "description": "Процентная ставка",
          "type": "number"
        }
      }
    },
    "TimelineScale": {
      "description": "Временной интервал брэнда",
      "type": "object",
      "properties": {
        "timelineScaleId": {
          "format": "int32",
          "description": "ID временного интервала брэнда",
          "type": "integer"
        },
        "brand": {
          "$ref": "#/definitions/DepositBrand",
          "description": "Брэнд"
        },
        "lengthDays": {
          "format": "int32",
          "description": "Срок вклада (дни)",
          "type": "integer"
        },
        "minLengthDays": {
          "format": "int32",
          "description": "Мин срок вклада (дни)",
          "type": "integer"
        },
        "maxLengthDays": {
          "format": "int32",
          "description": "Максимальный срок вклада (дни)",
          "type": "integer"
        }
      }
    },
    "DepositBrand": {
      "description": "Депозитный брэнд",
      "type": "object",
      "properties": {
        "isWithReplenishment": {
          "description": "С пополнением",
          "type": "boolean"
        },
        "isWithSubtraction": { "description": "Со снятием", "type": "boolean" },
        "isMultiCurrency": {
          "description": "Мультивалютный",
          "type": "boolean"
        },
        "allowedInterestPaymentTypes": {
          "format": "int32",
          "description": "Допустимые типы выплаты процентов (1 = DepositClosure , 2 = Periodical , 4 = Capitalization , 8 = InTheBeginning , 16 = DepositClosureCapitalization , 31 = All )",
          "enum": [1, 2, 4, 8, 16, 31],
          "type": "integer"
        },
        "brandId": {
          "format": "int32",
          "description": "Internal brand identifier",
          "type": "integer"
        },
        "name": { "description": "Brand name", "type": "string" },
        "juridicalName": {
          "description": "Brand name for documents",
          "type": "string"
        }
      }
    },
    "DepositEarlyClosureSums": {
      "description": "Расчетная сумма при досрочном закрытии вклада",
      "type": "object",
      "properties": {
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "depositSum": {
          "format": "double",
          "description": "Сумма вклада",
          "type": "number"
        },
        "interestSum": {
          "format": "double",
          "description": "Сумма процентов",
          "type": "number"
        },
        "depositAndInterestSum": {
          "format": "double",
          "description": "Сумма вклада + проценты",
          "type": "number"
        },
        "lostInterestSum": {
          "format": "double",
          "description": "Сумма теряемых процентов",
          "type": "number"
        }
      }
    },
    "DepositAccrualPlan": {
      "description": "Информация по истории накоплений депозитного контракта",
      "type": "object",
      "properties": {
        "actual": {
          "description": "История накоплений",
          "type": "array",
          "items": { "$ref": "#/definitions/AccountBalance" }
        },
        "virtual": {
          "description": "С учетом выплат %%",
          "type": "array",
          "items": { "$ref": "#/definitions/AccountBalance" }
        }
      }
    },
    "DepositCalculatorInitialData": {
      "description": "Данные для формирования калькулятора витрины по вкладам\r\n<remarks>Содержатся доступные периоды и валюты по депозитам</remarks>",
      "type": "object",
      "properties": {
        "currencies": {
          "description": "Доступные валюты\r\n<remarks>Калькулятор начинается с валюты. Дальнейший вид калькулятора определяется на основе выбранной валюты</remarks>",
          "type": "array",
          "items": { "$ref": "#/definitions/CurrencySlice" }
        }
      }
    },
    "CurrencySlice": {
      "description": "Валюта предложения по вкладам",
      "type": "object",
      "properties": {
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "periods": {
          "description": "Периоды по валютам",
          "type": "array",
          "items": { "$ref": "#/definitions/PeriodSlice" }
        }
      }
    },
    "PeriodSlice": {
      "description": "Элемент предложения (по сроку) по открытию вкладов в витрине вкладов",
      "type": "object",
      "properties": {
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "lengthDays": {
          "format": "int32",
          "description": "Срок вклада - дней",
          "type": "integer"
        },
        "minRate": {
          "format": "double",
          "description": "Минимальная возможная ставка",
          "type": "number"
        },
        "maxRate": {
          "format": "double",
          "description": "Максимально возможная ставка",
          "type": "number"
        }
      }
    },
    "DepositCalculatorParams": {
      "description": "Параметры калькулятора витрины вкладов\r\n<remarks>клиент заполняет значимые для него параметры и банк показывает имеющиеся варианты по открытию вклада</remarks>",
      "type": "object",
      "properties": {
        "calculatorInterestPaymentType": {
          "format": "int32",
          "description": "Тип выплаты процентов (0 = Undefined , 1 = DepositClosure , 2 = Periodical , 3 = Capitalization )",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "minLengthDays": {
          "format": "int32",
          "description": "Подбирать вклады с количеством дней не менее, чем",
          "type": "integer"
        },
        "maxLengthDays": {
          "format": "int32",
          "description": "Подбирать вклады с количеством дней не более, чем",
          "type": "integer"
        },
        "currencyId": {
          "format": "int32",
          "description": "Валюта, в которой планируется открыть вклад\r\n<remarks>В случае мультивалютных вкладов - это валюта, по которой производится отбор</remarks>",
          "type": "integer"
        },
        "initialInstalmentSum": {
          "format": "double",
          "description": "Планируемая сумма вклада к открытию",
          "type": "number"
        },
        "marketDetailed": {
          "description": "Детальная информация продуктового контента",
          "type": "boolean"
        },
        "includeMeta": {
          "description": "Пресет для деталей",
          "type": "boolean"
        },
        "preset": { "description": "Пресет для деталей", "type": "string" },
        "isWithReplenishment": {
          "description": "Брэнды, допускающие пополнение\r\n<remarks>\r\nЕсли значение установлено, то возвращаются брэнды, допускающие пополнение, иначе - любые\r\n</remarks>",
          "type": "boolean"
        },
        "isWithSubtraction": {
          "description": "Брэнды, допускающие снятие\r\n<remarks>\r\nЕсли значение установлено, то возвращаются брэнды, допускающие снятие, иначе - любые\r\n</remarks>",
          "type": "boolean"
        },
        "isMulticurrency": {
          "description": "Мультивалютные брэнды\r\n<remarks>\r\nЕсли значение установлено, то возвращаются мультивалютные брэнды, иначе - любые\r\n</remarks>",
          "type": "boolean"
        }
      }
    },
    "EstimatedOffer": {
      "description": "Просчитанное предложение по вкладам для витрины",
      "type": "object",
      "properties": {
        "initialInstalmentSum": {
          "format": "double",
          "description": "Планируемая сумма взноса",
          "type": "number"
        },
        "estimatedInterestSum": {
          "format": "double",
          "description": "Ожидаемая сумма %%",
          "type": "number"
        },
        "interestPaymentType": {
          "format": "int32",
          "description": "Тип выплаты процентов (1 = DepositClosure , 2 = Periodical , 3 = Capitalization , 4 = InTheBeginning , 5 = DepositClosureCapitalization )",
          "enum": [1, 2, 3, 4, 5],
          "type": "integer"
        },
        "marketProductItem": {
          "$ref": "#/definitions/MarketProductItem",
          "description": "Элемент продуктового контента"
        },
        "offerId": {
          "format": "int32",
          "description": "Уникальный идентификатор предложения",
          "type": "integer"
        },
        "term": {
          "$ref": "#/definitions/Term",
          "description": "Условие брэнда, на основе которого делается предложение"
        },
        "aggregateFrozenAmount": {
          "format": "double",
          "description": "Совокупная минимальная сумма вклада",
          "type": "number"
        },
        "description": { "description": "Доп. описание", "type": "string" },
        "additionalTerms": {
          "description": "Условия по доп. валютам вклада (для мультивалютных вкладов)",
          "type": "array",
          "items": { "$ref": "#/definitions/Term" }
        }
      }
    },
    "MarketProductItem": {
      "description": "Элемент продукта",
      "type": "object",
      "properties": {
        "code": { "description": "Код", "type": "string" },
        "type": { "description": "Код типа продукта", "type": "string" },
        "name": { "description": "Наименование", "type": "string" },
        "proposal": {
          "$ref": "#/definitions/MarketProductProposalItem",
          "description": "Предложение по продукту"
        },
        "attributes": {
          "description": "Атрибуты",
          "type": "array",
          "items": { "$ref": "#/definitions/MarketAttributeItem" }
        },
        "values": { "description": "Значения атрибутов", "type": "object" },
        "cardProducts": {
          "description": "Карточные продукты",
          "type": "array",
          "items": { "$ref": "#/definitions/CardProductRaw" }
        },
        "blocks": {
          "description": "Блоки атрибутов",
          "type": "array",
          "items": { "$ref": "#/definitions/MarketBlockItem" }
        }
      }
    },
    "Term": {
      "description": "Условие на открытие вклада (в разрезе валюты)",
      "type": "object",
      "properties": {
        "termId": {
          "format": "int32",
          "description": "Условие вклада по договору для открытия",
          "type": "integer"
        },
        "timelineScale": {
          "$ref": "#/definitions/TimelineScale",
          "description": "Временной интервал"
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "minSum": {
          "format": "double",
          "description": "Минимальная сумма вклада",
          "type": "number"
        },
        "maxSum": {
          "format": "double",
          "description": "Максимальная сумма вклада",
          "type": "number"
        },
        "frozenAmount": {
          "format": "double",
          "description": "Неснижаемый остаток",
          "type": "number"
        },
        "baseInterestRate": {
          "format": "double",
          "description": "Базвая процентная ставка",
          "type": "number"
        },
        "bonusInterestRateDelta": {
          "format": "double",
          "description": "Бонусная надбавка",
          "type": "number"
        },
        "actualInterestRate": {
          "format": "double",
          "description": "Фактическая ставка для клиента",
          "type": "number"
        }
      }
    },
    "MarketProductProposalItem": {
      "description": "Элемент предложение по продукту",
      "type": "object",
      "properties": {
        "proposalId": {
          "format": "int32",
          "description": "Идентификатор предложения",
          "type": "integer"
        },
        "decisions": {
          "description": "Список решений по продукту",
          "type": "array",
          "items": { "$ref": "#/definitions/MarketProductDecisionItem" }
        },
        "title": { "description": "Заголовок предложения", "type": "string" }
      }
    },
    "MarketAttributeItem": {
      "description": "Элемент атрибута продуктов",
      "type": "object",
      "properties": {
        "code": { "description": "Код", "type": "string" },
        "name": { "description": "Наименование", "type": "string" },
        "type": { "description": "Тип", "type": "string" },
        "isMultiple": { "description": "Множественное", "type": "boolean" },
        "attributes": {
          "description": "Подчинённые атрибуты (если есть)",
          "type": "array",
          "items": { "$ref": "#/definitions/MarketAttributeItem" }
        }
      }
    },
    "CardProductRaw": {
      "type": "object",
      "properties": {
        "id": { "format": "int32", "type": "integer" },
        "name": { "type": "string" },
        "paymentSystem": { "format": "int32", "type": "integer" },
        "currencies": {
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        }
      }
    },
    "MarketBlockItem": {
      "description": "Элемент блока продуктов",
      "type": "object",
      "properties": {
        "code": { "description": "Код", "type": "string" },
        "values": { "description": "Значения атрибутов", "type": "object" },
        "blocks": {
          "description": "Подчинённые блоки",
          "type": "array",
          "items": { "$ref": "#/definitions/MarketBlockItem" }
        }
      }
    },
    "MarketProductDecisionItem": {
      "description": "Элемент решения для продукта",
      "type": "object",
      "properties": {
        "description": { "description": "Описание решения", "type": "string" }
      }
    },
    "CalculatorOfferRequestData": {
      "description": "Параметры для запуска операции открытия срочного вклада из калькулятора",
      "type": "object",
      "properties": {
        "sum": { "format": "double", "description": "Сумма", "type": "number" },
        "interestPaymentType": {
          "format": "int32",
          "description": "Тип выплаты процентов (1 = DepositClosure , 2 = Periodical , 3 = Capitalization , 4 = InTheBeginning , 5 = DepositClosureCapitalization )",
          "enum": [1, 2, 3, 4, 5],
          "type": "integer"
        },
        "termId": {
          "format": "int32",
          "description": "Идентификатор условий вклада",
          "type": "integer"
        },
        "aggregateDepositFrozenAmount": {
          "format": "double",
          "description": "Совокупная минимальная сумма вклада",
          "type": "number"
        },
        "productCatalogIdentifier": {
          "description": "Идентификатор продукта.",
          "type": "string"
        }
      }
    },
    "DepositOffersFilter": {
      "description": "Фильтр предложений по депозитам",
      "type": "object",
      "properties": {
        "brandId": {
          "format": "int32",
          "description": "Бренд",
          "type": "integer"
        },
        "isWithCapitalization": {
          "description": "С капитализацией",
          "type": "boolean"
        },
        "isWithPeriodicalInterestPayments": {
          "description": "С периодической выплатой %%",
          "type": "boolean"
        },
        "currencyId": {
          "format": "int32",
          "description": "Валюта, в которой планируется открыть вклад\r\n<remarks>В случае мультивалютных вкладов - это валюта, по которой производится отбор</remarks>",
          "type": "integer"
        },
        "initialInstalmentSum": {
          "format": "double",
          "description": "Планируемая сумма вклада к открытию",
          "type": "number"
        },
        "marketDetailed": {
          "description": "Детальная информация продуктового контента",
          "type": "boolean"
        },
        "includeMeta": {
          "description": "Пресет для деталей",
          "type": "boolean"
        },
        "preset": { "description": "Пресет для деталей", "type": "string" },
        "isWithReplenishment": {
          "description": "Брэнды, допускающие пополнение\r\n<remarks>\r\nЕсли значение установлено, то возвращаются брэнды, допускающие пополнение, иначе - любые\r\n</remarks>",
          "type": "boolean"
        },
        "isWithSubtraction": {
          "description": "Брэнды, допускающие снятие\r\n<remarks>\r\nЕсли значение установлено, то возвращаются брэнды, допускающие снятие, иначе - любые\r\n</remarks>",
          "type": "boolean"
        },
        "isMulticurrency": {
          "description": "Мультивалютные брэнды\r\n<remarks>\r\nЕсли значение установлено, то возвращаются мультивалютные брэнды, иначе - любые\r\n</remarks>",
          "type": "boolean"
        }
      }
    },
    "SetShortCodeResponse": {
      "description": "short code setting respone",
      "type": "object",
      "properties": {
        "deviceSecurityCode": {
          "description": "код, который необходимо сохранить устройству",
          "type": "string"
        },
        "auth": {
          "$ref": "#/definitions/AuthRequest",
          "description": "параметры для двухфакторной аутентификации"
        },
        "clientIdentifier": {
          "description": "идентификатор, который  должен быть сохранен на устрйстве без шифрования и передаваться при логине",
          "type": "string"
        }
      }
    },
    "ConfirmShortCodeResult": {
      "description": "подтверждение установки кода. возвращаем соль",
      "type": "object",
      "properties": {
        "securityCodeSalt": {
          "description": "соль, с которой был зашифрован код",
          "type": "string"
        }
      }
    },
    "StartEsiaAuthParams": {
      "description": "Параметры для старта удаленной идентификации",
      "type": "object",
      "properties": {
        "isCipfUsageAgreed": {
          "description": "Получено согласие клиента на использование СКЗИ (CIPF, Cryptographic Information Protection Facility)",
          "type": "boolean"
        },
        "isPersonalDataProcessingAgreed": {
          "description": "Получено согласие клиента на обработку ПДн",
          "type": "boolean"
        },
        "isCreditBureauRequestingAgreed": {
          "description": "Получено согласие клиента на обращение в БКИ",
          "type": "boolean"
        }
      }
    },
    "KeyValueDto": {
      "description": "",
      "type": "object",
      "properties": {
        "key": { "description": "Ключ", "type": "string" },
        "value": { "description": "Значение", "type": "string" }
      }
    },
    "ReceivePersonalDataResult": {
      "description": "Результат получения ПДн",
      "type": "object",
      "properties": {
        "isWaiting": {
          "description": "true - требуется подождать и повторить запрос",
          "type": "boolean"
        },
        "scenarioResult": {
          "$ref": "#/definitions/ScenarioResult",
          "description": "Результат запуска операции подписания ДКО"
        }
      }
    },
    "EWalletAssociation": {
      "description": "Информация о привязке электронного кошелька",
      "type": "object",
      "properties": {
        "associationID": {
          "format": "uuid",
          "description": "ID привязки",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "number": {
          "description": "Номер электронного кошелька",
          "type": "string"
        },
        "accountDisplayNumber": {
          "description": "Номер счета для отображения в интерфейсе (например, для карт здесь будет сокращенный номер карты)",
          "type": "string"
        },
        "accountName": { "description": "Наименование счета", "type": "string" }
      }
    },
    "FeedResult": {
      "description": "search result",
      "type": "object",
      "properties": {
        "items": {
          "description": "items",
          "type": "array",
          "items": { "type": "object" }
        },
        "endOfFeed": {
          "description": "достигнут конец ленты",
          "type": "boolean"
        },
        "clientProducts": {
          "description": "список продуктов клиента. счета, карты и т.д.",
          "type": "array",
          "items": { "$ref": "#/definitions/ClientProducts" }
        }
      }
    },
    "ClientProducts": {
      "description": "список продуктов клиента",
      "type": "object",
      "properties": {
        "entityType": {
          "format": "int32",
          "description": "тип продукта: карта, счет, сохраненная карта, другое и т.д (0 = Other , 1 = Account , 2 = Card , 3 = StoredCard )",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "products": {
          "description": "продукты",
          "type": "array",
          "items": { "$ref": "#/definitions/ReferenceItem" }
        }
      }
    },
    "ReferenceItem": {
      "description": "продукт",
      "type": "object",
      "properties": {
        "id": { "format": "int64", "description": "ид", "type": "integer" },
        "name": { "description": "наименование", "type": "string" }
      }
    },
    "ForexClientInfo": {
      "description": "Информация о Форекс-клиенте.",
      "type": "object",
      "properties": {
        "agreementWasSigned": {
          "description": "Подписан ли договор в рамках операции 7100.",
          "type": "boolean"
        },
        "state": {
          "format": "int32",
          "description": "Статус Форекс-клиента. (1 = New , 2 = Pending , 3 = Active , 4 = Denied , 5 = Denounced )",
          "enum": [1, 2, 3, 4, 5],
          "type": "integer"
        },
        "contractNumber": {
          "description": "Номер заключенного договора Форекс-клиента.",
          "type": "string"
        },
        "message": { "description": "Сообщение от Форекса.", "type": "string" }
      }
    },
    "ZeroStepClientDataResponse": {
      "description": "Данные необходимые для заполнения первого шага(маркетплейс) в госуслугах",
      "type": "object",
      "properties": {
        "cardHolderFirstName": { "description": "Имя", "type": "string" },
        "cardHolderMiddleName": { "description": "Отчество", "type": "string" },
        "cardHolderLastName": { "description": "Фамилия", "type": "string" },
        "phone": { "description": "Телефон клиента", "type": "string" },
        "email": { "description": "Email", "type": "string" },
        "birthDate": { "description": "Дата рождения", "type": "string" },
        "russianFederationResident": {
          "description": "Принадлежность к Российскому гражданству",
          "type": "boolean"
        },
        "sex": { "description": "Пол клиента", "type": "string" },
        "russianEmployment": {
          "description": "Официальное трудоустройство",
          "type": "boolean"
        }
      }
    },
    "ClientAgreements": {
      "description": "Согласия, которые проставил клиент",
      "type": "object",
      "properties": {
        "personalDataProcessingAgreement": {
          "description": "Согласие на обработку персональных данных",
          "type": "boolean"
        },
        "promotionAgreement": {
          "description": "Согласие на обработку персональных данных",
          "type": "boolean"
        },
        "bkiRequestAgreement": {
          "description": "Согласие на запрос в БКИ",
          "type": "boolean"
        }
      }
    },
    "UnifiedHistoryFilterParams": {
      "description": "Параметры отбора общей истории",
      "type": "object",
      "properties": {
        "startDate": {
          "format": "date-time",
          "description": "Дата начала",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "Дата окончания",
          "type": "string"
        },
        "sumFrom": {
          "format": "double",
          "description": "Сумма с",
          "type": "number"
        },
        "sumTo": {
          "format": "double",
          "description": "Сумма по",
          "type": "number"
        },
        "operationsKind": {
          "format": "int32",
          "description": "Вид операции (0 = All , 1 = IncomeOnly , 2 = OutcomeOnly )",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "searchString": { "description": "Строка поиска", "type": "string" },
        "sortDirection": {
          "format": "int32",
          "description": "Направление сортировки (1 = Ascending , 2 = Descending )",
          "enum": [1, 2],
          "type": "integer"
        },
        "unifiedHistoryMode": {
          "format": "int32",
          "description": "Режим отображения элементов списка (0 = All , 1 = Requests , 2 = Transactions )",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "nativeId": {
          "format": "int64",
          "description": "Идентификатор счета",
          "type": "integer"
        },
        "nativeType": {
          "format": "int32",
          "description": "Тип счета (1 = CardAccount , 2 = Account , 3 = LoanContract )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "requestsMode": {
          "format": "int32",
          "description": "Режим отображения поручений (0 = All , 1 = Financial , 2 = NonFinancial )",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "transactionsMode": {
          "format": "int32",
          "description": "Режим отображения транзакций по карточным счетам и счетам пользователя (0 = All , 1 = CardsTransactions , 2 = CardsTransactionsWithoutRequests , 3 = AccountsTransactions , 4 = AccountsTransactionsWithoutRequests , 5 = AllWithLinkedRequests )",
          "enum": [0, 1, 2, 3, 4, 5],
          "type": "integer"
        },
        "operationsMode": {
          "format": "int32",
          "description": "Режим отображения операции (0 = AllRequestsAndTransactionsWithoutDuplicated , 1 = AllTransactionsAndRequestsWithoutDuplicated , 2 = AllRequestsAndTransactions , 3 = AllTransactionsAndNonFinancialRequests , 4 = AllTransactions )",
          "enum": [0, 1, 2, 3, 4],
          "type": "integer"
        }
      }
    },
    "PaginatedUnifiedHistory": {
      "description": "Постраничный список истории",
      "required": ["paginationMetaData", "items"],
      "type": "object",
      "properties": {
        "paginationMetaData": {
          "$ref": "#/definitions/PaginationMetaData",
          "description": "Методанные постраничного списка",
          "readOnly": true
        },
        "unifiedHistoryInfo": {
          "$ref": "#/definitions/UnifiedHistoryInfo",
          "description": "Информация по общей истории для вывода на экранах в мп и иб"
        },
        "items": {
          "description": "Данные (возвращается только определенная страница)",
          "type": "array",
          "items": { "$ref": "#/definitions/UnifiedHistoryItem" },
          "readOnly": true
        }
      }
    },
    "PaginationMetaData": {
      "description": "Методанные постраничного списка",
      "required": [
        "currentPage",
        "totalPages",
        "pageSize",
        "totalCount",
        "hasPrevious",
        "hasNext"
      ],
      "type": "object",
      "properties": {
        "currentPage": {
          "format": "int32",
          "description": "Текущая страница",
          "type": "integer"
        },
        "totalPages": {
          "format": "int32",
          "description": "Общее число страниц",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "description": "Размер страницы",
          "type": "integer"
        },
        "totalCount": {
          "format": "int32",
          "description": "Общее число записей",
          "type": "integer"
        },
        "hasPrevious": {
          "description": "Признак наличия предыдущей страницы",
          "type": "boolean",
          "readOnly": true
        },
        "hasNext": {
          "description": "Признак наличия следующей страницы",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "UnifiedHistoryInfo": {
      "description": "Информация по общей истории для вывода на экранах в мп и иб",
      "type": "object",
      "properties": {
        "creditDebitInfos": {
          "description": "Список информации по приходу / расходу транзакций общей истории в заданной валюте",
          "type": "array",
          "items": { "$ref": "#/definitions/CreditDebitInfo" }
        }
      }
    },
    "UnifiedHistoryItem": {
      "description": "Элемент списка общей истории",
      "required": ["itemType"],
      "type": "object",
      "properties": {
        "title": { "description": "Заголовок элемента", "type": "string" },
        "titleSearchExt": {
          "description": "Дополнительный текст заголовка, используется для поиска",
          "type": "string"
        },
        "operationTime": {
          "format": "date-time",
          "description": "Время выполнения операции",
          "type": "string"
        },
        "operationSum": {
          "format": "double",
          "description": "Сумма по операции",
          "type": "number"
        },
        "operationCurrencyId": {
          "format": "int32",
          "description": "Идентификатор валюты",
          "type": "integer"
        },
        "operationLinkedRequestId": {
          "format": "int64",
          "description": "Номер подлинкованного поручения, при наличии",
          "type": "integer"
        },
        "nativeId": {
          "format": "int64",
          "description": "Идентификатор счета/контракта, при наличии",
          "type": "integer"
        },
        "itemType": {
          "format": "int32",
          "description": "Тип элемента (1 = Request , 2 = CardTransaction , 3 = AccountTransaction )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "cardTransaction": {
          "$ref": "#/definitions/CardTransaction",
          "description": "Информация о транзакции карты, если тип элемента UnifiedHistoryItemType.CardTransaction"
        },
        "request": {
          "$ref": "#/definitions/Request",
          "description": "Информация о поручение, если тип элемента UnifiedHistoryItemType.Request"
        },
        "accountTransaction": {
          "$ref": "#/definitions/AccountTransaction",
          "description": "Информация о транзакции счета, если тип элемента UnifiedHistoryItemType.AccountTransaction"
        }
      }
    },
    "CreditDebitInfo": {
      "description": "Информация по приходу / расходу транзакций общей истории в заданной валюте",
      "required": ["creditTurn", "debitTurn"],
      "type": "object",
      "properties": {
        "creditTurn": {
          "format": "double",
          "description": "Суммарный приход",
          "type": "number"
        },
        "debitTurn": {
          "format": "double",
          "description": "Суммарный расход",
          "type": "number"
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        }
      }
    },
    "HistoryProductFilterItem": {
      "description": "Элемент фильтра продуктов истории",
      "required": [
        "nativeId",
        "nativeType",
        "productFilterItemType",
        "title",
        "availableBalance",
        "currencyIso"
      ],
      "type": "object",
      "properties": {
        "nativeId": {
          "format": "int64",
          "description": "Идентификатор счета",
          "type": "integer"
        },
        "nativeType": {
          "format": "int32",
          "description": "Тип счета (1 = CardAccount , 2 = Account , 3 = LoanContract )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "productFilterItemType": {
          "format": "int32",
          "description": "Тип продукта( для визуального отображения в списке) (1 = CardAccount , 2 = Account , 3 = LifeGoal , 4 = Deposit , 5 = Loan )",
          "enum": [1, 2, 3, 4, 5],
          "type": "integer"
        },
        "title": { "description": "Наименование", "type": "string" },
        "imageSrc": {
          "description": "Uri пиктограммы \"рубашки\" карты",
          "type": "string"
        },
        "availableBalance": {
          "format": "double",
          "description": "Доступный баланс",
          "type": "number"
        },
        "currencyIso": { "description": "Currency ISO name", "type": "string" }
      }
    },
    "NativeInfo": {
      "description": "Информация по счету/контракту",
      "required": ["nativeId", "nativeType", "name"],
      "type": "object",
      "properties": {
        "nativeId": {
          "format": "int64",
          "description": "Идентификатор счета/контракта",
          "type": "integer"
        },
        "nativeType": {
          "format": "int32",
          "description": "Тип счета/контракта (1 = CardAccount , 2 = Account , 3 = LoanContract )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "nativeNumber": {
          "description": "Номер счета/контракта",
          "type": "string"
        },
        "name": { "description": "Наименование", "type": "string" }
      }
    },
    "ImportedOperationsHistoryRequest": {
      "description": "Параметры запроса истории операций",
      "type": "object",
      "properties": {
        "valueDateSortDirection": {
          "format": "int32",
          "description": "Сортировка по дате совершения операции\r\n    1 - по возрастанию\r\n    2 - по убыванию (1 = Ascending , 2 = Descending )",
          "enum": [1, 2],
          "type": "integer"
        },
        "pageNumber": {
          "format": "int32",
          "description": "Номер страницы для загрузки",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "description": "Размер страницы",
          "type": "integer"
        },
        "dateEnd": {
          "format": "date-time",
          "description": "Интервал даты совершения операции (правая граница)",
          "type": "string"
        },
        "dateStart": {
          "format": "date-time",
          "description": "Интервал даты совершения операции (левая граница)",
          "type": "string"
        },
        "namePattern": {
          "description": "Наименование операции",
          "type": "string"
        },
        "sumFrom": {
          "format": "double",
          "description": "Сумма операции (левая граница)",
          "type": "number"
        },
        "sumTo": {
          "format": "double",
          "description": "Сумма операции (правая граница)",
          "type": "number"
        }
      }
    },
    "ImportedOperationsHistoryResponse": {
      "description": "Результат фильтрации истории операций",
      "type": "object",
      "properties": {
        "items": {
          "description": "История операций",
          "type": "array",
          "items": { "$ref": "#/definitions/ImportedOperation" }
        },
        "totalPagesCount": {
          "format": "int32",
          "description": "Общее количество страниц",
          "type": "integer"
        }
      }
    },
    "ImportedOperation": {
      "description": "Краткие сведения об импортированной операции",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "Идентификатор импортированной операции",
          "type": "integer"
        },
        "valueDate": {
          "format": "date-time",
          "description": "Дата совершения операции",
          "type": "string"
        },
        "name": { "description": "Наименование операции", "type": "string" },
        "code": { "description": "Код операции", "type": "string" },
        "sum": {
          "format": "double",
          "description": "Сумма операции",
          "type": "number"
        },
        "comission": {
          "format": "double",
          "description": "Комиссия за операцию",
          "type": "number"
        },
        "state": {
          "format": "int32",
          "description": "Результат операции (0 = New , 1 = Process , 2 = Success , 3 = Error )",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        }
      }
    },
    "ImportedOperationParam": {
      "description": "Параметры импортированной операции",
      "type": "object",
      "properties": {
        "name": { "description": "Наименование параметра", "type": "string" },
        "value": { "description": "Значение параметра", "type": "string" },
        "code": {
          "description": "Кодовое обозначение параметра",
          "type": "string"
        }
      }
    },
    "PaymentInsuranceContract": {
      "description": "Контракт страхования",
      "type": "object",
      "properties": {
        "insuranceContractId": {
          "format": "int32",
          "description": "Идентификатор контракта",
          "type": "integer"
        },
        "requestID": {
          "format": "int64",
          "description": "Идентификатор поручения, в котором был создан контракт",
          "type": "integer"
        },
        "insuranceType": {
          "description": "Тип страхования (ИСЖ, НСЖ,...)",
          "type": "string"
        },
        "insuranceTypeFullName": {
          "description": "Полное наименование тип страхования (ИСЖ, НСЖ,...)",
          "type": "string"
        },
        "insuranceSegment": {
          "description": "Сегмент (Mass, OPC,..)",
          "type": "string"
        },
        "number": { "description": "Номер контракта", "type": "string" },
        "insuranceCompany": {
          "description": "Страховая компания",
          "type": "string"
        },
        "insuranceProduct": {
          "description": "Cтраховой продукт",
          "type": "string"
        },
        "signingDate": {
          "format": "date-time",
          "description": "Дата заключения договора",
          "type": "string"
        },
        "paymentSum": {
          "format": "double",
          "description": "Сумма взноса",
          "type": "number"
        },
        "term": {
          "description": "Срок договора страхования",
          "type": "string"
        },
        "frequencyPayment": {
          "description": "Периодичность уплаты взноса",
          "type": "string"
        },
        "expirationDate": {
          "format": "date-time",
          "description": "Дата окончания договора",
          "type": "string"
        },
        "nextPaymentDate": {
          "format": "date-time",
          "description": "Дата ближайшего платежа",
          "type": "string"
        }
      }
    },
    "InvestmentData": {
      "description": "",
      "type": "object",
      "properties": {
        "applications": {
          "description": "Заявки",
          "type": "array",
          "items": { "$ref": "#/definitions/InvestmentApplication" }
        },
        "contracts": {
          "description": "Контракты",
          "type": "array",
          "items": { "$ref": "#/definitions/InvestmentContract" }
        }
      }
    },
    "InvestmentApplication": {
      "description": "Информация по договору на инвестиционное обслуживание",
      "type": "object",
      "properties": {
        "state": {
          "format": "int32",
          "description": " (1 = Active , 2 = Prolonged , 4 = Expired , 5 = Canceled , 10 = Completed )",
          "enum": [1, 2, 4, 5, 10],
          "type": "integer"
        },
        "applicationDate": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "id": { "format": "int32", "description": "", "type": "integer" },
        "requestId": {
          "format": "int64",
          "description": "",
          "type": "integer"
        },
        "tradingPlatforms": {
          "description": "Торговые площадки",
          "type": "array",
          "items": { "$ref": "#/definitions/TradingPlatform" }
        },
        "quikKeys": {
          "description": "",
          "type": "array",
          "items": { "$ref": "#/definitions/QuikKey" }
        },
        "quikKey": {
          "$ref": "#/definitions/QuikKey",
          "description": "Действующий ключ по договору"
        },
        "office": {
          "$ref": "#/definitions/Office",
          "description": "Офис обслуживания"
        },
        "tariffName": { "description": "", "type": "string" },
        "marginTrade": {
          "description": "Необеспеченные сделки",
          "type": "boolean"
        },
        "usingQuick": {
          "description": "Использование QUIK",
          "type": "boolean"
        },
        "usingWebQuick": {
          "description": "Использование WebQUIK",
          "type": "boolean"
        },
        "securitiesPaymentType": {
          "description": "Тип выплаты доходов по ценным бумагам",
          "type": "string"
        }
      }
    },
    "InvestmentContract": {
      "description": "Информация по договору инвестиционного обслуживания",
      "type": "object",
      "properties": {
        "applicationId": {
          "format": "int32",
          "description": "Номер заявки",
          "type": "integer"
        },
        "quikKeys": {
          "description": "WebQUIK ключи",
          "type": "array",
          "items": { "$ref": "#/definitions/QuikKey" }
        },
        "tariffName": {
          "description": "Наименование тарифного плана",
          "type": "string"
        },
        "tradingPlatforms": {
          "description": "Торговые площадки",
          "type": "array",
          "items": { "$ref": "#/definitions/TradingPlatform" }
        },
        "accountNumber": { "description": "Счет 306", "type": "string" },
        "accounts": {
          "description": "Счета брокерского договора",
          "type": "array",
          "items": { "$ref": "#/definitions/Account" }
        },
        "currencyAccounts": {
          "description": "Валютные счета брокерского договора",
          "type": "array",
          "items": { "$ref": "#/definitions/Account" }
        },
        "currencyAccountsForSecuritiesMarkets": {
          "description": "Валютные счета РЦБ брокерского договора",
          "type": "array",
          "items": { "$ref": "#/definitions/Account" }
        },
        "marginTrade": {
          "description": "Необеспеченные сделки",
          "type": "boolean"
        },
        "usingQuick": {
          "description": "Использование QUIK",
          "type": "boolean"
        },
        "usingWebQuick": {
          "description": "Использование WebQUIK",
          "type": "boolean"
        },
        "receivingReportInOffice": {
          "description": "Получение отчета в офисе",
          "type": "boolean"
        },
        "receivingReportByEmail": {
          "description": "Получение отчета по электронной почте",
          "type": "boolean"
        },
        "email": {
          "description": "Email для получения отчета",
          "type": "string"
        },
        "highRiskLevel": {
          "description": "Повышенный уровень риска",
          "type": "boolean"
        },
        "isQualifiedInvestor": {
          "description": "Квалифицированный инвестор",
          "type": "boolean"
        },
        "serviceType": {
          "format": "int32",
          "description": "Получает или устанавливает тип БО. (1 = Standard , 2 = IndividualInvestmentAccount , 4 = Light )",
          "enum": [1, 2, 4],
          "type": "integer"
        },
        "securitiesPaymentType": {
          "description": "Тип выплаты доходов по ценным бумагам",
          "type": "string"
        },
        "contractId": {
          "format": "int32",
          "description": "Идентификатор контракта",
          "type": "integer"
        },
        "brand": {
          "$ref": "#/definitions/BrandBase",
          "description": "Product brand"
        },
        "clientLabel": {
          "description": "Наименование от клиента",
          "type": "string"
        },
        "request": {
          "$ref": "#/definitions/Request",
          "description": "Поручение на открытие"
        },
        "closeRequest": {
          "$ref": "#/definitions/Request",
          "description": "Поручение на закрытие"
        },
        "office": {
          "$ref": "#/definitions/Office",
          "description": "Доп. офис банка"
        },
        "number": { "description": "Номер контракта", "type": "string" },
        "name": { "description": "Наименование договора", "type": "string" },
        "previousName": {
          "description": "Наименование договора до миграции",
          "type": "string"
        },
        "description": { "description": "Описание", "type": "string" },
        "beginDate": {
          "format": "date-time",
          "description": "Дата открытия",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "description": "Состояние (1 = NotReady , 2 = Active , 3 = Blocked , 4 = Closed )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "closeDate": {
          "format": "date-time",
          "description": "Дата закрытия",
          "type": "string"
        },
        "entityIdentifier": {
          "$ref": "#/definitions/EntityIdentifier",
          "description": ""
        }
      }
    },
    "TokenResponse": {
      "description": "Результат запроса токена у OAuth-сервера.",
      "type": "object",
      "properties": {
        "accessToken": {
          "description": "Получает или устанавливает access token.",
          "type": "string"
        },
        "identityToken": {
          "description": "Получает или устанавливает identity token.",
          "type": "string"
        },
        "tokenType": {
          "description": "Получает или устанавливает тип токена.",
          "type": "string"
        },
        "refreshToken": {
          "description": "Получает или устанавливает refresh token.",
          "type": "string"
        },
        "expiresIn": {
          "format": "int32",
          "description": "Получает или устанавливает время жизни токена.",
          "type": "integer"
        }
      }
    },
    "InvestShowCaseInfo": {
      "description": "Модель витрины инвест-продуктов",
      "type": "object",
      "properties": {
        "popularInvestProducts": {
          "$ref": "#/definitions/PopularInvestProducts",
          "description": "Раздел \"популярное\""
        },
        "unitTrustProducts": {
          "$ref": "#/definitions/InvestShowCaseUnitTrustProducts",
          "description": "Раздел витрины по фондам ПИФ"
        },
        "iiaTrustManagementProducts": {
          "$ref": "#/definitions/InvestShowCaseIiaTrustManagementProducts",
          "description": "Раздел витрины по ИИС ДУ"
        },
        "bonds": {
          "$ref": "#/definitions/InvestShowCaseBondsProducts",
          "description": "ОФЗн"
        },
        "investBanner": {
          "$ref": "#/definitions/InvestBanner",
          "description": "Простой баннер (без кнопок)"
        },
        "advancedBanner": {
          "$ref": "#/definitions/AdvancedBanner",
          "description": "Баннер переход в лки"
        },
        "disclaimer": { "description": "дисклеймер", "type": "string" }
      }
    },
    "PopularInvestProducts": {
      "description": "Модель раздела \"Популярное\" витрины инвест продуктов",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Отображаемое наименование раздела",
          "type": "string"
        },
        "products": {
          "description": "Продукты раздела",
          "type": "array",
          "items": { "$ref": "#/definitions/PopularInvestProduct" }
        }
      }
    },
    "InvestShowCaseUnitTrustProducts": {
      "description": "Раздел продуктов ПИФ для витрины",
      "type": "object",
      "properties": {
        "products": {
          "description": "Список продуктов (фондов) в разделе",
          "type": "array",
          "items": { "$ref": "#/definitions/InvestShowCaseUnitTrustFundInfo" }
        },
        "displayName": {
          "description": "Наименование категории блока",
          "type": "string"
        },
        "category": {
          "format": "int32",
          "description": "Идентификатор категории блока (1 = UnitTrust , 2 = TrustManagement , 3 = Bonds )",
          "enum": [1, 2, 3],
          "type": "integer"
        }
      }
    },
    "InvestShowCaseIiaTrustManagementProducts": {
      "description": "Раздел продуктов ИИС ДУ для витрины",
      "type": "object",
      "properties": {
        "products": {
          "description": "Список продуктов для раздела",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvestShowCaseTrustManagementProduct"
          }
        },
        "displayName": {
          "description": "Наименование категории блока",
          "type": "string"
        },
        "category": {
          "format": "int32",
          "description": "Идентификатор категории блока (1 = UnitTrust , 2 = TrustManagement , 3 = Bonds )",
          "enum": [1, 2, 3],
          "type": "integer"
        }
      }
    },
    "InvestShowCaseBondsProducts": {
      "description": "Раздел ОФЗн для витрины",
      "type": "object",
      "properties": {
        "products": {
          "description": "Список продуктов (фондов) в разделе",
          "type": "array",
          "items": { "$ref": "#/definitions/InvestShowCaseBondsProduct" }
        },
        "displayName": {
          "description": "Наименование категории блока",
          "type": "string"
        },
        "category": {
          "format": "int32",
          "description": "Идентификатор категории блока (1 = UnitTrust , 2 = TrustManagement , 3 = Bonds )",
          "enum": [1, 2, 3],
          "type": "integer"
        }
      }
    },
    "InvestBanner": {
      "description": "Простой баннер инвестиций",
      "type": "object",
      "properties": {
        "backgroundImage": { "description": "Картинка", "type": "string" },
        "title": { "description": "Заголовок", "type": "string" },
        "text": { "description": "Текст", "type": "string" },
        "deepLink": { "description": "Диплинк", "type": "string" }
      }
    },
    "AdvancedBanner": {
      "description": "Продвинутый баннер инвестиций",
      "type": "object",
      "properties": {
        "image": { "description": "Картинка", "type": "string" },
        "title": { "description": "Заголовок", "type": "string" },
        "text": { "description": "Текст", "type": "string" },
        "buttons": {
          "description": "Кнопки для баннера",
          "type": "array",
          "items": { "$ref": "#/definitions/InvestButtonModel" }
        },
        "backgroundColor": {
          "description": "Цвет фона для банера",
          "type": "string"
        }
      }
    },
    "PopularInvestProduct": {
      "description": "Модель продукта для раздела \"Популярное\" витрины инвест продуков",
      "type": "object",
      "properties": {
        "categoryName": {
          "description": "Наименование категории продукта",
          "type": "string"
        },
        "category": {
          "format": "int32",
          "description": "Категория продукта (1 = UnitTrust , 2 = TrustManagement , 3 = Bonds )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "backgroundImage": {
          "description": "Картинка для бэкграунда",
          "type": "string"
        },
        "productId": {
          "format": "int32",
          "description": "ID продукта",
          "type": "integer"
        },
        "productIncome": { "description": "Доходность", "type": "string" },
        "incomeTitle": {
          "description": "Наименование доходности",
          "type": "string"
        },
        "iconUrl": { "description": "Иконка продукта", "type": "string" },
        "displayName": {
          "description": "Наименование продукта",
          "type": "string"
        }
      }
    },
    "InvestShowCaseUnitTrustFundInfo": {
      "description": "Модель продукта ПИФ для соответствующего раздела витрины инвест-продуктов",
      "type": "object",
      "properties": {
        "productId": {
          "format": "int32",
          "description": "ID продукта",
          "type": "integer"
        },
        "productIncome": { "description": "Доходность", "type": "string" },
        "incomeTitle": {
          "description": "Наименование доходности",
          "type": "string"
        },
        "iconUrl": { "description": "Иконка продукта", "type": "string" },
        "displayName": {
          "description": "Наименование продукта",
          "type": "string"
        }
      }
    },
    "InvestShowCaseTrustManagementProduct": {
      "description": "Модель продукта ДУ для соответствующего раздела витрины инвест-продуктов",
      "type": "object",
      "properties": {
        "backgroundColor": { "description": "Цвет фона", "type": "string" },
        "productId": {
          "format": "int32",
          "description": "ID продукта",
          "type": "integer"
        },
        "productIncome": { "description": "Доходность", "type": "string" },
        "incomeTitle": {
          "description": "Наименование доходности",
          "type": "string"
        },
        "iconUrl": { "description": "Иконка продукта", "type": "string" },
        "displayName": {
          "description": "Наименование продукта",
          "type": "string"
        }
      }
    },
    "InvestShowCaseBondsProduct": {
      "description": "Модель продукта ОФЗн для соответствующего раздела витрины инвест-продуктов",
      "type": "object",
      "properties": {
        "productName": {
          "description": "Наименование выпуска",
          "type": "string"
        },
        "productId": {
          "format": "int32",
          "description": "ID продукта",
          "type": "integer"
        },
        "productIncome": { "description": "Доходность", "type": "string" },
        "incomeTitle": {
          "description": "Наименование доходности",
          "type": "string"
        },
        "iconUrl": { "description": "Иконка продукта", "type": "string" },
        "displayName": {
          "description": "Наименование продукта",
          "type": "string"
        }
      }
    },
    "InvestButtonModel": {
      "description": "Модель кнопки",
      "type": "object",
      "properties": {
        "type": {
          "format": "int32",
          "description": "Тип кнопки",
          "type": "integer"
        },
        "action": { "description": "Действие по кнопке", "type": "string" },
        "text": { "description": "Текст кнопки", "type": "string" },
        "style": { "description": "Стиль", "type": "string" },
        "width": {
          "format": "int32",
          "description": "Ширина",
          "type": "integer"
        }
      }
    },
    "InvestNewProductView": {
      "description": "Модель экрана Новый продукт",
      "type": "object",
      "properties": {
        "selfDependedProducts": {
          "$ref": "#/definitions/InvestProductImageListModel",
          "description": "Продукты для самостоятельного инвестирования"
        },
        "trustManagementProducts": {
          "$ref": "#/definitions/InvestProductImageListModel",
          "description": "Продукты для  инвестирования с ДУ"
        },
        "productsMenu": {
          "$ref": "#/definitions/ProductsMenuModel",
          "description": "Меню продуктов"
        },
        "investBanner": {
          "$ref": "#/definitions/InvestBanner",
          "description": "Простой баннер (без кнопок)"
        }
      }
    },
    "InvestProductImageListModel": {
      "description": "Модель списка  продуктов с заголовком",
      "type": "object",
      "properties": {
        "products": {
          "description": "Продукты",
          "type": "array",
          "items": { "$ref": "#/definitions/InvestProductModelWithImage" }
        },
        "title": { "description": "Заголовок", "type": "string" }
      }
    },
    "ProductsMenuModel": {
      "description": "Модель списка  продуктов с заголовком",
      "type": "object",
      "properties": {
        "products": {
          "description": "Продукты",
          "type": "array",
          "items": { "$ref": "#/definitions/InvestProductModel" }
        },
        "title": { "description": "Заголовок", "type": "string" }
      }
    },
    "InvestProductModelWithImage": {
      "description": "Модель продукта со ссылкой и бэкграундом",
      "type": "object",
      "properties": {
        "backgroundImage": { "description": "Картинка", "type": "string" },
        "text": { "description": "Текст", "type": "string" },
        "deepLink": { "description": "диплинк", "type": "string" },
        "title": { "description": "Заголовок", "type": "string" }
      }
    },
    "InvestProductModel": {
      "description": "Модель продукта со ссылкой",
      "type": "object",
      "properties": {
        "text": { "description": "Текст", "type": "string" },
        "deepLink": { "description": "диплинк", "type": "string" },
        "title": { "description": "Заголовок", "type": "string" }
      }
    },
    "LifeGoalTemplate": {
      "description": "Шаблон цели клиента",
      "type": "object",
      "properties": {
        "lifeGoalTemplateId": {
          "format": "int32",
          "description": "Идентификатор шаблона цели",
          "type": "integer"
        },
        "isCustomTemplate": {
          "description": "Признак кастомного (выбранного клиентом) шаблона цели",
          "type": "boolean"
        },
        "name": { "description": "Название цели", "type": "string" },
        "imageId": {
          "format": "uuid",
          "description": "Идентификатор изображения",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "imageSrc": { "description": "Uri изображения цели", "type": "string" },
        "sum": { "format": "double", "description": "Сумма", "type": "number" },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "periodInMonths": {
          "format": "int32",
          "description": "Плановая дата достижения цели",
          "type": "integer"
        }
      }
    },
    "LifeGoalImage": {
      "description": "Графическое изображение цели",
      "type": "object",
      "properties": {
        "data": { "format": "byte", "description": "", "type": "string" },
        "format": {
          "description": "Формат данных (расширение файла)",
          "type": "string"
        }
      }
    },
    "LifeGoal": {
      "description": "Жизненная цель клиента",
      "type": "object",
      "properties": {
        "lifeGoalId": {
          "format": "int32",
          "description": "Идентификатор цели",
          "type": "integer"
        },
        "state": {
          "format": "int32",
          "description": "Состояние цели (1 = Active , 2 = Achieved , 3 = Canceled , 4 = Overdue )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "name": { "description": "Название цели", "type": "string" },
        "imageSrc": { "description": "Uri пиктограммы цели", "type": "string" },
        "sum": { "format": "double", "description": "Сумма", "type": "number" },
        "periodInMonths": {
          "format": "int32",
          "description": "Срок",
          "type": "integer"
        },
        "startDate": {
          "format": "date-time",
          "description": "Дата начала накоплений",
          "type": "string"
        },
        "finalDate": {
          "format": "date-time",
          "description": "Дата окончания накоплений",
          "type": "string"
        },
        "monthlyPaymentSum": {
          "format": "double",
          "description": "Ежемесячный платеж на цель",
          "type": "number"
        },
        "nextIncomeDate": {
          "format": "date-time",
          "description": "Дата следующего пополнения счета",
          "type": "string"
        },
        "account": {
          "$ref": "#/definitions/TermlessAccount",
          "description": "Накопительный счет"
        }
      }
    },
    "LoansData": {
      "description": "Информация о заявках на кредит, ссудах, статусе кредита в один клик",
      "type": "object",
      "properties": {
        "applications": {
          "description": "Заявка на кредит",
          "type": "array",
          "items": { "$ref": "#/definitions/LoanApplication" }
        },
        "loans": {
          "description": "Кредитный контракт",
          "type": "array",
          "items": { "$ref": "#/definitions/LoanContract" }
        },
        "instaLoan": {
          "$ref": "#/definitions/InstaLoanResult",
          "description": "Информация о кредите в один клик"
        }
      }
    },
    "LoanApplication": {
      "description": "Информация по заявке на кредит клиента",
      "type": "object",
      "properties": {
        "brand": {
          "$ref": "#/definitions/LoanBrand",
          "description": "Кредитный продукт"
        },
        "state": {
          "format": "int32",
          "description": "Состояние заявки на кредит (1 = Cancel , 2 = Refuse , 3 = Success , 4 = Completed , 5 = Expire , 6 = Active , 13 = ClientRefuse , 18 = DecisionReceived , 19 = PreliminarySuccess , 25 = WaitIssue , 31 = RefusedByOtherLoan , 255 = Draft , 256 = LoadDocuments , 257 = VerificationDocuments , 258 = DocumentComments )",
          "enum": [1, 2, 3, 4, 5, 6, 13, 18, 19, 25, 31, 255, 256, 257, 258],
          "type": "integer"
        },
        "expirationDate": {
          "format": "date-time",
          "description": "Срок годности",
          "type": "string"
        },
        "requestedSum": {
          "format": "double",
          "description": "Запрошенная сумма",
          "type": "number"
        },
        "lengthMonths": {
          "format": "int32",
          "description": "Срок кредита (в месяцах)",
          "type": "integer"
        },
        "comment": { "description": "Комментарий по заявке", "type": "string" },
        "clientLabel": {
          "description": "Наименование от клиента",
          "type": "string"
        },
        "progressState": {
          "format": "int32",
          "description": "Состояние прогрес-бара кредитной заявки (1 = Active , 2 = PreliminarySuccess , 3 = CheckDocuments , 4 = Refuse , 5 = Success )",
          "enum": [1, 2, 3, 4, 5],
          "type": "integer"
        },
        "progressStateDescription": {
          "description": "Сопроводительный текст состояния прогрес-бара",
          "type": "string"
        },
        "lengthMonthsAsString": {
          "description": "Информация о сроке кредита в словосочетании со словом \"месяц\" (например, 24 месяца)",
          "type": "string"
        },
        "allowLoanVoluntaryInsurance": {
          "description": "Доступно подключение страховки для заявки ожидающей выдачу",
          "type": "boolean"
        },
        "insuranceViolationRate": {
          "format": "double",
          "description": "Ставка без страховки",
          "type": "number"
        },
        "insuranceRegistrationRate": {
          "format": "double",
          "description": "Ставка после подключения страховки",
          "type": "number"
        },
        "isInstaLoan": {
          "description": "Признак кредита в 1 клик",
          "type": "boolean"
        },
        "isNoFormalitiesLoan": {
          "description": "Признак кредита \"без формальностей\"",
          "type": "boolean"
        },
        "allowProcessDecision": {
          "description": "Доступна обработка решения",
          "type": "boolean"
        },
        "applicationLoanType": {
          "format": "int32",
          "description": "Тип кредитной заявки (0 = Undefiened , 1 = PurposeLoan , 2 = ConsumerLoan , 3 = MicroExpressLoan , 4 = Overdraft )",
          "enum": [0, 1, 2, 3, 4],
          "type": "integer"
        },
        "isOnlineApplicationContainsNoScanDecisions": {
          "description": "Признак, что по онлайн заявке (операция 9311) есть решения с пропуском этапа сканирования.",
          "type": "boolean"
        },
        "requestId": {
          "format": "int64",
          "description": "Id поручения",
          "type": "integer"
        },
        "documentCommentCount": {
          "format": "int32",
          "description": "Количество ошибок в прикреплённых файлах",
          "type": "integer"
        },
        "applicationId": {
          "format": "int32",
          "description": "Id заявки",
          "type": "integer"
        },
        "applicationDate": {
          "format": "date-time",
          "description": "Дата подачи заявки",
          "type": "string"
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "office": {
          "$ref": "#/definitions/Office",
          "description": "Офис банка"
        },
        "request": {
          "$ref": "#/definitions/Request",
          "description": "Поручение"
        }
      }
    },
    "LoanContract": {
      "description": "Информация по ссуде",
      "type": "object",
      "properties": {
        "loanProductType": {
          "$ref": "#/definitions/LoanProductType",
          "description": "Вид кредитного продукта"
        },
        "issueDate": {
          "format": "date-time",
          "description": "Дата выдачи",
          "type": "string"
        },
        "insuranceContracts": {
          "description": "Страховые договоры, подключённые к ссуде",
          "type": "array",
          "items": { "$ref": "#/definitions/InsuranceContract" }
        },
        "issueSum": {
          "format": "double",
          "description": "Сумма выданного кредита (c учётом страховки)",
          "type": "number"
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта ссуды"
        },
        "loanAccount": {
          "$ref": "#/definitions/Account",
          "description": "Ссудный счёт"
        },
        "repaymentAccount": {
          "$ref": "#/definitions/AccountBase",
          "description": "Счёт погашения по кредитному договору\r\nСчёт может быть как счёт PSB-Retail, так и счёт карты"
        },
        "interestRate": {
          "format": "double",
          "description": "Процентная ставка",
          "type": "number"
        },
        "plannnigEndDate": {
          "format": "date-time",
          "description": "Плановая дата окончания договора",
          "type": "string"
        },
        "vacationState": {
          "$ref": "#/definitions/LoanVacationState",
          "description": "Информация по \"кредитным каникулам\""
        },
        "financialState": {
          "format": "int32",
          "description": "Финансовый статус ссуды\r\n(например, есть ли просроченная задолженность) (0 = Undefined , 1 = Regular , 2 = Overdue , 3 = FullRepaymentDemand )",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "application": {
          "$ref": "#/definitions/LoanApplication",
          "description": "Заявка на кредит, по которой была выдана ссуда"
        },
        "lodgementDate": {
          "format": "date-time",
          "description": "Дата подачи заявки на получение кредита",
          "type": "string"
        },
        "lengthMonths": {
          "format": "int32",
          "description": "Срок кредитного договора в месяцах",
          "type": "integer"
        },
        "lengthDescription": {
          "description": "Строкое представление срока кредитного договора",
          "type": "string"
        },
        "planningEndDate": {
          "format": "date-time",
          "description": "Плановая дата окночания договора",
          "type": "string"
        },
        "fullLoanValue": {
          "format": "double",
          "description": "ПСК (полная стоимость кредита)",
          "type": "number"
        },
        "remainedMainDebtSum": {
          "format": "double",
          "description": "Остаток ссудной задолженности по графику погашений",
          "type": "number"
        },
        "nearestPaymentDate": {
          "format": "date-time",
          "description": "Дата ближайшего обязательного платежа",
          "type": "string"
        },
        "nearestPaymentSums": {
          "$ref": "#/definitions/LoanRepaymentSums",
          "description": "Ближайший платёж по ссуде"
        },
        "withAttachedVoluntaryInsuranceSchedule": {
          "description": "C графиком страхования по страховке",
          "type": "boolean"
        },
        "isLoanVacationAvailable": {
          "description": "Доступна ли услуга Кредитные каникулы",
          "type": "boolean"
        },
        "isDiscountRateAvailable": {
          "description": "Доступно ли спец.предложение Уменьшение ставки по кредитам (оформление страховки)",
          "type": "boolean"
        },
        "discountRateDetails": {
          "$ref": "#/definitions/DiscountRateDetails",
          "description": "Cпец.предложение Уменьшение ставки по кредитам (оформление страховки)"
        },
        "isInstaLoan": {
          "description": "Признак кредита в 1 клик",
          "type": "boolean"
        },
        "isNoFormalitiesLoan": {
          "description": "Признак кредита \"без формальностей\"",
          "type": "boolean"
        },
        "isPCF": { "description": "Признак кредита PCF", "type": "boolean" },
        "loanRefinanceList": {
          "description": "Данные о рефинансированных кредитах",
          "type": "array",
          "items": { "$ref": "#/definitions/LoanContractRefinance" }
        },
        "refinanceInterestRateDelta": {
          "description": "Дельта процентной ставки, в случае несоблюдения условий рефинансирования",
          "type": "string"
        },
        "refinanceLastDate": {
          "format": "date-time",
          "description": "Дата, до которой следует предоставить справки о погашении рефинансируемых кредитов",
          "type": "string"
        },
        "contractId": {
          "format": "int32",
          "description": "Идентификатор контракта",
          "type": "integer"
        },
        "brand": {
          "$ref": "#/definitions/BrandBase",
          "description": "Product brand"
        },
        "clientLabel": {
          "description": "Наименование от клиента",
          "type": "string"
        },
        "request": {
          "$ref": "#/definitions/Request",
          "description": "Поручение на открытие"
        },
        "closeRequest": {
          "$ref": "#/definitions/Request",
          "description": "Поручение на закрытие"
        },
        "office": {
          "$ref": "#/definitions/Office",
          "description": "Доп. офис банка"
        },
        "number": { "description": "Номер контракта", "type": "string" },
        "name": { "description": "Наименование договора", "type": "string" },
        "previousName": {
          "description": "Наименование договора до миграции",
          "type": "string"
        },
        "description": { "description": "Описание", "type": "string" },
        "beginDate": {
          "format": "date-time",
          "description": "Дата открытия",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "description": "Состояние (1 = NotReady , 2 = Active , 3 = Blocked , 4 = Closed )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "closeDate": {
          "format": "date-time",
          "description": "Дата закрытия",
          "type": "string"
        },
        "entityIdentifier": {
          "$ref": "#/definitions/EntityIdentifier",
          "description": ""
        }
      }
    },
    "InstaLoanResult": {
      "description": "Результат запроса кредита в один клик",
      "type": "object",
      "properties": {
        "loanContract": {
          "$ref": "#/definitions/LoanContract",
          "description": "Инфо о кредите за один клик, если он выдан. Может быть пустым."
        },
        "maxLimit": {
          "format": "double",
          "description": "Максимальный лимит",
          "type": "number"
        },
        "instaLoanStatus": {
          "format": "int32",
          "description": "Статус кредита в один клик для клиента (1 = GetMoney , 2 = NewLimit , 3 = DecisionInProgress , 4 = PaymentSchedule , 5 = DelayedPayment , 6 = Forbidden , 7 = GetMoneyInfo , 8 = Refuse )",
          "enum": [1, 2, 3, 4, 5, 6, 7, 8],
          "type": "integer"
        }
      }
    },
    "LoanBrand": {
      "description": "Кредитный брэнд",
      "type": "object",
      "properties": {
        "brandFullName": {
          "description": "Полное наименование брэнда",
          "type": "string"
        },
        "brandId": {
          "format": "int32",
          "description": "Internal brand identifier",
          "type": "integer"
        },
        "name": { "description": "Brand name", "type": "string" },
        "juridicalName": {
          "description": "Brand name for documents",
          "type": "string"
        }
      }
    },
    "LoanProductType": {
      "description": "Тип продукта",
      "type": "object",
      "properties": {
        "productTypeId": {
          "format": "int32",
          "description": "Product type id",
          "type": "integer"
        },
        "loanProgram": {
          "$ref": "#/definitions/LoanProgram",
          "description": "program"
        },
        "name": { "description": "Наименование", "type": "string" }
      }
    },
    "InsuranceContract": {
      "description": "Договор страхования",
      "type": "object",
      "properties": {
        "insuranceContractId": {
          "format": "int32",
          "description": "Идентификатор договора страхования",
          "type": "integer"
        },
        "series": {
          "description": "Серия договора страхования",
          "type": "string"
        },
        "number": { "description": "номер договора", "type": "string" },
        "beginDate": {
          "format": "date-time",
          "description": "Дата начала действия",
          "type": "string"
        },
        "closeDate": {
          "format": "date-time",
          "description": "Дата закрытия",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "description": "Состояние договора страхования (1 = NotReady , 2 = Active , 3 = Blocked , 4 = Closed )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "insuranceProduct": {
          "$ref": "#/definitions/InsuranceProduct",
          "description": "страховой продукт"
        }
      }
    },
    "LoanVacationState": {
      "description": "Состояние улуги \"кредитные каникулы\"",
      "type": "object",
      "properties": {
        "beginDate": {
          "format": "date-time",
          "description": "Дата начала действия кредитных каникул",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "Дата завершения действия кредитных каникул",
          "type": "string"
        },
        "moratoriumType": {
          "format": "int32",
          "description": "Тип кредитных каникул (тип отсрочки, предоставленный услугой \"кредитные каникулы\") (2 = MoratoriumOnMainDebtAndInterest , 3 = MoratoriumOnMainDebt )",
          "enum": [2, 3],
          "type": "integer"
        }
      }
    },
    "LoanRepaymentSums": {
      "description": "Суммы к погашению по ссуде",
      "type": "object",
      "properties": {
        "totalPaymentSum": {
          "format": "double",
          "description": "Общая сумма платежа",
          "type": "number"
        },
        "planningMainDebtSum": {
          "format": "double",
          "description": "Плановая сумма по ОД",
          "type": "number"
        },
        "planningInterestSum": {
          "format": "double",
          "description": "Плановая сумма по %%",
          "type": "number"
        },
        "delayedMainDebtSum": {
          "format": "double",
          "description": "Просроченный ОД",
          "type": "number"
        },
        "delayedInterestSum": {
          "format": "double",
          "description": "Просроченные %%",
          "type": "number"
        },
        "delayedChargeInterestSum": {
          "format": "double",
          "description": "% на просроченный ОД",
          "type": "number"
        },
        "interestDelayFineSum": {
          "format": "double",
          "description": "Штраф за просрочку процентов",
          "type": "number"
        },
        "mainDebtDelayFineSum": {
          "format": "double",
          "description": "Штраф за просрочку ОД",
          "type": "number"
        },
        "demandFinesSum": {
          "format": "double",
          "description": "Требование по штрафам",
          "type": "number"
        },
        "demandFeesSum": {
          "format": "double",
          "description": "Требование по гос. пошлине",
          "type": "number"
        },
        "demandCommissionsSum": {
          "format": "double",
          "description": "Требование по комиссиям",
          "type": "number"
        },
        "demandPropertyValuationSum": {
          "format": "double",
          "description": "Требование по оценке",
          "type": "number"
        },
        "demandOtherRequirementsSum": {
          "format": "double",
          "description": "Требование по другим требованиям",
          "type": "number"
        },
        "voluntaryInsuranceSum": {
          "format": "double",
          "description": "Комиссия по страховке",
          "type": "number"
        },
        "advancedRepaymentSum": {
          "format": "double",
          "description": "Сумма действующего заявления на частичное досрочное погашение",
          "type": "number"
        },
        "totalPlannedSum": {
          "format": "double",
          "description": "Сумма планового платежа",
          "type": "number"
        }
      }
    },
    "DiscountRateDetails": {
      "description": "Cпец.предложение Уменьшение ставки по кредитам (оформление страховки)",
      "type": "object",
      "properties": {
        "insuranceEndDate": {
          "format": "date-time",
          "description": "Крайний срок подключения страховки",
          "type": "string"
        },
        "daysToInsuranceEndDate": {
          "format": "int32",
          "description": "Количество дней до истечения крайнего срока подключения страховки",
          "type": "integer",
          "readOnly": true
        },
        "isInsuranceRequired": {
          "description": "Ссуда, с обязательным заключением договора добровольного страхования при создании/выдаче ссуды",
          "type": "boolean"
        },
        "penaltyRate": {
          "format": "double",
          "description": "Процентная ставка при незаключенном договоре страхования",
          "type": "number"
        },
        "offeredRate": {
          "format": "double",
          "description": "Процентная ставка после заключения договора страхования",
          "type": "number"
        },
        "offeredProfitPercent": {
          "format": "double",
          "description": "Выгода в процентах после заключения договора страхования",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "LoanContractRefinance": {
      "description": "Данные о рефинансированных кредит",
      "type": "object",
      "properties": {
        "previousBankName": {
          "description": "Наименование банка, в котором был рефинанный кредит",
          "type": "string"
        },
        "refinancedSumm": {
          "format": "double",
          "description": "Рефинансированная сумма",
          "type": "number"
        },
        "creditTypeName": {
          "description": "Наименование типа рефинансируемого кредита",
          "type": "string"
        },
        "isClosed": {
          "description": "Закрыт рефинансируемый кредит?",
          "type": "boolean"
        }
      }
    },
    "LoanProgram": {
      "description": "Loan program",
      "type": "object",
      "properties": {
        "programId": {
          "format": "int32",
          "description": "Program ID",
          "type": "integer"
        },
        "name": { "description": "Name", "type": "string" },
        "loanProgramType": {
          "format": "int32",
          "description": "Loan program type (0 = Unknown , 1 = Consumer , 2 = Auto , 3 = Mortgage )",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        }
      }
    },
    "InsuranceProduct": {
      "description": "Страховой продукт",
      "type": "object",
      "properties": {
        "insuranceProductId": {
          "format": "int32",
          "description": "Идентификатор страхового продукта",
          "type": "integer"
        },
        "name": {
          "description": "Наименование страховой программы",
          "type": "string"
        }
      }
    },
    "LoanRepaymentStatistics": {
      "description": "Статистика по погашению - сколько погашено, сколько осталось",
      "type": "object",
      "properties": {
        "commissionsPastRepayment": {
          "format": "double",
          "description": "Сумма погашенных периодических комиссий за обслуживание ссудного счета",
          "type": "number"
        },
        "interestPastRepayment": {
          "format": "double",
          "description": "Погашенно процентов всего",
          "type": "number"
        },
        "mainDebtPastRepayment": {
          "format": "double",
          "description": "Погашенно ОД всего",
          "type": "number"
        },
        "totalPastRepayment": {
          "format": "double",
          "description": "Всего погашено",
          "type": "number"
        },
        "commissionsToRepayment": {
          "format": "double",
          "description": "К погашению периодических комиссий за обслуживание ссудного счета",
          "type": "number"
        },
        "interestToRepayment": {
          "format": "double",
          "description": "К погашению процентов",
          "type": "number"
        },
        "mainDebtToRepayment": {
          "format": "double",
          "description": "К погашению по ОД",
          "type": "number"
        },
        "totalToRepayment": {
          "format": "double",
          "description": "Всего к погашению",
          "type": "number"
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта кредита"
        }
      }
    },
    "LoanScheduleItem": {
      "description": "Элемент консолидированного графика",
      "type": "object",
      "properties": {
        "obligationDate": {
          "format": "date-time",
          "description": "Дата платежа",
          "type": "string"
        },
        "mainDebtSum": {
          "format": "double",
          "description": "Основной долг",
          "type": "number"
        },
        "interestSum": {
          "format": "double",
          "description": "Все непросроченные проценты",
          "type": "number"
        },
        "delayedMainDebtSum": {
          "format": "double",
          "description": "Просроченный основной долг",
          "type": "number"
        },
        "delayedInterestSum": {
          "format": "double",
          "description": "Просроченные проценты",
          "type": "number"
        },
        "interestOnDelayedMainDebtSum": {
          "format": "double",
          "description": "Проценты на просроченный основной долг",
          "type": "number"
        },
        "remainedMainDebtSum": {
          "format": "double",
          "description": "Оставшийся основной долг",
          "type": "number"
        },
        "voluntaryInsuranceSum": {
          "format": "double",
          "description": "Добровольное страхование",
          "type": "number"
        },
        "currentInterestSum": {
          "format": "double",
          "description": "Текущие проценты на основной долг\r\n(начисленные с прошлой точки погашения)",
          "type": "number"
        },
        "defermentType": {
          "format": "int32",
          "description": "Тип отсрочки погашения, действующий у точки (0 = None , 1 = Regular , 2 = CreditVacation , 4 = GracePeriod , 8 = Settlement )",
          "enum": [0, 1, 2, 4, 8],
          "type": "integer"
        },
        "totalSum": {
          "format": "double",
          "description": "Сумма платежа",
          "type": "number"
        }
      }
    },
    "LoanCalculatorInitialData": {
      "description": "Исходные данные для калькулятора",
      "type": "object",
      "properties": {
        "loanProgram": {
          "$ref": "#/definitions/LoanProgram",
          "description": "Программа кредитования"
        },
        "mortgageRealtyType": {
          "format": "int32",
          "description": "Типы недвижимости (для калькулятора) (1 = Apartment , 2 = House )",
          "enum": [1, 2],
          "type": "integer"
        },
        "mortgagePurchaseType": {
          "format": "int32",
          "description": "Типы приобретения жилья (для калькулятора) (1 = UnderConstructionRealty , 2 = ReadyRealty , 3 = CountrySideRealty , 4 = PawnPurposeLoan , 5 = PawnNoPurposeLoan )",
          "enum": [1, 2, 3, 4, 5],
          "type": "integer"
        },
        "lengthMonthsMin": {
          "format": "int32",
          "description": "Минимальная длительность в месяцах",
          "type": "integer"
        },
        "lengthMonthsMax": {
          "format": "int32",
          "description": "Максимальная длительность в месяцах",
          "type": "integer"
        },
        "sumMin": {
          "format": "double",
          "description": "Минимальная сумма кредита",
          "type": "number"
        },
        "sumMax": {
          "format": "double",
          "description": "Максимальная сумма кредита",
          "type": "number"
        },
        "rateMin": {
          "format": "double",
          "description": "Минимальная процентная ставка",
          "type": "number"
        },
        "rateMax": {
          "format": "double",
          "description": "Максимальная процентная ставка",
          "type": "number"
        },
        "initialFeeRateMin": {
          "format": "double",
          "description": "Минимальный первоначальный взнос в процентах",
          "type": "number"
        },
        "initialFeeRateMax": {
          "format": "double",
          "description": "Максимальный первоначальный взнос в процентах",
          "type": "number"
        },
        "initialSum": {
          "format": "double",
          "description": "Начальная сумма для ссуды.",
          "type": "number"
        },
        "initialRefinanceSum": {
          "format": "double",
          "description": "Начальная сумма для рефинанса.",
          "type": "number"
        },
        "initialRefinanceSumOnHand": {
          "format": "double",
          "description": "Начальная сумма на руки для рефинанса.",
          "type": "number"
        },
        "initialLengthMonths": {
          "format": "int32",
          "description": "Начальный срок в месяцах для ссуды.",
          "type": "integer"
        }
      }
    },
    "LoanCalculatorParams": {
      "description": "Параметры для калькулятора",
      "type": "object",
      "properties": {
        "loanProgramId": {
          "format": "int32",
          "description": "Программа кредитования",
          "type": "integer"
        },
        "mortgageRealtyType": {
          "format": "int32",
          "description": "Типы недвижимости (для калькулятора) (1 = Apartment , 2 = House )",
          "enum": [1, 2],
          "type": "integer"
        },
        "mortgagePurchaseType": {
          "format": "int32",
          "description": "Типы приобретения жилья (для калькулятора) (1 = UnderConstructionRealty , 2 = ReadyRealty , 3 = CountrySideRealty , 4 = PawnPurposeLoan , 5 = PawnNoPurposeLoan )",
          "enum": [1, 2, 3, 4, 5],
          "type": "integer"
        },
        "sum": {
          "format": "double",
          "description": "Сумма кредита",
          "type": "number"
        },
        "mortgageValue": {
          "format": "double",
          "description": "Стоимость недвижимости",
          "type": "number"
        },
        "initialFee": {
          "format": "double",
          "description": "Первоначальный взнос",
          "type": "number"
        },
        "monthlyIncome": {
          "format": "double",
          "description": "Ежемесячный доход",
          "type": "number"
        },
        "lengthMonths": {
          "format": "int32",
          "description": "Срок кредита",
          "type": "integer"
        }
      }
    },
    "LoanCalculatorResult": {
      "description": "Результат расчёта калькулятора",
      "type": "object",
      "properties": {
        "monthlyPayment": {
          "format": "double",
          "description": "Ежемесячный платеж",
          "type": "number"
        },
        "interestRate": {
          "format": "double",
          "description": "Ставка по кредиту",
          "type": "number"
        },
        "sum": {
          "format": "double",
          "description": "Сумма кредита",
          "type": "number"
        },
        "interestSum": {
          "format": "double",
          "description": "Сумма переплаты",
          "type": "number"
        },
        "loanScheduleItems": {
          "description": "Предварительный график платежей",
          "type": "array",
          "items": { "$ref": "#/definitions/LoanScheduleItem" }
        },
        "lengthMonths": {
          "format": "int32",
          "description": "Срок кредита.",
          "type": "integer"
        },
        "insuranceSum": {
          "format": "double",
          "description": "Сумма страховки",
          "type": "number"
        },
        "isAvailable": {
          "description": "Доступность решения. В частности может быть не доступно решение со страховкой, не проходящее ПСК",
          "type": "boolean"
        }
      }
    },
    "SendLoanCalculatorResultByEmailParams": {
      "description": "Параметры отправки предварительного расчета кредита по email",
      "type": "object",
      "properties": {
        "email": { "description": "Адрес электронной почты", "type": "string" },
        "loanCalculatorParams": {
          "$ref": "#/definitions/LoanCalculatorParams",
          "description": "Параметры расчета"
        }
      }
    },
    "LoanRequestParams": {
      "description": "Запрос на оформление кредита",
      "type": "object",
      "properties": {
        "loanApplicationMode": {
          "format": "int32",
          "description": "Режим старта кредитной анкеты (используется при старте операции с сайта, планшета) (1 = FullConsumer , 2 = PreliminaryConsumer , 3 = PreliminaryMortgage )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "loanCalculatorParams": {
          "$ref": "#/definitions/LoanCalculatorParams",
          "description": "Параметры расчёта для калькулятора"
        },
        "referalLink": {
          "description": "Ссылка по которой потенциальный клиент пришел",
          "type": "string"
        },
        "referalLinkSource": {
          "description": "Источник реферальной ссылки",
          "type": "string"
        }
      }
    },
    "SidebarLoanProposalsResult": {
      "description": "Кредитные предложения для отображения в сайдбаре",
      "type": "object",
      "properties": {
        "instaLoan": {
          "$ref": "#/definitions/InstaLoanResult",
          "description": "В один клик"
        },
        "noFormalities": {
          "$ref": "#/definitions/NoFormalitiesResult",
          "description": "Без формальностей"
        },
        "preApproved": {
          "$ref": "#/definitions/PreApprovedResult",
          "description": "Предварительно одобренный кредит"
        },
        "insurance": {
          "$ref": "#/definitions/InsuranceProposalResult",
          "description": "Страховка"
        },
        "pcf": {
          "$ref": "#/definitions/CampaignsPcfResult",
          "description": "PCF"
        },
        "topUp": {
          "$ref": "#/definitions/TopUpResult",
          "description": "TopUp"
        },
        "preApprovedRefinance": {
          "$ref": "#/definitions/PreApprovedRefinanceResult",
          "description": "Предварительно одобренный кредит с рефинансированием"
        }
      }
    },
    "NoFormalitiesResult": {
      "description": "Результат запроса кредита \"без формальностей\"",
      "type": "object",
      "properties": {
        "isProposalAvailable": {
          "description": "Доступно ли предложение",
          "type": "boolean"
        },
        "proposalId": {
          "format": "int32",
          "description": "идентификатор предложения",
          "type": "integer"
        },
        "loanApplication": {
          "$ref": "#/definitions/LoanApplication",
          "description": "Заявка на кредит"
        },
        "maxLimit": {
          "format": "double",
          "description": "Максимальный лимит",
          "type": "number"
        },
        "noFormalitiesStatus": {
          "format": "int32",
          "description": "Статус кредита \"Без формальностей\" (1 = DoNotShow , 2 = ShowActive , 3 = ShowExecuting )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "interestRate": {
          "format": "double",
          "description": "Процентная ставка",
          "type": "number"
        }
      }
    },
    "PreApprovedResult": {
      "description": "Результат запроса предварительно одобренных предложений",
      "type": "object",
      "properties": {
        "proposal": {
          "$ref": "#/definitions/Proposal",
          "description": "Предложение"
        },
        "application": {
          "$ref": "#/definitions/LoanApplication",
          "description": "Оформленная заявка на кредит"
        },
        "maxLimit": {
          "format": "double",
          "description": "Сумма максимального лимита по кредиту",
          "type": "number"
        },
        "interestRate": {
          "format": "double",
          "description": "Процентная ставка",
          "type": "number"
        },
        "annuity": {
          "format": "double",
          "description": "Ужемесячныей платеж",
          "type": "number"
        },
        "loanMonthPeriod": {
          "format": "int32",
          "description": "Срок кредитования",
          "type": "integer"
        },
        "decisionsCount": {
          "format": "int32",
          "description": "Количество подобранных решений",
          "type": "integer"
        },
        "proposalTypeId": {
          "format": "int32",
          "description": "Тип предложения",
          "type": "integer"
        },
        "proposalId": {
          "format": "int32",
          "description": "Идентификатор предложения",
          "type": "integer"
        }
      }
    },
    "InsuranceProposalResult": {
      "description": "Результат запроса предложения о страховке",
      "type": "object",
      "properties": {
        "isDiscountRateAvailable": {
          "description": "Доступна ли возможность заключения договора страхования",
          "type": "boolean"
        },
        "discountRate": {
          "format": "double",
          "description": "Выгода в процентах после заключения договора страхования",
          "type": "number"
        },
        "remainingDays": {
          "format": "int32",
          "description": "Количество дней до истечения крайнего срока подключения страховки",
          "type": "integer"
        }
      }
    },
    "CampaignsPcfResult": {
      "description": "Результат запроса кредита в один клик",
      "type": "object",
      "properties": {
        "loanContract": {
          "$ref": "#/definitions/LoanContract",
          "description": "Инфо о кредите за один клик, если он выдан. Может быть пустым."
        },
        "maxLimit": {
          "format": "double",
          "description": "Максимальный лимит",
          "type": "number"
        },
        "campaignsPcfStatus": {
          "format": "int32",
          "description": "Статус кредита в один клик для клиента (1 = GetMoney , 2 = NewLimit , 3 = DecisionInProgress , 4 = PaymentSchedule , 5 = DelayedPayment , 6 = Forbidden , 7 = GetMoneyInfo , 8 = Refuse )",
          "enum": [1, 2, 3, 4, 5, 6, 7, 8],
          "type": "integer"
        },
        "isPcfAvailable": {
          "description": "Доступен ли для показа в левом sidebar в ИБ и МБ",
          "type": "boolean"
        }
      }
    },
    "TopUpResult": {
      "description": "Результат запроса TopUp",
      "type": "object",
      "properties": {
        "proposal": {
          "$ref": "#/definitions/Proposal",
          "description": "Предложение"
        },
        "maxLimit": {
          "format": "double",
          "description": "Максимальный лимит",
          "type": "number"
        },
        "rate": {
          "format": "double",
          "description": "Ставка",
          "type": "number"
        }
      }
    },
    "PreApprovedRefinanceResult": {
      "description": "Результат запроса предварительно одобренных предложений с рефинансированием",
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/LoanApplication",
          "description": "Оформленная заявка на кредит"
        },
        "maxLimit": {
          "format": "double",
          "description": "Сумма максимального лимита по кредиту",
          "type": "number"
        },
        "interestRate": {
          "format": "double",
          "description": "Процентная ставка",
          "type": "number"
        },
        "annuity": {
          "format": "double",
          "description": "Ужемесячныей платеж",
          "type": "number"
        },
        "loanMonthPeriod": {
          "format": "int32",
          "description": "Срок кредитования",
          "type": "integer"
        },
        "decisionsCount": {
          "format": "int32",
          "description": "Количество подобранных решений",
          "type": "integer"
        },
        "refinanceSum": {
          "format": "double",
          "description": "Сумма на рефинансирование",
          "type": "number"
        }
      }
    },
    "Proposal": {
      "description": "Предложение банка клиенту",
      "type": "object",
      "properties": {
        "proposalId": {
          "format": "int32",
          "description": "Идентификатор предложения",
          "type": "integer"
        },
        "proposalType": {
          "format": "int32",
          "description": "Тип предложения (1 = Loan , 2 = Card , 4 = CardLimit , 5 = LoanCertificate , 6 = LoanTopUp )",
          "enum": [1, 2, 4, 5, 6],
          "type": "integer"
        },
        "description": { "description": "Текст предложения", "type": "string" },
        "displayMode": {
          "format": "int32",
          "description": "Режим отображения",
          "type": "integer"
        }
      }
    },
    "DecisionParams": {
      "description": "Параметры выбранного решения",
      "type": "object",
      "properties": {
        "selectedDecisionIdentifier": {
          "description": "Идентификатор решения",
          "type": "string"
        },
        "selectedSum": { "description": "Выбранная сумма", "type": "string" },
        "selectedRefinanseIdentifiers": {
          "description": "Выбранные идентификаторы рефинансируемых кредитов",
          "type": "array",
          "items": { "type": "string" }
        },
        "addSplitSell": {
          "description": "Добавить кредитную сплит карту к решению по кредиту",
          "type": "boolean"
        }
      }
    },
    "LoanApplicationDecision": {
      "description": "Решение по кредиту",
      "type": "object",
      "properties": {
        "decisionId": {
          "format": "int32",
          "description": "Уникальный идентификатор решения",
          "type": "integer"
        },
        "mainIdentifier": {
          "description": "Идентификатор решения",
          "type": "string"
        },
        "sum": {
          "format": "double",
          "description": "Сумма кредита",
          "type": "number"
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта кредита"
        },
        "monthlyPayment": {
          "format": "double",
          "description": "Ежемесячный платеж",
          "type": "number"
        },
        "lengthMonths": {
          "format": "int32",
          "description": "Срок кредита (мес.)",
          "type": "integer"
        },
        "interestRate": {
          "format": "double",
          "description": "Ставка по кредиту",
          "type": "number"
        },
        "interestRateNoInsurance": {
          "format": "double",
          "description": "Ставка по кредиту без страховки",
          "type": "number"
        },
        "offersSigningInInternetDelta": {
          "format": "double",
          "description": "Дельта при оформлении оферты в ИБ",
          "type": "number"
        },
        "allowedSum": {
          "format": "double",
          "description": "Максимальная сумма на руки\r\nSum&gt; - сумма тэгов RefinansSumResult",
          "type": "number"
        },
        "delayMonth": {
          "format": "int32",
          "description": "Отсрочка первого платежа",
          "type": "integer"
        },
        "brandMinSum": {
          "format": "double",
          "description": "Минимальная сумма для брэнда",
          "type": "number"
        },
        "sumIncrementStep": {
          "format": "double",
          "description": "Допустимый шаг изменения суммы кредита",
          "type": "number"
        },
        "loanApplicationRefinanceDataList": {
          "description": "Список рефинансируемых кредитов",
          "type": "array",
          "items": { "$ref": "#/definitions/LoanRefinanceData" }
        },
        "offerColor": {
          "format": "int32",
          "description": "Цвет решения. (0 = Undefined , 1 = White , 2 = Gray , 3 = Blue )",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "insuranceDiscount": {
          "format": "double",
          "description": "Дельта при подключении страховки",
          "type": "number"
        },
        "offerType": {
          "format": "int32",
          "description": "Тип предложения. (1 = ByTerm , 2 = ByAmount , 3 = Ideal , 4 = Underwriter , 5 = RTDM , 10 = AutoApproval , 11 = NextProcessing , 12 = AdductionDocuments , 13 = OfferSigned , 14 = Approval , 15 = LoanIssued )",
          "enum": [1, 2, 3, 4, 5, 10, 11, 12, 13, 14, 15],
          "type": "integer"
        },
        "expireDate": {
          "format": "date-time",
          "description": "Дата истечения срока действия решения",
          "type": "string"
        },
        "documentGroups": {
          "description": "Группа документов",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoanApplicationDecisionDocumentGroup"
          }
        },
        "splitSellCard": {
          "$ref": "#/definitions/SplitSellInfo",
          "description": "Данные по кредитной сплит карте в решении при её наличии"
        }
      }
    },
    "LoanRefinanceData": {
      "description": "Параметры рефинансируемого кредита в решении",
      "type": "object",
      "properties": {
        "refinanseIdentifier": {
          "description": "Идентификатор рефинансируемого кредита",
          "type": "string"
        },
        "state": {
          "description": "Выбран ли данный кредит для рефинансирования",
          "type": "boolean"
        },
        "refinansCreditProgramType": {
          "format": "int32",
          "description": "Тип рефинансируемого кредита (1 = Auto , 6 = Mortgage , 7 = CreditCard , 8 = PostalTransfer , 9 = Consumer , 105 = StateLoans , 106 = SyndicatedLoan , 107 = RevolvingCredit , 110 = PaymentCard , 111 = DebitCard , 112 = OverdraftCard , 113 = OverdraftBill , 114 = Leasing , 115 = MobileBill , 116 = LeaseContract , 117 = CurrentBill , 119 = OnlineServices , 120 = TelecommunicationsServicesBill , 121 = UtilityBill , 122 = InsurancePolicy , 123 = Factoring , 125 = BusinessDevelopmentCredit , 126 = WorkingCapitalCredit , 127 = EquipmentPurchaseCredit , 128 = ConstructionCredit , 129 = SharePurchaseCredit , 130 = Unknown , 131 = Other )",
          "enum": [
            1,
            6,
            7,
            8,
            9,
            105,
            106,
            107,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            119,
            120,
            121,
            122,
            123,
            125,
            126,
            127,
            128,
            129,
            130,
            131
          ],
          "type": "integer"
        },
        "refinansCreditProgramTypeName": {
          "description": "Наименование рефинансируемого кредита",
          "type": "string"
        },
        "description": {
          "description": "Текстовое описание",
          "type": "string"
        },
        "initialSum": {
          "format": "double",
          "description": "Первоначальная сумма рефинансируемого кредита",
          "type": "number"
        },
        "sumResult": {
          "format": "double",
          "description": "Сумма на рефинансирование кредита",
          "type": "number"
        },
        "openDate": {
          "format": "date-time",
          "description": "Дата открытия рефинансируемого кредита",
          "type": "string"
        }
      }
    },
    "LoanApplicationDecisionDocumentGroup": {
      "description": "Группа документов по решениям",
      "type": "object",
      "properties": {
        "name": { "description": "Наименование группы", "type": "string" },
        "documents": {
          "description": "Список документов",
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "SplitSellInfo": {
      "description": "Информация по одобренной кредитной сплит карте",
      "type": "object",
      "properties": {
        "limit": {
          "format": "double",
          "description": "Кредитный лимит",
          "type": "number"
        },
        "marketProductCode": {
          "description": "Код продукта в CMS",
          "type": "string"
        },
        "imageUrl": {
          "description": "URL изображения карты",
          "type": "string"
        },
        "title": { "description": "Заголовок предложения", "type": "string" },
        "message": { "description": "Текст предложения", "type": "string" }
      }
    },
    "LoanApplicationDecisionToMobile": {
      "description": "Решение по кредиту для мобилок",
      "type": "object",
      "properties": {
        "requestId": {
          "format": "int64",
          "description": "Id поручения",
          "type": "integer"
        },
        "office": {
          "$ref": "#/definitions/Office",
          "description": "Офис банка"
        },
        "downloadDocuments": {
          "description": "Список Id документов для скачивания",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        },
        "decisions": {
          "description": "Список решений по кредиту",
          "type": "array",
          "items": { "$ref": "#/definitions/LoanApplicationDecision" }
        }
      }
    },
    "FaqItemAttribute": {
      "description": "Атрибут элемента вопросов ответов (старая структура)\r\nПодлежит удалению в ближайшее время",
      "type": "object",
      "properties": {
        "name": { "description": "Имя атрибута (Вопрос)", "type": "string" },
        "purpose": {
          "format": "int32",
          "description": "Назначение (Тип продукта рефинанс или нет) (0 = Default , 1 = Proposal , 2 = Refinans )",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "description": { "description": "Описание (Ответ)", "type": "string" }
      }
    },
    "LoanApplicationDecisionLoadDocumentGroup": {
      "description": "Группа документов по решениям (для загрузки документов)",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Id группы",
          "type": "integer"
        },
        "name": { "description": "Наименование группы", "type": "string" },
        "hint": { "description": "Описание", "type": "string" },
        "status": {
          "format": "int32",
          "description": "Статус (0 = Empty , 1 = Ok , 2 = Error , 3 = Accept )",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": "Тип (1 = Document , 2 = Snils )",
          "enum": [1, 2],
          "type": "integer"
        },
        "selectedDocumentId": {
          "format": "int32",
          "description": "Id выбранной категории документа",
          "type": "integer"
        },
        "documents": {
          "description": "Список документов",
          "type": "array",
          "items": { "$ref": "#/definitions/LoanDocument" }
        },
        "content": {
          "description": "Загруженные файлы",
          "type": "array",
          "items": { "$ref": "#/definitions/LoanApplicationContent" }
        }
      }
    },
    "LoanDocument": {
      "description": "Документ",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "ID документа",
          "type": "integer"
        },
        "name": { "description": "Наименование документа", "type": "string" },
        "hint": { "description": "Описание", "type": "string" },
        "comment": { "description": "Комментарий", "type": "string" }
      }
    },
    "LoanApplicationContent": {
      "description": "Загруженный файл",
      "type": "object",
      "properties": {
        "name": { "description": "Наименование", "type": "string" },
        "value": { "description": "Значение", "type": "string" },
        "type": {
          "format": "int32",
          "description": "Тип (1 = Photo , 2 = Pdf , 3 = Text )",
          "enum": [1, 2, 3],
          "type": "integer"
        }
      }
    },
    "LoadLoanApplicationContent": {
      "description": "Модель для прикрепления контента (файла, СНИЛСа) к кредитной анкете",
      "type": "object",
      "properties": {
        "applicationId": {
          "format": "int32",
          "description": "Id кредитной анкеты",
          "type": "integer"
        },
        "loanDocumentId": {
          "format": "int32",
          "description": "Id загружаемого документа",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": "Тип (1 = Document , 2 = Snils )",
          "enum": [1, 2],
          "type": "integer"
        },
        "fileName": {
          "description": "Наименование файла с расширением",
          "type": "string"
        },
        "content": { "description": "Содержимое файла", "type": "string" },
        "miniatureImageContent": {
          "description": "Контент для миниатюры",
          "type": "string"
        }
      }
    },
    "LoanAggregatorState": {
      "description": "Состояние кредитного агрегатора",
      "type": "object",
      "properties": {
        "loanAggregatorStatus": {
          "format": "int32",
          "description": "Статус кредитного агрегатора (1 = Insurance , 2 = Enabled , 3 = Disabled , 4 = Empty )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "insuranceProposalResult": {
          "$ref": "#/definitions/InsuranceProposalResult",
          "description": "Предложение по страховке"
        },
        "isOnlineActivationAllowed": {
          "description": "Доступно ли клиенту оформление кредита онлайн (Турбоденьги, Готовое решение, Без формальностей)",
          "type": "boolean"
        },
        "loanSum": {
          "format": "double",
          "description": "Сумма кредита",
          "type": "number"
        },
        "interestRate": {
          "format": "double",
          "description": "Процентная ставка",
          "type": "number"
        },
        "personalOfferingLoanSum": {
          "format": "double",
          "description": "Сумма кредита (для баннера сервиса персональных предложений)",
          "type": "number"
        },
        "personalOfferingInterestRate": {
          "format": "double",
          "description": "Процентная ставка (для баннера сервиса персональных предложений)",
          "type": "number"
        },
        "personalOfferingDecisionType": {
          "format": "int32",
          "description": "Тип решения (для баннера сервиса персональных предложений) (1 = InstaLoan , 2 = Preapproved , 3 = NoFormalities , 4 = PreapprovedCertificate , 5 = TopUp , 6 = NewApplication , 7 = PreapprovedSplitSell , 8 = ApprovedApplicationDecision )",
          "enum": [1, 2, 3, 4, 5, 6, 7, 8],
          "type": "integer"
        }
      }
    },
    "LoanAggregatorData": {
      "description": "Данные кредитного агрегатора",
      "type": "object",
      "properties": {
        "loanAggregatorDecisions": {
          "description": "Решения кредитного агрегатора",
          "type": "array",
          "items": { "$ref": "#/definitions/LoanAggregatorDecision" }
        },
        "maxSum": {
          "format": "double",
          "description": "Максимальная сумма по решениям",
          "type": "number"
        },
        "minSum": {
          "format": "double",
          "description": "Минимальная сумма по решениям",
          "type": "number"
        },
        "refinances": {
          "description": "Кредиты клиента для рефинансирования (уникальные)",
          "type": "array",
          "items": { "$ref": "#/definitions/LoanRefinanceData" }
        },
        "applications": {
          "description": "Заявки на кредит",
          "type": "array",
          "items": { "$ref": "#/definitions/LoanApplication" }
        }
      }
    },
    "LoanAggregatorDecision": {
      "description": "Решение кредитного агрегатора",
      "type": "object",
      "properties": {
        "isOnlineActivationAllowed": {
          "description": "Решение доступно для онлайн активации",
          "type": "boolean"
        },
        "applicationId": {
          "format": "int32",
          "description": "Идентификатор заявки",
          "type": "integer"
        },
        "loanDecisionIdentifier": {
          "description": "Идентификатор решения",
          "type": "string"
        },
        "decisionType": {
          "format": "int32",
          "description": "Тип решения (1 = InstaLoan , 2 = Preapproved , 3 = NoFormalities , 4 = PreapprovedCertificate , 5 = TopUp , 6 = NewApplication , 7 = PreapprovedSplitSell , 8 = ApprovedApplicationDecision )",
          "enum": [1, 2, 3, 4, 5, 6, 7, 8],
          "type": "integer"
        },
        "priority": {
          "format": "int32",
          "description": "Приоритет решения",
          "type": "integer"
        },
        "minSum": {
          "format": "double",
          "description": "Минимальная сумма решения",
          "type": "number"
        },
        "maxSum": {
          "format": "double",
          "description": "Максимальная сумма решения",
          "type": "number"
        },
        "minLength": {
          "format": "double",
          "description": "Минимальный срок решения",
          "type": "number"
        },
        "maxLength": {
          "format": "double",
          "description": "Максимальный срок решения",
          "type": "number"
        },
        "lengthIncrementStep": {
          "format": "int32",
          "description": "Шаг увеличения срока",
          "type": "integer"
        },
        "refinances": {
          "description": "Рефинансируемые кредиты в решении",
          "type": "array",
          "items": { "$ref": "#/definitions/LoanRefinanceData" }
        },
        "interestRate": {
          "format": "double",
          "description": "Ставка для решения",
          "type": "number"
        },
        "delayMonth": {
          "format": "int32",
          "description": "Отсрочка первого платежа",
          "type": "integer"
        },
        "allowedSum": {
          "format": "double",
          "description": "Сумма на руки",
          "type": "number"
        },
        "proposalId": {
          "format": "int32",
          "description": "Идентификатор предложения",
          "type": "integer"
        },
        "proposalTypeId": {
          "format": "int32",
          "description": "Тип предложения",
          "type": "integer"
        },
        "insuranceDiscount": {
          "format": "double",
          "description": "Дисконт при подключении страховки",
          "type": "number"
        },
        "brandId": {
          "format": "int32",
          "description": "Идентификатор бренда",
          "type": "integer"
        },
        "isInsuranceRequired": {
          "description": "Сумма страховки",
          "type": "boolean"
        },
        "splitSellCard": {
          "$ref": "#/definitions/SplitSellInfo",
          "description": "Информация по сплит карте в случае её наличия"
        },
        "fixedRate": {
          "description": "Признак что ставка окончательная (влияет на фронте на отображения слова \"От\" рядом со ставкой)",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "LoanAggregatorActivateData": {
      "description": "Параметры решения кредитного агрегатора для активации",
      "type": "object",
      "properties": {
        "decisionType": {
          "format": "int32",
          "description": "Тип решения (1 = InstaLoan , 2 = Preapproved , 3 = NoFormalities , 4 = PreapprovedCertificate , 5 = TopUp , 6 = NewApplication , 7 = PreapprovedSplitSell , 8 = ApprovedApplicationDecision )",
          "enum": [1, 2, 3, 4, 5, 6, 7, 8],
          "type": "integer"
        },
        "proposalId": {
          "format": "int32",
          "description": "Идентификатор предложения",
          "type": "integer"
        },
        "applicationId": {
          "format": "int32",
          "description": "Идентификатор заявки",
          "type": "integer"
        },
        "loanDecisionIdentifier": {
          "description": "Идентификатор решения",
          "type": "string"
        },
        "selectedSum": {
          "description": "Сумма на руки. (По просьбе мобильщиков все суммы в строках)",
          "type": "string"
        },
        "sum": {
          "description": "Общая сумма кредита (сумма на руки + сумма рефина)",
          "type": "string"
        },
        "lengthMonths": {
          "format": "int32",
          "description": "Срок кредита, месяцев.",
          "type": "integer"
        },
        "interestRate": {
          "format": "double",
          "description": "Ставка для решения",
          "type": "number"
        },
        "contractRepaymentDate": {
          "format": "int32",
          "description": "День ежемесячного платежа",
          "type": "integer"
        },
        "selectedRefinanseIdentifiers": {
          "description": "Выбранные идентификаторы рефинансируемых кредитов",
          "type": "array",
          "items": { "type": "string" }
        },
        "referalLink": {
          "description": "Ссылка по которой потенциальный пришел",
          "type": "string"
        },
        "referalLinkSource": {
          "description": "Источник реферальной ссылки",
          "type": "string"
        },
        "addSplitSell": {
          "description": "Добавить кредитную сплит карту к решению по кредиту",
          "type": "boolean"
        }
      }
    },
    "LoansAggregatorState": {
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": " (1 = Insurance , 2 = Enabled , 3 = Disabled , 4 = Empty )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "insuranceProposalResult": {
          "$ref": "#/definitions/LoansAggregatorInsuranceResponse"
        },
        "isOnlineActivationAllowed": { "type": "boolean" },
        "loanSum": { "format": "double", "type": "number" },
        "interestRate": { "format": "double", "type": "number" },
        "personalOfferingLoanSum": { "format": "double", "type": "number" },
        "personalOfferingInterestRate": {
          "format": "double",
          "type": "number"
        },
        "personalOfferingOfferType": {
          "format": "int32",
          "description": " (1 = InstaLoan , 2 = Preapproved , 3 = NoFormalities , 4 = PreapprovedCertificate , 5 = TopUp , 6 = NewApplication , 7 = PreapprovedSplitSell , 8 = ApprovedApplicationDecision , 100 = Application )",
          "enum": [1, 2, 3, 4, 5, 6, 7, 8, 100],
          "type": "integer"
        }
      }
    },
    "LoansAggregatorInsuranceResponse": {
      "type": "object",
      "properties": {
        "isDiscountRateAvailable": { "type": "boolean" },
        "discountRate": { "format": "double", "type": "number" },
        "remainingDays": { "format": "int32", "type": "integer" }
      }
    },
    "LoansAggregatorRetailResponse": {
      "type": "object",
      "properties": {
        "maxSum": { "format": "double", "type": "number" },
        "minSum": { "format": "double", "type": "number" },
        "offers": {
          "type": "array",
          "items": { "$ref": "#/definitions/LoansAggregatorRetailOffer" }
        },
        "refinances": {
          "type": "array",
          "items": { "$ref": "#/definitions/LoansAggregatorRetailRefinance" }
        },
        "applications": {
          "type": "array",
          "items": { "$ref": "#/definitions/LoansAggregatorRetailApplication" }
        }
      }
    },
    "LoansAggregatorRetailOffer": {
      "type": "object",
      "properties": {
        "offerId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "clientId": { "format": "int64", "type": "integer" },
        "nativeId": { "format": "int64", "type": "integer" },
        "type": {
          "format": "int32",
          "description": " (1 = InstaLoan , 2 = Preapproved , 3 = NoFormalities , 4 = PreapprovedCertificate , 5 = TopUp , 6 = NewApplication , 7 = PreapprovedSplitSell , 8 = ApprovedApplicationDecision , 100 = Application )",
          "enum": [1, 2, 3, 4, 5, 6, 7, 8, 100],
          "type": "integer"
        },
        "priority": { "format": "int32", "type": "integer" },
        "minSum": { "format": "double", "type": "number" },
        "lengthIncrementStep": { "format": "int32", "type": "integer" },
        "maxSum": { "format": "double", "type": "number" },
        "minLength": { "format": "int32", "type": "integer" },
        "maxLength": { "format": "int32", "type": "integer" },
        "interestRate": { "format": "double", "type": "number" },
        "isInsuranceRequired": { "type": "boolean" },
        "isRefinanceAvailable": { "type": "boolean" },
        "params": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "insurances": {
          "type": "array",
          "items": { "$ref": "#/definitions/LoansAggregatorRetailInsurance" }
        },
        "refinances": {
          "type": "array",
          "items": { "$ref": "#/definitions/LoansAggregatorRetailRefinance" }
        }
      }
    },
    "LoansAggregatorRetailRefinance": {
      "type": "object",
      "properties": {
        "refinanceId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "refinanseIdentifier": { "type": "string" },
        "state": { "type": "boolean" },
        "refinanceCreditProgramType": {
          "format": "int32",
          "description": " (1 = Auto , 6 = Mortgage , 7 = CreditCard , 8 = PostalTransfer , 9 = Consumer , 105 = StateLoans , 106 = SyndicatedLoan , 107 = RevolvingCredit , 110 = PaymentCard , 111 = DebitCard , 112 = OverdraftCard , 113 = OverdraftBill , 114 = Leasing , 115 = MobileBill , 116 = LeaseContract , 117 = CurrentBill , 119 = OnlineServices , 120 = TelecommunicationsServicesBill , 121 = UtilityBill , 122 = InsurancePolicy , 123 = Factoring , 125 = BusinessDevelopmentCredit , 126 = WorkingCapitalCredit , 127 = EquipmentPurchaseCredit , 128 = ConstructionCredit , 129 = SharePurchaseCredit , 130 = Unknown , 131 = Other )",
          "enum": [
            1,
            6,
            7,
            8,
            9,
            105,
            106,
            107,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            119,
            120,
            121,
            122,
            123,
            125,
            126,
            127,
            128,
            129,
            130,
            131
          ],
          "type": "integer"
        },
        "refinanceCreditProgramTypeName": { "type": "string" },
        "description": { "type": "string" },
        "initialSum": { "format": "double", "type": "number" },
        "sumResult": { "format": "double", "type": "number" },
        "openDate": { "format": "date-time", "type": "string" }
      }
    },
    "LoansAggregatorRetailApplication": {
      "type": "object",
      "properties": {
        "applicationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "nativeId": { "format": "int64", "type": "integer" },
        "clientId": { "format": "int64", "type": "integer" },
        "state": {
          "format": "int32",
          "description": " (1 = Cancel , 2 = Refuse , 3 = Success , 4 = Completed , 5 = Expire , 6 = Active , 13 = ClientRefuse , 18 = DecisionReceived , 19 = PreliminarySuccess , 25 = WaitIssue , 31 = RefusedByOtherLoan , 255 = Draft , 256 = LoadDocuments , 257 = VerificationDocuments , 258 = DocumentComments )",
          "enum": [1, 2, 3, 4, 5, 6, 13, 18, 19, 25, 31, 255, 256, 257, 258],
          "type": "integer"
        },
        "expirationDate": { "format": "date-time", "type": "string" },
        "requestedSum": { "format": "double", "type": "number" },
        "lengthMonths": { "format": "int32", "type": "integer" },
        "applicationLoanType": {
          "format": "int32",
          "description": " (0 = Undefiened , 1 = PurposeLoan , 2 = ConsumerLoan , 3 = MicroExpressLoan , 4 = Overdraft )",
          "enum": [0, 1, 2, 3, 4],
          "type": "integer"
        },
        "isOnlineApplicationContainsNoScanDecisions": { "type": "boolean" }
      }
    },
    "LoansAggregatorRetailInsurance": {
      "type": "object",
      "properties": {
        "insuranceId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "brandId": { "format": "int64", "type": "integer" },
        "name": { "type": "string" },
        "priority": { "format": "int32", "type": "integer" },
        "params": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      }
    },
    "LoansAggregatorActivateCommand": {
      "type": "object",
      "properties": {
        "offerId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "insuranceBrandId": { "format": "int32", "type": "integer" },
        "selectedSum": { "format": "double", "type": "number" },
        "lengthMonths": { "format": "int32", "type": "integer" },
        "contractRepaymentDate": { "format": "int32", "type": "integer" },
        "selectedRefinanceIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "referalLink": { "type": "string" },
        "referalLinkSource": { "type": "string" }
      }
    },
    "LoansAggregatorCalculateCommand": {
      "type": "object",
      "properties": {
        "offerId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "insuranceBrandId": { "format": "int32", "type": "integer" },
        "selectedSum": { "format": "double", "type": "number" },
        "lengthMonths": { "format": "int32", "type": "integer" },
        "contractRepaymentDate": { "format": "int32", "type": "integer" },
        "selectedRefinanceIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "LoansAggregatorCalculateResponse": {
      "type": "object",
      "properties": {
        "offerId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "monthlyPayment": { "format": "double", "type": "number" },
        "interestRate": { "format": "double", "type": "number" },
        "sum": { "format": "double", "type": "number" },
        "interestSum": { "format": "double", "type": "number" },
        "insuranceSum": { "format": "double", "type": "number" },
        "isAvailable": { "type": "boolean" }
      }
    },
    "Loyalty": {
      "description": "Информация бонусной программы клиента",
      "type": "object",
      "properties": {
        "loyaltyId": {
          "format": "int32",
          "description": "Идентификатор в бонусной программе",
          "type": "integer"
        },
        "balance": {
          "format": "double",
          "description": "Баланс, баллы",
          "type": "number"
        },
        "status": {
          "format": "int32",
          "description": "Статус (1 = Enabled , 2 = BlackList , 3 = Closed )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "level": {
          "format": "int32",
          "description": "Уровень (1 = Classic , 2 = Gold , 3 = Platinum , 4 = Priority )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "monthOperations": {
          "format": "int32",
          "description": "Количество бонусируемых операций с начала месяца",
          "type": "integer"
        },
        "targetOperations": {
          "format": "int32",
          "description": "Количество бонусируемых операций до цели",
          "type": "integer"
        },
        "monthSum": {
          "format": "double",
          "description": "Квалифицирующая сумма покупок",
          "type": "number"
        },
        "targetSum": {
          "format": "double",
          "description": "Квалифицирующая сумма покупок до цели",
          "type": "number"
        },
        "targetPercent": {
          "format": "int32",
          "description": "Процент выполнения целевого уровня",
          "type": "integer"
        },
        "expPoints": {
          "description": "Таблица по сгораниям баллов",
          "type": "array",
          "items": { "$ref": "#/definitions/LoyaltyExpPoint" }
        },
        "benefits": {
          "description": "Таблица доступных льгот",
          "type": "array",
          "items": { "$ref": "#/definitions/LoyaltyBenefit" }
        },
        "pointBalances": {
          "description": "Целевые баллы",
          "type": "array",
          "items": { "$ref": "#/definitions/LoyaltyPoint" }
        },
        "programId": {
          "format": "int32",
          "description": "Программа лояльности (1 = PsbBonus , 2 = PsbPlanet , 3 = TnsEnergo , 4 = WithoutBorders , 5 = FlagmanCashBack , 6 = Cosmos , 7 = Cska )",
          "enum": [1, 2, 3, 4, 5, 6, 7],
          "type": "integer"
        }
      }
    },
    "LoyaltyExpPoint": {
      "description": "Сгорание баллов",
      "type": "object",
      "properties": {
        "code": { "description": "Тип баллов", "type": "string" },
        "name": { "description": "Описание баллов", "type": "string" },
        "date": {
          "format": "date-time",
          "description": "Дата",
          "type": "string"
        },
        "points": {
          "format": "double",
          "description": "Количество баллов",
          "type": "number"
        }
      }
    },
    "LoyaltyBenefit": {
      "description": "Льгота в программе Лояльность",
      "type": "object",
      "properties": {
        "benefitId": {
          "format": "int64",
          "description": "ID льготы",
          "type": "integer"
        },
        "name": { "description": "Наименование льготы", "type": "string" },
        "count": {
          "format": "int32",
          "description": "Количество",
          "type": "integer"
        }
      }
    },
    "LoyaltyPoint": {
      "description": "Целевые баллы",
      "type": "object",
      "properties": {
        "code": { "description": "Тип баллов", "type": "string" },
        "name": { "description": "Описание", "type": "string" },
        "balance": {
          "format": "double",
          "description": "Количество",
          "type": "number"
        }
      }
    },
    "LoyaltyProgramInfo": {
      "description": "Возвращает расширенную информацию о программе лояльности",
      "type": "object",
      "properties": {
        "scoreStatementExists": {
          "description": "Доступна ли выписка по баллам",
          "type": "boolean"
        },
        "scoreStatementName": {
          "description": "Название для выписки по баллам",
          "type": "string"
        },
        "expiringScoreStatementExists": {
          "description": "Доступна ли выписка по сгоранию баллов",
          "type": "boolean"
        },
        "expiringScoreStatementName": {
          "description": "Название выписки по сгоранию баллов",
          "type": "string"
        },
        "expiringScoreStatementEmptyDescripton": {
          "description": "Описание при пустой выписке сгорания баллов",
          "type": "string"
        },
        "pointNameSingle": {
          "description": "Название балла в единственном числе (например - \"балл\")",
          "type": "string"
        },
        "pointNamePlural": {
          "description": "Название баллов во множественном числе (например - \"баллы\")",
          "type": "string"
        },
        "pointNamePluralGenitive": {
          "description": "Название баллов в родительском падеже множественного числа (например - \"баллов\")",
          "type": "string"
        },
        "showTopBlock": {
          "description": "Показывать верхний блок с рисунком и суммой баллов",
          "type": "boolean"
        },
        "showScore": {
          "description": "Показывать сумму баллов в верхнем блоке",
          "type": "boolean"
        },
        "topScoreBlockImageTopUrl": {
          "description": "Верхняя половина картинки в верхнем блоке",
          "type": "string"
        },
        "topScoreBlockImageBottomUrl": {
          "description": "Нижняя половина картинки в верхнем блоке",
          "type": "string"
        }
      }
    },
    "LoyaltyStatement": {
      "description": "Выписка по бонусному счету",
      "type": "object",
      "properties": {
        "incomingBalance": {
          "format": "double",
          "description": "Входящий баланс, баллы",
          "type": "number"
        },
        "outcomingBalance": {
          "format": "double",
          "description": "Иcходящий баланс, баллы",
          "type": "number"
        },
        "scoreSaved": {
          "format": "double",
          "description": "Накоплено баллов",
          "type": "number"
        },
        "lastStatementPeriod": {
          "format": "date-time",
          "description": "Период последней выписки",
          "type": "string"
        },
        "scoreSpent": {
          "format": "double",
          "description": "Израсходованно баллов",
          "type": "number"
        },
        "transactions": {
          "description": "Детализация транзакций",
          "type": "array",
          "items": { "$ref": "#/definitions/LoyaltyTransaction" }
        }
      }
    },
    "LoyaltyTransaction": {
      "description": "Транзакция по бонусному счету",
      "type": "object",
      "properties": {
        "outcomingBalance": {
          "format": "double",
          "description": "Баланс после операции, баллы",
          "type": "number"
        },
        "date": {
          "format": "date-time",
          "description": "Дата операции",
          "type": "string"
        },
        "operationName": {
          "description": "Наименование операции",
          "type": "string"
        },
        "points": {
          "format": "double",
          "description": "Сумма, баллы",
          "type": "number"
        },
        "operationRoubleSum": {
          "format": "double",
          "description": "Форматированная сумма, рубли",
          "type": "number"
        }
      }
    },
    "LoyaltyStatementFilterParams": {
      "description": "Параметры отбора выписки бонусного счета",
      "type": "object",
      "properties": {
        "sumFrom": {
          "format": "double",
          "description": "Сумма с",
          "type": "number"
        },
        "sumTo": {
          "format": "double",
          "description": "Сумма по",
          "type": "number"
        },
        "income": { "description": "Приходы", "type": "boolean" },
        "outcome": { "description": "Расходы", "type": "boolean" }
      }
    },
    "LoyaltyStatementFull": {
      "description": "Полная выписка по программе лояльности",
      "type": "object",
      "properties": {
        "incomingBalance": {
          "format": "double",
          "description": "Входящий баланс, баллы",
          "type": "number"
        },
        "outcomingBalance": {
          "format": "double",
          "description": "Иcходящий баланс, баллы",
          "type": "number"
        },
        "scoreAcquired": {
          "format": "double",
          "description": "Накоплено баллов",
          "type": "number"
        },
        "scoreSpent": {
          "format": "double",
          "description": "Израсходованно баллов",
          "type": "number"
        },
        "programTransactionGroups": {
          "description": "Список групп транзакций по программам выпуска карт",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoyaltyProgramTransactionGroupInfo"
          }
        }
      }
    },
    "LoyaltyProgramTransactionGroupInfo": {
      "description": "Сгруппированные транзакции",
      "type": "object",
      "properties": {
        "programID": {
          "format": "int32",
          "description": "Идентификатор программы выпуска (если есть)",
          "type": "integer"
        },
        "programName": {
          "description": "Наименование программы выпуска",
          "type": "string"
        },
        "categoryTransactionGroups": {
          "description": "Сгруппированные по категориями транзакции",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoyaltyCategoryTransactionGroupInfo"
          }
        }
      }
    },
    "LoyaltyCategoryTransactionGroupInfo": {
      "description": "Сгруппированные по категориям транзакции",
      "type": "object",
      "properties": {
        "categoryID": {
          "format": "int32",
          "description": "Идентификатор категории кэшбэка (если есть)",
          "type": "integer"
        },
        "name": { "description": "Наименование группы", "type": "string" },
        "date": {
          "format": "date-time",
          "description": "Дата (если возможно)",
          "type": "string"
        },
        "amount": {
          "format": "double",
          "description": "Количество баллов",
          "type": "number"
        },
        "isPromo": {
          "description": "Является промо-категорией",
          "type": "boolean"
        }
      }
    },
    "LoyaltyCashbackTransactions": {
      "description": "Доступные для кэшбек операции",
      "type": "object",
      "properties": {
        "transactions": {
          "description": "Доступные операции",
          "type": "array",
          "items": { "$ref": "#/definitions/LoyaltyCashbackTransaction" }
        },
        "pointNeed": {
          "format": "double",
          "description": "Сумма баллов недостающая до минимального пакета",
          "type": "number"
        }
      }
    },
    "LoyaltyCashbackTransaction": {
      "description": "Доступная для кэшбек операция",
      "type": "object",
      "properties": {
        "transactionId": { "description": "ID операции", "type": "string" },
        "createDate": {
          "format": "date-time",
          "description": "Дата создания действия участника в системе",
          "type": "string"
        },
        "transactionDate": {
          "format": "date-time",
          "description": "Дата проводки баллов",
          "type": "string"
        },
        "amount": {
          "format": "double",
          "description": "Сумма в действии участника (MA)",
          "type": "number"
        },
        "points": {
          "format": "double",
          "description": "Количество баллов",
          "type": "number"
        },
        "incomingBalance": {
          "format": "double",
          "description": "Входящий баланс баллов",
          "type": "number"
        },
        "outgoingBalance": {
          "format": "double",
          "description": "Исходящий баланс баллов",
          "type": "number"
        },
        "operationCode": {
          "description": "Код операции PSB-RETAIL",
          "type": "string"
        },
        "expireDate": {
          "format": "date-time",
          "description": "Дата сгорания баллов",
          "type": "string"
        },
        "roubles": {
          "format": "double",
          "description": "Сумма в рублях, оплаченная за счет баллов",
          "type": "number"
        },
        "requestId": {
          "format": "int64",
          "description": "ID поручения PSB-Retail",
          "type": "integer"
        },
        "description": {
          "description": "Описание операции W4",
          "type": "string"
        },
        "contractNumber": { "description": "Номер контракта", "type": "string" }
      }
    },
    "SendOneMonthStatementByEmailParams": {
      "description": "",
      "type": "object",
      "properties": {
        "statementDate": {
          "format": "date-time",
          "description": "Дата выписки",
          "type": "string"
        },
        "email": { "description": "Адрес электронной почты", "type": "string" }
      }
    },
    "SendHistoryByEmailParams": {
      "description": "Параметры отправки истории операций по email",
      "type": "object",
      "properties": {
        "contractId": {
          "format": "int32",
          "description": "Идентификатор контракта",
          "type": "integer"
        },
        "startDate": {
          "format": "date-time",
          "description": "Дата начала",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "Дата окончания",
          "type": "string"
        },
        "email": { "description": "Адрес электронной почты", "type": "string" }
      }
    },
    "LoyaltyProduct": {
      "description": "Информация о бонусной программе из продуктового каталога",
      "type": "object",
      "properties": {
        "loyaltyProgramType": {
          "format": "int32",
          "description": "Тип программы лояльности (1 = PsbBonus , 2 = PsbPlanet , 3 = TnsEnergo , 4 = WithoutBorders , 5 = FlagmanCashBack , 6 = Cosmos , 7 = Cska )",
          "enum": [1, 2, 3, 4, 5, 6, 7],
          "type": "integer"
        },
        "name": { "description": "Наименование", "type": "string" },
        "description": { "description": "Описание", "type": "string" },
        "productUrl": {
          "description": "Ссылка на описание продукта",
          "type": "string"
        },
        "productTariffUrl": {
          "description": "Ссылка на описание тарифа",
          "type": "string"
        },
        "purpose": { "description": "Назначение", "type": "string" },
        "imageSrc": { "description": "Изображение", "type": "string" },
        "attributes": {
          "description": "Список атрибутов",
          "type": "array",
          "items": { "$ref": "#/definitions/LoyaltyProductAttribute" }
        }
      }
    },
    "LoyaltyProductAttribute": {
      "description": "Информация о атрибуте бонусной программы из продуктового каталога",
      "type": "object",
      "properties": {
        "value": { "description": "Основное значение", "type": "string" },
        "type": { "format": "int32", "description": "Тип", "type": "integer" },
        "name": { "description": "Наименование", "type": "string" },
        "style": { "description": "Стиль", "type": "string" },
        "active": { "description": "Активен", "type": "boolean" },
        "purpose": {
          "format": "int32",
          "description": "Назначение",
          "type": "integer"
        },
        "additionalValue": {
          "description": "Дополнительное значение",
          "type": "string"
        },
        "description": { "description": "Описание", "type": "string" },
        "attributeUrl": { "description": "Url атрибута", "type": "string" },
        "code": { "description": "Код атрибута", "type": "string" }
      }
    },
    "LoyaltyPartner": {
      "description": "Партнёр в программах лояльности",
      "required": [
        "systemName",
        "name",
        "description",
        "title",
        "url",
        "offers"
      ],
      "type": "object",
      "properties": {
        "partnerID": {
          "format": "int32",
          "description": "ID партнера",
          "type": "integer"
        },
        "systemName": {
          "description": "Системное наименование",
          "type": "string"
        },
        "name": { "description": "Наименование", "type": "string" },
        "description": { "description": "Описание", "type": "string" },
        "title": { "description": "Заголовок", "type": "string" },
        "imageUrl": { "description": "Логотип", "type": "string" },
        "url": { "description": "Ссылка на сайт партнера", "type": "string" },
        "offers": {
          "description": "Предложения партнера",
          "type": "array",
          "items": { "$ref": "#/definitions/LoyaltyPartnerOffer" }
        },
        "addresses": {
          "description": "Адреса",
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "LoyaltyPartnerOffer": {
      "description": "Предложение партнёра в программах лояльности",
      "required": [
        "systemName",
        "partnerSystemName",
        "partnerTitle",
        "partnerName",
        "name",
        "bonusType",
        "description",
        "startDate",
        "url",
        "juristicConditionsUrl"
      ],
      "type": "object",
      "properties": {
        "systemName": {
          "description": "Системное наименование",
          "type": "string"
        },
        "partnerSystemName": {
          "description": "Системное наименование партнера",
          "type": "string"
        },
        "partnerTitle": {
          "description": "Заголовок партнера",
          "type": "string"
        },
        "partnerName": {
          "description": "Наименование партнера",
          "type": "string"
        },
        "name": { "description": "Наименование", "type": "string" },
        "bonusType": { "description": "Тип бонуса", "type": "string" },
        "bonusValue": { "description": "Значение бонуса", "type": "string" },
        "description": { "description": "Описание", "type": "string" },
        "startDate": {
          "format": "date-time",
          "description": "Дата начала действия предложения",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "Дата окончания действия предложения",
          "type": "string"
        },
        "url": {
          "description": "Ссылка на сайт партнера/предложения",
          "type": "string"
        },
        "backgroundColor": {
          "description": "Цвет фона на случай, если нет картинки",
          "type": "string"
        },
        "imageUrl": { "description": "Логотип", "type": "string" },
        "backgroundImageUrl": {
          "description": "Картинка-фон",
          "type": "string"
        },
        "conditions": { "description": "Описание условий", "type": "string" },
        "juristicConditionsUrl": {
          "description": "Ссылка на pdf с условиями программы лояльности ПСБ",
          "type": "string"
        },
        "addresses": {
          "description": "Адреса",
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "LoyaltyPartnerShortInfo": {
      "description": "Основная информация о партнёре в программах лояльности",
      "required": ["systemName", "title", "name"],
      "type": "object",
      "properties": {
        "systemName": {
          "description": "Системное наименование",
          "type": "string"
        },
        "title": { "description": "Заголовок", "type": "string" },
        "name": { "description": "Наименование", "type": "string" },
        "imageUrl": { "description": "Картинка", "type": "string" }
      }
    },
    "LoyaltyPartnerOfferShortInfo": {
      "description": "Основная информация о предложение партнёра в программах лояльности",
      "required": [
        "systemName",
        "partnerSystemName",
        "partnerTitle",
        "name",
        "bonusType"
      ],
      "type": "object",
      "properties": {
        "systemName": {
          "description": "Системное наименование",
          "type": "string"
        },
        "partnerSystemName": {
          "description": "Системное наименование партнера",
          "type": "string"
        },
        "partnerTitle": {
          "description": "Заголовок партнера",
          "type": "string"
        },
        "name": { "description": "Наименование", "type": "string" },
        "bonusType": { "description": "Тип бонуса", "type": "string" },
        "imageUrl": { "description": "Логотип", "type": "string" },
        "backgroundImageUrl": {
          "description": "Картинка-фон",
          "type": "string"
        }
      }
    },
    "BonusAccountInformation": {
      "description": "Информация по ресурсам для экрана бонусного счета программы лояльности",
      "required": ["bonusAmount"],
      "type": "object",
      "properties": {
        "bonusAmount": {
          "format": "int32",
          "description": "Баланс баллов",
          "type": "integer"
        },
        "bonusInformation": {
          "description": "Коллекция текстовых ресурсов для формирования экрана информации при нажатии на кнопку (i) на экране бонусного счета",
          "type": "array",
          "items": { "$ref": "#/definitions/LoyaltyResource" }
        },
        "accrualDateInfo": {
          "description": "Обработанная информация по дате начисления бонусов.",
          "type": "string"
        },
        "loyaltyStatus": {
          "format": "int32",
          "description": "Статус клиента в бонусной программе (1 = Enabled , 2 = BlackList , 3 = Closed )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "bonusStatementInfo": {
          "$ref": "#/definitions/BonusStatementInformation",
          "description": "Информация для экрана бонусной выписки"
        },
        "siteUrl": {
          "description": "Ссылка на сайт магазина партнера кобренда",
          "type": "string"
        },
        "cashBackConditionsUrl": {
          "description": "Ссылка на раздел с условиями по бонусной программе",
          "type": "string"
        }
      }
    },
    "LoyaltyResource": {
      "description": "Ресурс для экранов лояльности в ИБ и МП",
      "required": ["title", "description"],
      "type": "object",
      "properties": {
        "code": { "description": "Кодовое обозначение", "type": "string" },
        "title": { "description": "Заголовок", "type": "string" },
        "description": { "description": "Описание", "type": "string" }
      }
    },
    "BonusStatementInformation": {
      "description": "Информация по ресурсам для экрана бонусной выписки",
      "type": "object",
      "properties": {
        "dateInfo": {
          "description": "Информация по дате детализации бонусных баллов",
          "type": "string"
        },
        "availableDay": {
          "format": "int32",
          "description": "Информация о дне доступности бонусной выписки",
          "type": "integer"
        }
      }
    },
    "LoyaltyProgramShortInfo": {
      "description": "Основная информация об программе лояльности",
      "required": ["name", "loyaltyProgramType", "balance"],
      "type": "object",
      "properties": {
        "name": { "description": "Наименование программы", "type": "string" },
        "loyaltyProgramType": {
          "format": "int32",
          "description": "Типы программы (1 = PsbBonus , 2 = PsbPlanet , 3 = TnsEnergo , 4 = WithoutBorders , 5 = FlagmanCashBack , 6 = Cosmos , 7 = Cska )",
          "enum": [1, 2, 3, 4, 5, 6, 7],
          "type": "integer"
        },
        "balance": {
          "format": "int32",
          "description": "Баланс, баллы",
          "type": "integer"
        },
        "status": {
          "format": "int32",
          "description": "Статус (1 = Enabled , 2 = BlackList , 3 = Closed )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "imageUrl": { "description": "Логотип", "type": "string" }
      }
    },
    "LoyaltyCardInfo": {
      "description": "Информация по карте с кэшбэком",
      "required": ["name", "number", "smallImageSrc"],
      "type": "object",
      "properties": {
        "name": { "description": "Наименование карты", "type": "string" },
        "number": { "description": "Номер карты", "type": "string" },
        "smallImageSrc": {
          "description": "Uri пиктограммы \"рубашки\" карты",
          "type": "string"
        },
        "financialGroupTypeName": {
          "description": "Наименование типа финансовой группы",
          "type": "string"
        },
        "connectedPackages": {
          "description": "Список подключенных пакетов лояльности",
          "type": "array",
          "items": { "$ref": "#/definitions/LoyaltyPackage" }
        },
        "bonusAddConditions": {
          "description": "Дополнительные условия начисления бонуса",
          "type": "string"
        },
        "bonusLimitInfo": {
          "description": "Информация по лимитам бонусов",
          "type": "string"
        },
        "tariffNameIndex": {
          "format": "int32",
          "description": "Ссылка на наименование тарифа по карте",
          "type": "integer"
        },
        "cardAccountId": {
          "format": "int64",
          "description": "Идентификатор карточного счёта во внешней системе",
          "type": "integer"
        },
        "contractName": {
          "description": "Наименование контракта карты",
          "type": "string"
        },
        "loyaltyProgramType": {
          "format": "int32",
          "description": "Программа лояльности (1 = PsbBonus , 2 = PsbPlanet , 3 = TnsEnergo , 4 = WithoutBorders , 5 = FlagmanCashBack , 6 = Cosmos , 7 = Cska )",
          "enum": [1, 2, 3, 4, 5, 6, 7],
          "type": "integer"
        },
        "productType": {
          "format": "int32",
          "description": "Тип продукта лояльности (1 = YourCashback , 2 = OrangePremiumClub , 3 = YourCashbackPlus , 4 = DoubleCachback , 5 = YourPlus , 6 = SalaryFlagman , 7 = Novatek , 8 = PsbEmployees , 9 = Cosmos , 10 = Roscosmos , 11 = StrongPeople , 12 = OrangePremiumClubNew , 13 = SalaryCashback , 14 = SalaryChoice , 15 = Cska , 16 = OrangePremiumClubCska )",
          "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],
          "type": "integer"
        },
        "cardId": {
          "format": "int64",
          "description": "Идентификатор карты во внешней системе",
          "type": "integer"
        }
      }
    },
    "LiteLoyaltyDashboardData": {
      "description": "Основные данные для дашборда бонусов",
      "type": "object",
      "properties": {
        "flagmanInfo": {
          "$ref": "#/definitions/FlagmanCashBackInfo",
          "description": "Информация по бонусной программе Флагман"
        },
        "partnersInfo": {
          "$ref": "#/definitions/PartnersInfo",
          "description": "Информация по партнерам программы лояльности"
        },
        "cskaInfo": {
          "$ref": "#/definitions/CskaInfo",
          "description": "Информация по бонусной программе ЦСКА"
        }
      }
    },
    "FlagmanCashBackInfo": {
      "description": "Информация для дашборда бонусов по бонусной программе Флагман",
      "required": ["bonusAmount"],
      "type": "object",
      "properties": {
        "bonusAmount": {
          "format": "int32",
          "description": "Баланс баллов",
          "type": "integer"
        }
      }
    },
    "PartnersInfo": {
      "description": "Информация для дашборда бонусов по партнерам программы лояльности",
      "required": ["partnersCount"],
      "type": "object",
      "properties": {
        "partnersCount": {
          "format": "int32",
          "description": "Количество партнеров",
          "type": "integer"
        }
      }
    },
    "CskaInfo": {
      "description": "Информация для дашборда бонусов по бонусной программе ЦСКА",
      "required": ["bitHorsesAmount"],
      "type": "object",
      "properties": {
        "bitHorsesAmount": {
          "format": "int32",
          "description": "Баланс бит-коней",
          "type": "integer"
        }
      }
    },
    "MarketplaceUniversalProductOrderParams": {
      "description": "Универсальные параметры заказа из н/а зоны.",
      "type": "object",
      "properties": {
        "params": {
          "description": "Прочие параметры операции",
          "type": "object",
          "additionalProperties": { "type": "string" }
        },
        "productCatalogIdentifier": {
          "description": "Идентификатор продукта.",
          "type": "string"
        },
        "referalLink": {
          "description": "Ссылка по которой потенциальный клиент пришел",
          "type": "string"
        },
        "referalLinkSource": {
          "description": "Источник реферальной ссылки",
          "type": "string"
        },
        "cardProductID": {
          "format": "int32",
          "description": "Предпочительный карточный продукт.",
          "type": "integer"
        },
        "currencyID": {
          "format": "int32",
          "description": "Предпочительная валюта.",
          "type": "integer"
        }
      }
    },
    "MarketplaceConsumerLoanProductOrderParams": {
      "description": "Параметры заказа потребительского кредита из н/а зоны.",
      "type": "object",
      "properties": {
        "sum": {
          "format": "double",
          "description": "Сумма кредита.",
          "type": "number"
        },
        "lengthMonths": {
          "format": "int32",
          "description": "Срок кредита, месяцев.",
          "type": "integer"
        },
        "dsaEmployeeNumber": {
          "description": "Табельный номер DSA.",
          "type": "string"
        },
        "productCatalogIdentifier": {
          "description": "Идентификатор продукта.",
          "type": "string"
        },
        "referalLink": {
          "description": "Ссылка по которой потенциальный клиент пришел",
          "type": "string"
        },
        "referalLinkSource": {
          "description": "Источник реферальной ссылки",
          "type": "string"
        },
        "cardProductID": {
          "format": "int32",
          "description": "Предпочительный карточный продукт.",
          "type": "integer"
        },
        "currencyID": {
          "format": "int32",
          "description": "Предпочительная валюта.",
          "type": "integer"
        }
      }
    },
    "MarketplaceMortgageLoanProductOrderParams": {
      "description": "Параметры заказа ипотеки из н/а зоны.",
      "type": "object",
      "properties": {
        "mortgageLoanType": {
          "format": "int32",
          "description": "Тип продукта",
          "type": "integer"
        },
        "mortgagePurpose": {
          "format": "int32",
          "description": "Цель ипотеки",
          "type": "integer"
        },
        "mortgageCreditType": {
          "format": "int32",
          "description": "Вид ипотечного кредита",
          "type": "integer"
        },
        "realtyType": {
          "format": "int32",
          "description": "Вид недвижимости",
          "type": "integer"
        },
        "idRegion": {
          "format": "int32",
          "description": "Регион приобретаемой недвижимости",
          "type": "integer"
        },
        "expressMortgage": {
          "description": "Экспресс ипотека",
          "type": "boolean"
        },
        "initialPayment": {
          "format": "double",
          "description": "Первоначальный взнос",
          "type": "number"
        },
        "initialPaymentCurrencyID": {
          "format": "int32",
          "description": "Валюта первоначального взноса",
          "type": "integer"
        },
        "pledgeValue": {
          "format": "double",
          "description": "Стоимость предмета залога",
          "type": "number"
        },
        "pledgeCurrencyID": {
          "format": "int32",
          "description": "Валюта объекта залога",
          "type": "integer"
        },
        "takeMothersCapitalIntoAccount": {
          "description": "Учесть сумму средств МСК",
          "type": "boolean"
        },
        "federalDistrictCode": {
          "format": "int32",
          "description": "Код федерального округа",
          "type": "integer"
        },
        "lifeInsuranceIncuded": {
          "description": "Страхование жизни",
          "type": "boolean"
        },
        "monthlyPayment": {
          "format": "double",
          "description": "Ежемесячный платеж",
          "type": "number"
        },
        "interestRate": {
          "format": "double",
          "description": "Процентная ставка",
          "type": "number"
        },
        "officeId": {
          "format": "int32",
          "description": "ID ипотечного центра",
          "type": "integer"
        },
        "sum": {
          "format": "double",
          "description": "Сумма кредита.",
          "type": "number"
        },
        "lengthMonths": {
          "format": "int32",
          "description": "Срок кредита, месяцев.",
          "type": "integer"
        },
        "dsaEmployeeNumber": {
          "description": "Табельный номер DSA.",
          "type": "string"
        },
        "productCatalogIdentifier": {
          "description": "Идентификатор продукта.",
          "type": "string"
        },
        "referalLink": {
          "description": "Ссылка по которой потенциальный клиент пришел",
          "type": "string"
        },
        "referalLinkSource": {
          "description": "Источник реферальной ссылки",
          "type": "string"
        },
        "cardProductID": {
          "format": "int32",
          "description": "Предпочительный карточный продукт.",
          "type": "integer"
        },
        "currencyID": {
          "format": "int32",
          "description": "Предпочительная валюта.",
          "type": "integer"
        }
      }
    },
    "CalculatorDataFilter": {
      "type": "object",
      "properties": {
        "isExpressAllowed": { "type": "boolean" },
        "federalDistrictCode": { "format": "int32", "type": "integer" },
        "mortgageProgramType": {
          "format": "int32",
          "description": " (0 = Undefined , 1 = ClassicMortgage , 2 = MilitaryMortgage , 4 = FamilyMortgage , 5 = FarEasternMortgage , 6 = ExistingPropertySecuredLoan , 7 = StateProgram2020 , 8 = MilitaryMortgage2020 )",
          "enum": [0, 1, 2, 4, 5, 6, 7, 8],
          "type": "integer"
        },
        "mortgagePurpose": {
          "format": "int32",
          "description": " (0 = Undefined , 1 = RealEstateAcquisition , 2 = Refinancing , 3 = SecuredLoan )",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "mortgageCreditType": {
          "format": "int32",
          "description": " (0 = Undefined , 1 = UnderConstructionHousing , 2 = FinishedHousing , 3 = CashForAnyPurpose )",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "loanPledgeType": {
          "format": "int32",
          "description": " (0 = Undefined , 1 = Flat , 2 = HouseWithPlot , 3 = BlockWithPlot , 4 = Apartments , 5 = BlockedHouse , 6 = PlotWithoutHouse , 7 = Garage )",
          "enum": [0, 1, 2, 3, 4, 5, 6, 7],
          "type": "integer"
        }
      }
    },
    "LoanCalculatorDataDTO": {
      "type": "object",
      "properties": {
        "brandID": { "format": "int32", "type": "integer" },
        "isRefinancing": { "type": "boolean" },
        "isExpressAllowed": { "type": "boolean" },
        "isRegionsSpecific": { "type": "boolean" },
        "rateMin": { "format": "double", "type": "number" },
        "rateMax": { "format": "double", "type": "number" },
        "durationMin": { "format": "int32", "type": "integer" },
        "durationMax": { "format": "int32", "type": "integer" },
        "limitMin": { "format": "double", "type": "number" },
        "limitMax": { "format": "double", "type": "number" },
        "ageMax": { "format": "int32", "type": "integer" },
        "kf": { "format": "double", "type": "number" },
        "averageLiveCostMsk": { "format": "double", "type": "number" },
        "averageLiveCostReg": { "format": "double", "type": "number" },
        "loanType": {
          "format": "int32",
          "description": " (0 = Undefiened , 1 = PurposeLoan , 2 = ConsumerLoan , 3 = MicroExpressLoan , 4 = Overdraft )",
          "enum": [0, 1, 2, 3, 4],
          "type": "integer"
        },
        "initialFeeRateMin": { "format": "double", "type": "number" },
        "initialFeeRateMax": { "format": "double", "type": "number" },
        "allowedAccessChannels": {
          "format": "int32",
          "description": " (1 = Phone , 2 = WWW , 4 = Mobile , 8 = SMS , 16 = Kiosk , 32 = MobileApp , 64 = TabletApp , 128 = InternetBank , 256 = Manager , 512 = WebManager , 1024 = BankAtWork , 2048 = MobileAppNew , 4096 = AtmViaProvider , 6398 = ActualClientChannels , 8192 = MobileNetwork , 16384 = Partner , 32767 = AllChannels )",
          "enum": [
            1,
            2,
            4,
            8,
            16,
            32,
            64,
            128,
            256,
            512,
            1024,
            2048,
            4096,
            6398,
            8192,
            16384,
            32767
          ],
          "type": "integer"
        },
        "programID": {
          "format": "int32",
          "description": " (4 = Customer , 7 = MortgageProgram , 10 = Overdraft )",
          "enum": [4, 7, 10],
          "type": "integer"
        },
        "creditPledgeRateMin": { "format": "double", "type": "number" },
        "creditPledgeRateMax": { "format": "double", "type": "number" },
        "noInsuranceRateDelta": { "format": "double", "type": "number" }
      }
    },
    "MortgageProgramTypeValue": {
      "type": "object",
      "properties": {
        "value": {
          "format": "int32",
          "description": " (0 = Undefined , 1 = ClassicMortgage , 2 = MilitaryMortgage , 4 = FamilyMortgage , 5 = FarEasternMortgage , 6 = ExistingPropertySecuredLoan , 7 = StateProgram2020 , 8 = MilitaryMortgage2020 )",
          "enum": [0, 1, 2, 4, 5, 6, 7, 8],
          "type": "integer"
        },
        "name": { "type": "string" }
      }
    },
    "MortgagePurposeValue": {
      "type": "object",
      "properties": {
        "marketProductApiUrl": { "type": "string" },
        "value": {
          "format": "int32",
          "description": " (0 = Undefined , 1 = RealEstateAcquisition , 2 = Refinancing , 3 = SecuredLoan )",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "name": { "type": "string" }
      }
    },
    "MortgageCreditTypeValue": {
      "type": "object",
      "properties": {
        "value": {
          "format": "int32",
          "description": " (0 = Undefined , 1 = UnderConstructionHousing , 2 = FinishedHousing , 3 = CashForAnyPurpose )",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "name": { "type": "string" }
      }
    },
    "PawnRealtyTypeValue": {
      "type": "object",
      "properties": {
        "value": {
          "format": "int32",
          "description": " (0 = Undefined , 1 = Flat , 2 = HouseWithPlot , 3 = BlockWithPlot , 4 = Apartments , 5 = BlockedHouse , 6 = PlotWithoutHouse , 7 = Garage )",
          "enum": [0, 1, 2, 3, 4, 5, 6, 7],
          "type": "integer"
        },
        "name": { "type": "string" }
      }
    },
    "MarketProductTypeItem": {
      "description": "Элемент типа продуктов",
      "type": "object",
      "properties": {
        "code": { "description": "Код", "type": "string" },
        "name": { "description": "Наименование", "type": "string" }
      }
    },
    "MetalAccount": {
      "description": "Металлический счет",
      "type": "object",
      "properties": {
        "isCustomRateViewAvailable": { "type": "boolean" },
        "accountId": {
          "format": "int32",
          "description": "Идентификатор счета",
          "type": "integer"
        },
        "contract": {
          "$ref": "#/definitions/ContractBase",
          "description": "Контракт"
        },
        "accountType": {
          "format": "int32",
          "description": "Тип счета (1 = Account , 2 = CardAccount , 3 = AbsAccount )",
          "enum": [1, 2, 3],
          "type": "integer",
          "readOnly": true
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "office": {
          "$ref": "#/definitions/Office",
          "description": "Servicing office"
        },
        "accountingBranch": {
          "$ref": "#/definitions/Branch",
          "description": "Accounting branch"
        },
        "number": { "description": "Number", "type": "string" },
        "previousNumber": {
          "description": "Номер счета до миграции",
          "type": "string"
        },
        "previousOpenDate": {
          "format": "date-time",
          "description": "Дата открытия до миграции",
          "type": "string"
        },
        "name": { "description": "Наименование", "type": "string" },
        "clientLabel": {
          "description": "Пользовательское наименование",
          "type": "string"
        },
        "balance": {
          "format": "double",
          "description": "Balance",
          "type": "number"
        },
        "availableBalance": {
          "format": "double",
          "description": "Доступный баланс",
          "type": "number"
        },
        "isWithReplenishment": {
          "description": "Is account replenishment available",
          "type": "boolean"
        },
        "isWithSubtraction": {
          "description": "Возможность снятия средств со счёта",
          "type": "boolean"
        },
        "openDate": {
          "format": "date-time",
          "description": "Дата открытия",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "description": "Состояние (1 = NotReady , 2 = Active , 3 = Blocked , 4 = Closed )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "closeDate": {
          "format": "date-time",
          "description": "Дата закрытия",
          "type": "string"
        },
        "requisites": {
          "$ref": "#/definitions/AccountRequisitesUnify",
          "description": "Реквизиты счёта"
        },
        "entityIdentifier": {
          "$ref": "#/definitions/EntityIdentifier",
          "description": ""
        }
      }
    },
    "CreateMortgageApplicationData": {
      "description": "Параметры заказа ипотеки",
      "type": "object",
      "properties": {
        "mortgageLoanType": {
          "format": "int32",
          "description": "Тип продукта",
          "type": "integer"
        },
        "mortgagePurpose": {
          "format": "int32",
          "description": "Цель ипотеки",
          "type": "integer"
        },
        "mortgageCreditType": {
          "format": "int32",
          "description": "Вид ипотечного кредита",
          "type": "integer"
        },
        "realtyType": {
          "format": "int32",
          "description": "Вид недвижимости",
          "type": "integer"
        },
        "idRegion": {
          "format": "int32",
          "description": "Регион приобретаемой недвижимости",
          "type": "integer"
        },
        "expressMortgage": {
          "description": "Экспресс ипотека",
          "type": "boolean"
        },
        "sum": {
          "format": "double",
          "description": "Сумма кредита.",
          "type": "number"
        },
        "lengthMonths": {
          "format": "int32",
          "description": "Срок кредита, месяцев.",
          "type": "integer"
        },
        "initialPayment": {
          "format": "double",
          "description": "Первоначальный взнос",
          "type": "number"
        },
        "initialPaymentCurrencyID": {
          "format": "int32",
          "description": "Валюта первоначального взноса",
          "type": "integer"
        },
        "pledgeValue": {
          "format": "double",
          "description": "Стоимость предмета залога",
          "type": "number"
        },
        "pledgeCurrencyID": {
          "format": "int32",
          "description": "Валюта объекта залога",
          "type": "integer"
        },
        "takeMothersCapitalIntoAccount": {
          "description": "Учесть сумму средств МСК",
          "type": "boolean"
        },
        "federalDistrictCode": {
          "format": "int32",
          "description": "Код федерального округа",
          "type": "integer"
        },
        "lifeInsuranceIncuded": {
          "description": "Страхование жизни",
          "type": "boolean"
        },
        "monthlyPayment": {
          "format": "double",
          "description": "Ежемесячный платеж",
          "type": "number"
        },
        "interestRate": {
          "format": "double",
          "description": "Процентная ставка",
          "type": "number"
        },
        "officeId": {
          "format": "int32",
          "description": "ID ипотечного центра",
          "type": "integer"
        },
        "productCatalogIdentifier": {
          "description": "Идентификатор продукта.",
          "type": "string"
        },
        "referalLink": {
          "description": "Ссылка по которой потенциальный клиент пришел",
          "type": "string"
        },
        "referalLinkSource": {
          "description": "Источник реферальной ссылки",
          "type": "string"
        }
      }
    },
    "SubscriptionsData": {
      "description": "Данные по подпискам клиента",
      "type": "object",
      "properties": {
        "subscriptionAddresses": {
          "description": "Адреса подписок по клиенту",
          "type": "array",
          "items": { "$ref": "#/definitions/SubscriptionAddress" }
        }
      }
    },
    "SubscriptionAddress": {
      "description": "Подписки адреса",
      "type": "object",
      "properties": {
        "channelType": {
          "format": "int32",
          "description": "Канал оповещения (1 = Smtp , 2 = Sms , 3 = Mail )",
          "enum": [1, 2, 3],
          "type": "integer",
          "readOnly": true
        },
        "notificationAddress": {
          "$ref": "#/definitions/NotificationAddress",
          "description": "Адрес"
        },
        "subscriptions": {
          "description": "Подписки адреса",
          "type": "array",
          "items": { "$ref": "#/definitions/SubscriptionInfo" }
        }
      }
    },
    "NotificationAddress": {
      "description": "Адрес оповещения",
      "type": "object",
      "properties": {
        "notificationAddressId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "name": {
          "description": "Наименование пользовательское",
          "type": "string"
        },
        "channelType": {
          "format": "int32",
          "description": "Канал (1 = Smtp , 2 = Sms , 3 = Mail )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "value": { "description": "Значение адреса", "type": "string" },
        "client": {
          "$ref": "#/definitions/ShortClientInfo",
          "description": "Краткие данные по клиенту (НК, ФИО)"
        },
        "isActive": { "description": "Адрес активен", "type": "boolean" }
      }
    },
    "SubscriptionInfo": {
      "description": "Инфомрация о подписке",
      "type": "object",
      "properties": {
        "subscriptionId": {
          "format": "int32",
          "description": "Идентификатор подписки",
          "type": "integer"
        },
        "subscribed": {
          "description": "Текущая подписка есть у клиента",
          "type": "boolean"
        },
        "notificationGroup": {
          "$ref": "#/definitions/NotificationGroup",
          "description": "Группа событий"
        },
        "subscriptionDetails": {
          "description": "Пример множества: список контрактов подписанных на событие 'Информационные оповещения по картам'",
          "type": "array",
          "items": { "$ref": "#/definitions/SubscriptionDetail" }
        }
      }
    },
    "ShortClientInfo": {
      "description": "Краткая информация по клиенту",
      "type": "object",
      "properties": {
        "clientId": {
          "format": "int32",
          "description": "Идентификатор клиента",
          "type": "integer"
        },
        "firstName": { "description": "Имя клиента", "type": "string" },
        "lastName": { "description": "Фамилия клиента", "type": "string" },
        "middleName": { "description": "Отчество клиента", "type": "string" }
      }
    },
    "NotificationGroup": {
      "description": "Группа оповещения",
      "type": "object",
      "properties": {
        "notificationGroupId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "notificationCategory": {
          "$ref": "#/definitions/NotificationCategory",
          "description": "Категория"
        },
        "name": { "description": "Наименование", "type": "string" }
      }
    },
    "SubscriptionDetail": {
      "description": "Информация о подписке",
      "type": "object",
      "properties": {
        "subscriptionDetailId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "displayText": { "description": "Общее описание", "type": "string" }
      }
    },
    "NotificationCategory": {
      "description": "Категория подписки",
      "type": "object",
      "properties": {
        "notificationCategoryId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "name": { "description": "Наименование", "type": "string" }
      }
    },
    "NotificationsHistory": {
      "description": "История оповещений",
      "type": "object",
      "properties": {
        "items": {
          "description": "Данные (возвращается только определенная страница)",
          "type": "array",
          "items": { "$ref": "#/definitions/Notification" }
        },
        "pageCount": {
          "format": "int32",
          "description": "Число страниц",
          "type": "integer"
        }
      }
    },
    "Notification": {
      "description": "Оповещение",
      "type": "object",
      "properties": {
        "notificationID": {
          "format": "int64",
          "description": "Идентификатор",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "description": "Дата отправки",
          "type": "string"
        },
        "deliveryDate": {
          "format": "date-time",
          "description": "Дата доставки",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "description": "Статус (1 = New , 2 = Processed , 3 = Error , 4 = Canceled , 5 = Deffered , 6 = NoAddressFound , 7 = Expired , 8 = ProcessingDeffered , 9 = Uncommitted , 10 = PartialySend , 11 = NotSend , 12 = Delivered , 13 = Processing , 14 = Interrupted , 15 = ProcessingInterrupted )",
          "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
          "type": "integer"
        },
        "name": { "description": "Наименование", "type": "string" }
      }
    },
    "OperationsData": {
      "description": "Класс-обёртка для возврата списка операций и категорий",
      "type": "object",
      "properties": {
        "popularOperations": {
          "description": "Список часто используемых операций",
          "type": "array",
          "items": { "$ref": "#/definitions/Operation" }
        },
        "operations": {
          "description": "Список операций",
          "type": "array",
          "items": { "$ref": "#/definitions/Operation" }
        },
        "categories": {
          "description": "Список категорий",
          "type": "array",
          "items": { "$ref": "#/definitions/Category" }
        },
        "sysComments": {
          "description": "Временное свойство.",
          "type": "string"
        }
      }
    },
    "OperationCatalog": {
      "description": "",
      "type": "object",
      "properties": {
        "items": {
          "description": "элементы категории",
          "type": "array",
          "items": { "$ref": "#/definitions/OperationCatalogItem" }
        },
        "breadCrumbs": {
          "$ref": "#/definitions/Category",
          "description": "путь к текущей выбранной категории"
        }
      }
    },
    "OperationCatalogItem": {
      "description": "элемент отображения каталога, содержит или категорию или операцию",
      "type": "object",
      "properties": {
        "operation": {
          "$ref": "#/definitions/Operation",
          "description": "операция"
        },
        "category": {
          "$ref": "#/definitions/Category",
          "description": "категория"
        },
        "ordNum": {
          "format": "int32",
          "description": "порядковый номер",
          "type": "integer"
        }
      }
    },
    "OperationsSearchResults": {
      "description": "Результат поиска операций",
      "type": "object",
      "properties": {
        "currentLocationOperations": {
          "description": "Список операций доступных для текущего местоположения клиента",
          "type": "array",
          "items": { "$ref": "#/definitions/Operation" }
        },
        "otherLocationOperations": {
          "description": "Список операций для других местоположений",
          "type": "array",
          "items": { "$ref": "#/definitions/Operation" }
        },
        "templates": {
          "description": "Шаблоны операций",
          "type": "array",
          "items": { "$ref": "#/definitions/Template" }
        },
        "personTransferByPhoneOperations": {
          "description": "Перевод физлицу по номеру телефона",
          "type": "array",
          "items": { "$ref": "#/definitions/Operation" }
        },
        "phonePaymentOperation": {
          "$ref": "#/definitions/Operation",
          "description": "Операция для оплаты мобильного"
        },
        "storedCardTransferOperations": {
          "description": "Список карт получателя для операции Перевод по карте",
          "type": "array",
          "items": { "$ref": "#/definitions/Operation" }
        },
        "cardTransferOperation": {
          "$ref": "#/definitions/Operation",
          "description": "Перевод по номеру карты"
        },
        "personTransferByPhoneOperation": {
          "$ref": "#/definitions/Operation",
          "description": "Перевод физлицу по номеру телефона"
        }
      }
    },
    "OperationImage": {
      "description": "логотип операции",
      "type": "object",
      "properties": {
        "operationId": {
          "format": "int32",
          "description": "id",
          "type": "integer"
        },
        "code": {
          "format": "int32",
          "description": "код операции",
          "type": "integer"
        },
        "smallImageSrc": {
          "description": "обычное изображение (маленькое)",
          "type": "string"
        },
        "largeImageSrc": {
          "description": "изображение большое",
          "type": "string"
        }
      }
    },
    "OfficesFilterParams": {
      "description": "Параметры отбора офисов",
      "type": "object",
      "properties": {
        "localityId": {
          "format": "int32",
          "description": "Город, населенный пункт",
          "type": "integer"
        },
        "offices": {
          "description": "Перечисление офисов",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        }
      }
    },
    "MortgageCenter": {
      "description": "Офис, являющийся ипотечным центром, с привязкой к региону",
      "type": "object",
      "properties": {
        "officeId": {
          "format": "int32",
          "description": "Идентификатор офиса",
          "type": "integer"
        },
        "officeTitle": { "description": "Office name", "type": "string" },
        "federalDistrictId": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        },
        "federalDistrictCode": {
          "format": "int32",
          "description": "Region Code",
          "type": "integer"
        }
      }
    },
    "OtpEnvelope": {
      "description": "ТРК",
      "type": "object",
      "properties": {
        "otpEnvelopeId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        }
      }
    },
    "SuggestionForAddressReq": {
      "description": "",
      "type": "object",
      "properties": {
        "addressId": { "description": "", "type": "string" },
        "address": { "description": "", "type": "string" },
        "returnAll": { "description": "", "type": "boolean" }
      }
    },
    "ProviderSuggestion": {
      "description": "список возможных поставщиков для данного адреса",
      "type": "object",
      "properties": {
        "suggestionId": {
          "format": "int32",
          "description": "Ид предложения",
          "type": "integer"
        },
        "addressId": {
          "description": "house_id адреса (фиас)",
          "type": "string"
        },
        "regionId": {
          "description": "region_id адреса (фиас)",
          "type": "string"
        },
        "address": { "description": "полный адрес", "type": "string" },
        "operations": {
          "description": "операции (поставщики)",
          "type": "array",
          "items": { "$ref": "#/definitions/SuggestionItem" }
        },
        "lastUpdate": {
          "format": "date-time",
          "description": "дата последнего изменения",
          "type": "string"
        },
        "noRefresh": { "description": "", "type": "boolean" }
      }
    },
    "SuggestionItem": {
      "description": "предложение по провайдеру",
      "type": "object",
      "properties": {
        "suggestionId": {
          "format": "int32",
          "description": "Ид предложения",
          "type": "integer"
        },
        "operation": {
          "$ref": "#/definitions/Operation",
          "description": "Объект операции"
        }
      }
    },
    "PersonalOfferingMessageWithTechnicalInformation": {
      "description": "Техническое сообщение",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "Id сообщения",
          "type": "integer"
        },
        "text": { "description": "Текст сообщения", "type": "string" }
      }
    },
    "TransferByPhoneRequest": {
      "description": "параметры запуска операции по номеру телефона",
      "type": "object",
      "properties": {
        "phoneNumber": {
          "description": "Номер теоефона для запуска операции в любом формате.",
          "type": "string"
        },
        "bankIdentifier": {
          "description": "Идентификатор банка в системе СБП, в который следует осуществить перевод",
          "type": "string"
        }
      }
    },
    "FastTransfersBankListItem": {
      "description": "Элемент списка банков в системе быстрых переводов",
      "type": "object",
      "properties": {
        "display": { "description": "Внешнее представление", "type": "string" },
        "value": { "description": "Внутреннее значение", "type": "string" },
        "systemValues": {
          "description": "Системные значения. Секретные не вводить",
          "type": "string"
        }
      }
    },
    "TransferInfoForCommissionCalculation": {
      "description": "Информация о переводе для рассчета комиссии",
      "type": "object",
      "properties": {
        "transferSum": {
          "format": "double",
          "description": "Сумма перевода",
          "type": "number"
        },
        "requestID": {
          "format": "int64",
          "description": "Идентификатор поручения",
          "type": "integer"
        },
        "mainCreditLimit": {
          "format": "double",
          "description": "Основной кредитный лимит",
          "type": "number"
        },
        "financialGroupID": {
          "format": "int32",
          "description": "Группа продукта",
          "type": "integer"
        },
        "isSalary": { "description": "Зарплатная", "type": "boolean" },
        "isPremium": { "description": "Премиальная", "type": "boolean" }
      }
    },
    "TransferInfoForCommissionCalculation2": {
      "description": "Информация о переводе для рассчета комиссии",
      "type": "object",
      "properties": {
        "transferSum": {
          "format": "double",
          "description": "Сумма перевода",
          "type": "number"
        },
        "requestID": {
          "format": "int64",
          "description": "Идентификатор поручения",
          "type": "integer"
        },
        "accountParamsJson": {
          "description": "Параметры счета",
          "type": "string"
        }
      }
    },
    "GetAgreementSettingsResponse": {
      "description": "Ответ сервера с согласиями по переводам СБП",
      "type": "object",
      "properties": {
        "agreements": {
          "description": "Коллекция согласий",
          "type": "array",
          "items": { "$ref": "#/definitions/GetAgreementParam" }
        }
      }
    },
    "GetAgreementParam": {
      "description": "Значение согласия и его описание",
      "required": ["name", "description"],
      "type": "object",
      "properties": {
        "name": {
          "description": "Строковый идентификатор согласия",
          "type": "string"
        },
        "value": { "description": "Значение", "type": "boolean" },
        "description": { "description": "Описание", "type": "string" }
      }
    },
    "SetAgreementSettingsRequest": {
      "description": "Запрос на изменение согласий по переводам СБП",
      "type": "object",
      "properties": {
        "agreements": {
          "description": "Коллекция согласий для сохранения",
          "type": "array",
          "items": { "$ref": "#/definitions/SetAgreementParam" }
        }
      }
    },
    "SetAgreementParam": {
      "description": "Значение согласия",
      "required": ["name", "value"],
      "type": "object",
      "properties": {
        "name": {
          "description": "Строковый идентификатор согласия",
          "type": "string"
        },
        "value": { "description": "Значение", "type": "boolean" }
      }
    },
    "AvailableCreditAccountsResponse": {
      "description": "Ответ сервера с доступными счетами для зачислений по СБП",
      "type": "object",
      "properties": {
        "accountOrCard": {
          "$ref": "#/definitions/AccountOrCard",
          "description": "Приоритетный счёт/карта"
        }
      }
    },
    "AccountOrCard": {
      "description": "Объединенное описание счёта или карты",
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/LiteTermlessAccount",
          "description": "Счёт",
          "readOnly": true
        },
        "card": {
          "$ref": "#/definitions/LiteCard",
          "description": "Карта",
          "readOnly": true
        }
      }
    },
    "PfmExpenses": {
      "description": "Совокупность расходов клиента по категориям",
      "type": "object",
      "properties": {
        "values": {
          "description": "",
          "type": "array",
          "items": { "$ref": "#/definitions/PfmExpense" }
        },
        "income": {
          "format": "double",
          "description": "Поступления",
          "type": "number"
        },
        "expense": {
          "format": "double",
          "description": "Расходы",
          "type": "number"
        }
      }
    },
    "PfmExpense": {
      "description": "Расходы клиента по категории",
      "type": "object",
      "properties": {
        "categoryId": {
          "format": "int32",
          "description": "",
          "type": "integer"
        },
        "name": { "description": "", "type": "string" },
        "amount": { "format": "double", "description": "", "type": "number" }
      }
    },
    "PfmRedirectionData": {
      "description": "Данные для перехода в Pfm",
      "type": "object",
      "properties": {
        "redirectUrl": { "description": "Post URL", "type": "string" },
        "samlResponse": { "description": "SAML Response", "type": "string" },
        "logoutUrl": { "description": "Logout URL", "type": "string" }
      }
    },
    "TransactionBase": {
      "description": "",
      "type": "object",
      "properties": {
        "valueDate": {
          "format": "date-time",
          "description": "Дата валютирования",
          "type": "string"
        },
        "transactionDate": {
          "format": "date-time",
          "description": "Дата проводки",
          "type": "string"
        },
        "ground": { "description": "Основание (назначение)", "type": "string" },
        "transactionSum": {
          "format": "double",
          "description": "Сумма транзакции",
          "type": "number"
        },
        "transactionCurrency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "request": {
          "$ref": "#/definitions/Request",
          "description": "Поручение"
        },
        "isProcessed": {
          "description": "Завершенная транзакция",
          "type": "boolean"
        },
        "title": {
          "description": "Наименование операции на основе транзакции для отображения в разделе истории в МБ и ИБ",
          "type": "string"
        }
      }
    },
    "PortfolioInfo": {
      "description": "Суммарный портфель клиента. БО, ПИФ, ДУ и т.д.",
      "type": "object",
      "properties": {
        "unitTrust": {
          "$ref": "#/definitions/UnitTrustPortfolioInfo",
          "description": "ПИФ"
        },
        "iiaTrustManagement": {
          "$ref": "#/definitions/IiaTrustManagementPortfolioInfo",
          "description": "ИИС ДУ"
        },
        "iiaComplexState": {
          "format": "int32",
          "description": "Состояния ИИС (Составное) в контексте взаимодействие ИИС(БФР) и ИИС ДУ (1 = HasIiaBrokerage , 2 = HasIiaTrustManagement , 3 = HasNotIiaPossibleBrokerage , 4 = HasNotIiaPossibleBrokeragePossibleTrustManagement , 5 = HasIiaTrustManagementButNotAvailable )",
          "enum": [1, 2, 3, 4, 5],
          "type": "integer"
        }
      }
    },
    "UnitTrustPortfolioInfo": {
      "description": "Информация по ПИФ",
      "type": "object",
      "properties": {
        "caption": { "description": "Заголовок", "type": "string" },
        "valueDelta": {
          "format": "double",
          "description": "Изменение портфеля",
          "type": "number"
        },
        "valueDeltaPercent": {
          "format": "double",
          "description": "Изменение портфеля в процентах",
          "type": "number"
        },
        "clientFunds": {
          "description": "Информация по наличию паев у клиента",
          "type": "array",
          "items": { "$ref": "#/definitions/ClientFundsData" }
        },
        "portfolioSum": {
          "format": "double",
          "description": "Общая сумма портфеля",
          "type": "number"
        },
        "portfolioCurrency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта фонда"
        },
        "unitTrustHint": {
          "description": "Хинт с кратким описанием \"что такое ПИФ\"",
          "type": "string"
        },
        "clientId": {
          "format": "int32",
          "description": "Идентификатор клиента",
          "type": "integer"
        },
        "state": {
          "format": "int32",
          "description": "Состояние пиф для клиента (1 = HasNotPersonalAccount , 2 = HasPersonalAccountHasNotAgreement , 3 = HasPersonalAccountHasAgreementHasNotData , 4 = HasPersonalAccountHasAgreementHasData )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        }
      }
    },
    "IiaTrustManagementPortfolioInfo": {
      "description": "Информация по портфелю ДУ",
      "type": "object",
      "properties": {
        "state": {
          "format": "int32",
          "description": "Состояние в разрезе наличия Согласия и данных от УК (1 = IiaTrustHasAgreementHasData , 2 = IiaTrustHasAgreementHasNotData , 3 = IiaTrustHasNotAgreement )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "caption": {
          "description": "Заголовок с кратким наименованием вида ДУ",
          "type": "string"
        },
        "hint": {
          "description": "Хинт с кратким описанием \"что такое ИИС ДУ\"",
          "type": "string"
        },
        "actualOn": {
          "description": "Дата на которую актуальны финансовые данные (СЧА, доходность)",
          "type": "string"
        },
        "trustManagementTypeName": {
          "description": "Полное наименование вида ДУ",
          "type": "string"
        },
        "contract": {
          "$ref": "#/definitions/TrustManagementContract",
          "description": "Информация по договору"
        },
        "productInfo": {
          "$ref": "#/definitions/ProductCommonInfo",
          "description": "Информация по продукту ДУ (Стратегии)"
        },
        "documents": {
          "description": "Документы по договору. Может быть null",
          "type": "array",
          "items": { "$ref": "#/definitions/FundDocument" }
        },
        "operations": {
          "description": "Операции по договору. Может быть null",
          "type": "array",
          "items": { "$ref": "#/definitions/TrustManagementOperation" }
        },
        "contractIncome": {
          "$ref": "#/definitions/TrustManagementContractIncomeData",
          "description": "Финансовая инвормация по договору (СЧА, доходность)"
        },
        "disclaimer": { "description": "Дисклеймер", "type": "string" },
        "trustManagementKind": {
          "description": "Полное наименование типа продукта ДУ",
          "type": "string"
        },
        "isReplenishmentEnabled": {
          "description": "Флаг доступности пополнения",
          "type": "boolean"
        }
      }
    },
    "ClientFundsData": {
      "description": "Информация по паям клиента",
      "type": "object",
      "properties": {
        "fundId": {
          "format": "int32",
          "description": "Идентификатор фонда",
          "type": "integer"
        },
        "shortName": {
          "description": "Краткое наименование фонда",
          "type": "string"
        },
        "numberOfShares": {
          "format": "double",
          "description": "Количество паёв",
          "type": "number"
        },
        "totalValue": {
          "format": "double",
          "description": "Стоимость паев",
          "type": "number"
        },
        "fundCurrency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта фонда"
        },
        "valueDelta": {
          "format": "double",
          "description": "Изменение по фонду",
          "type": "number"
        },
        "valueDeltaPercent": {
          "format": "double",
          "description": "Изменение по фонду в процентах",
          "type": "number"
        },
        "minSum": {
          "$ref": "#/definitions/PurchaseSum",
          "description": "Минимальная сумма покупки"
        },
        "incomeHint": { "description": "Подсказка", "type": "string" },
        "iconUrl": { "description": "Иконка фонда", "type": "string" },
        "backgroundUrl": {
          "description": "Фоновая картинка фонда",
          "type": "string"
        }
      }
    },
    "TrustManagementContract": {
      "description": "Договор ИИС ДУ",
      "type": "object",
      "properties": {
        "number": { "description": "Номер договора", "type": "string" },
        "openDate": {
          "description": "Дата заключения договора",
          "type": "string"
        },
        "closeDate": {
          "description": "Дата закрытия договора",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "description": "Статус договора (1 = Created , 2 = Activated , 4 = Closed , 8 = Closing )",
          "enum": [1, 2, 4, 8],
          "type": "integer"
        },
        "productName": {
          "description": "Наименование продукта ДУ (Стратегии)",
          "type": "string"
        },
        "productNativeId": {
          "format": "int32",
          "description": "Идентификатор стратегии",
          "type": "integer"
        },
        "contractId": {
          "format": "int32",
          "description": "ID договора ИИС ДУ",
          "type": "integer"
        }
      }
    },
    "ProductCommonInfo": {
      "description": "общая информация по продукту ДУ",
      "type": "object",
      "properties": {
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "minSum": {
          "description": "Минимальная сумма пополнения",
          "type": "string"
        },
        "maxSum": {
          "description": "Максимальная сумма пополнения",
          "type": "string"
        },
        "period": { "description": "Срок действия договора", "type": "string" },
        "partialWithdrawal": {
          "description": "Частичное снятие",
          "type": "string"
        },
        "feeSize": {
          "description": "Размер вознаграждения УК",
          "type": "string"
        },
        "riskLevel": {
          "format": "int32",
          "description": "Уровень риска (1 = Low , 2 = Average , 3 = High )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "description": {
          "description": "Описание стратегии",
          "type": "string"
        },
        "recommendedPeriod": {
          "description": "Рекомендованый срок",
          "type": "string"
        },
        "productNativeId": {
          "format": "int32",
          "description": "ИД Продукта ДУ",
          "type": "integer"
        },
        "productName": {
          "description": "Наименование продукта (стратегии) ДУ",
          "type": "string"
        },
        "expectedReturn": {
          "description": "ожидаемая годовая доходность продукта",
          "type": "string"
        }
      }
    },
    "FundDocument": {
      "description": "Описание документа",
      "type": "object",
      "properties": {
        "name": { "description": "Наименование документа", "type": "string" },
        "url": { "description": "Url документа", "type": "string" }
      }
    },
    "TrustManagementOperation": {
      "description": "Информация по операция ДУ",
      "type": "object",
      "properties": {
        "operationDate": {
          "format": "date-time",
          "description": "Дата оперции",
          "type": "string"
        },
        "operationKind": { "description": "Вид операции", "type": "string" },
        "sum": {
          "format": "double",
          "description": "Сумма операции",
          "type": "number"
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "operationStatus": {
          "format": "int32",
          "description": "Статус операции (1 = InProgress , 2 = Done , 3 = Canceled )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "operationStatusName": {
          "description": "Наименование статуса операции",
          "type": "string"
        }
      }
    },
    "TrustManagementContractIncomeData": {
      "description": "Договор ИИС ДУ",
      "type": "object",
      "properties": {
        "valueDelta": {
          "format": "double",
          "description": "Изменение портфеля",
          "type": "number"
        },
        "valueDeltaPercent": {
          "format": "double",
          "description": "Изменение портфеля в процентах",
          "type": "number"
        },
        "sum": {
          "format": "double",
          "description": "Общая сумма портфеля (СЧА)",
          "type": "number"
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта фонда"
        },
        "actualOn": {
          "description": "Дата актульности данных",
          "type": "string"
        }
      }
    },
    "PurchaseSum": {
      "description": "Сумма покупки",
      "type": "object",
      "properties": {
        "sum": { "format": "double", "description": "Сумма", "type": "number" },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        }
      }
    },
    "ChangePasswordParams": {
      "description": "Параметры смены пароля",
      "type": "object",
      "properties": {
        "newPassword": { "description": "Новый пароль", "type": "string" },
        "oldPassword": {
          "description": "Старый пароль\r\nСтарый пароль передается только при смене пароля в профиле. Если пароль изменяется на входе принудительно, передавать null",
          "type": "string"
        }
      }
    },
    "SetLocalityParams": {
      "description": "Параметры изменения выбранного региона",
      "type": "object",
      "properties": {
        "federalDistrictId": {
          "format": "int32",
          "description": "Регион",
          "type": "integer"
        },
        "localityId": {
          "format": "int32",
          "description": "Населенный пункт",
          "type": "integer"
        }
      }
    },
    "AuthOptions": {
      "description": "Настройки для входа в систему",
      "type": "object",
      "properties": {
        "alias": {
          "description": "Логин (строка от 3 до 20 символов)",
          "type": "string"
        },
        "maskedPhoneId": {
          "description": "Masked Phone identifier",
          "type": "string"
        },
        "isSecondStepAuthAllowed": {
          "description": "Дополнительная проверка при входе",
          "type": "boolean"
        },
        "isPasswordRecoveryAllowed": {
          "description": "Разрешено удаленное восстановление доступа",
          "type": "boolean"
        },
        "isLoginByServicePhoneAllowed": {
          "description": "Разрешен вход по сервисному номеру телефона",
          "type": "boolean"
        }
      }
    },
    "ClientContactInfo": {
      "description": "Контактная информация клиента (например, из контакт-листа)",
      "type": "object",
      "properties": {
        "userId": {
          "description": "идентификатор пользователя в списке",
          "type": "string"
        },
        "phones": {
          "description": "список номеров телефонов",
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ClientContactData": {
      "description": "найденная по контактным данным информация о клиенте",
      "type": "object",
      "properties": {
        "userId": {
          "description": "идентификатор пользователя из входящего списка",
          "type": "string"
        },
        "phone": {
          "description": "телефон привязанный к аккаунту пользователя",
          "type": "string"
        }
      }
    },
    "ClientContact": {
      "description": "",
      "type": "object",
      "properties": {
        "phoneNumber": { "description": "номер телефона", "type": "string" },
        "contactName": {
          "description": "наименование в книге контактов",
          "type": "string"
        }
      }
    },
    "ClientPhoneInfo": {
      "description": "сопоставление сервисного номера и имени клиента",
      "type": "object",
      "properties": {
        "phone": { "description": "сервисный номер", "type": "string" },
        "firstName": { "description": "", "type": "string" },
        "middleName": { "description": "", "type": "string" },
        "lastName": { "description": "", "type": "string" },
        "isMultiple": { "description": "", "type": "boolean" }
      }
    },
    "ProposalFilterParams": {
      "description": "Параметры для получения предложений",
      "type": "object",
      "properties": {
        "isActiveOnly": {
          "description": "Только активные предложения",
          "type": "boolean"
        },
        "proposalType": {
          "format": "int32",
          "description": "Тип  предложения (1 = Loan , 2 = Card , 4 = CardLimit , 5 = LoanCertificate , 6 = LoanTopUp )",
          "enum": [1, 2, 4, 5, 6],
          "type": "integer"
        },
        "detailed": {
          "description": "Детальная информация",
          "type": "boolean"
        },
        "marketDetailed": {
          "description": "Детальная информация продуктового контента",
          "type": "boolean"
        },
        "includeMeta": {
          "description": "Пресет для деталей",
          "type": "boolean"
        },
        "preset": { "description": "Пресет для деталей", "type": "string" }
      }
    },
    "ActiveDecisionParams": {
      "description": "Параметры активации предложения",
      "type": "object",
      "properties": {
        "decisionIdentifier": {
          "description": "Идентификатор выбранного решения",
          "type": "string"
        },
        "productCatalogIdentifier": {
          "description": "Наименование продукта для ГА",
          "type": "string"
        }
      }
    },
    "PreApprovedResultDecision": {
      "description": "PreApprovedResult Decision",
      "type": "object",
      "properties": {
        "proposalId": {
          "format": "int32",
          "description": "Идентификатор предложения",
          "type": "integer"
        },
        "proposalTypeId": {
          "format": "int32",
          "description": "Тип предложения",
          "type": "integer"
        },
        "decision": {
          "$ref": "#/definitions/ProposalDecision",
          "description": "Решение по предложению"
        }
      }
    },
    "ProposalDecision": {
      "description": "Решение по предложению по кредиту (ставка, срок, сумма)",
      "type": "object",
      "properties": {
        "decisionId": {
          "description": "Идентификатор решения",
          "type": "string"
        },
        "monthPeriod": {
          "format": "int32",
          "description": "Максимальный срок кредитования, в месяцах",
          "type": "integer"
        },
        "interestRate": {
          "format": "double",
          "description": "Процентная ставка, в долях",
          "type": "number"
        },
        "loanSum": {
          "format": "double",
          "description": "Сумма кредита, в валюте кредита",
          "type": "number"
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "annuity": {
          "format": "double",
          "description": "Ежемесячный платеж, в валюте кредита",
          "type": "number"
        },
        "isInsuranceRequired": {
          "description": "Обязательность заключения договора страхования по решению",
          "type": "boolean"
        },
        "isRefinans": {
          "description": "решение с рефинансом",
          "type": "boolean"
        },
        "refinances": {
          "description": "Параметры рефинансируемых кредитов",
          "type": "array",
          "items": { "$ref": "#/definitions/LoanRefinanceData" }
        },
        "allowedSum": {
          "format": "double",
          "description": "Максимальная сумма на руки\r\nSum - сумма тэгов RefinansSumResult",
          "type": "number"
        },
        "delayMonth": {
          "format": "int32",
          "description": "Отсрочка первого платежа",
          "type": "integer"
        },
        "brandMinSum": {
          "format": "double",
          "description": "Минимальная сумма для брэнда",
          "type": "number"
        },
        "brandID": {
          "format": "int32",
          "description": "ID бренда",
          "type": "integer"
        },
        "insuranceDiscount": {
          "format": "double",
          "description": "Скидка при подключении страховки",
          "type": "number"
        },
        "insuranceMinSum": {
          "format": "int32",
          "description": "Минимальная сумма страховки",
          "type": "integer"
        }
      }
    },
    "PushDevice": {
      "description": "Устройство для push-оповещений",
      "type": "object",
      "properties": {
        "pushDeviceId": { "description": "Идентификатор", "type": "string" },
        "name": { "description": "Наименование", "type": "string" },
        "isActive": {
          "description": "Может принимать push-уведомления",
          "type": "boolean"
        },
        "isMain": {
          "description": "Тип устройства (основное/дополнительное)",
          "type": "boolean"
        },
        "messageKinds": {
          "description": "Список видов уведомлений на которые подписано устройство клиента",
          "type": "array",
          "items": { "type": "string" }
        },
        "messageKindCodes": {
          "description": "Список кодов видов уведомлений на которые подписано устройство клиента",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        }
      }
    },
    "PushMessage": {
      "type": "object",
      "properties": {
        "internalMessageId": { "format": "int64", "type": "integer" },
        "externalMessageId": { "type": "string" },
        "address": { "type": "string" },
        "sentAt": { "format": "date-time", "type": "string" },
        "sentAtMsk": { "format": "date-time", "type": "string" },
        "deliveryMethod": { "format": "int32", "type": "integer" },
        "deliveryStatus": { "format": "int32", "type": "integer" },
        "source": { "type": "string" },
        "messageType": { "type": "string" },
        "text": { "type": "string" },
        "pushContent": { "type": "string" },
        "imContent": { "type": "string" },
        "deleted": { "type": "boolean" }
      }
    },
    "SetSecureTokenParams": {
      "description": "Параметры обновления токена устройства",
      "type": "object",
      "properties": {
        "token": { "description": "Токен устройства", "type": "string" }
      }
    },
    "CreatePushDevicesParams": {
      "description": "Параметры запуска операции",
      "type": "object",
      "properties": {
        "deviceName": { "description": "Имя устройства", "type": "string" },
        "token": { "description": "Ключ", "type": "string" },
        "setAsDefault": {
          "description": "установить как основное",
          "type": "boolean"
        },
        "isStartedFromOnBoard": {
          "description": "Операция запускается с онбординга",
          "type": "boolean"
        }
      }
    },
    "DocumentToEmailParams": {
      "description": "Параметры для отправки документа на email",
      "type": "object",
      "properties": {
        "identifier": {
          "$ref": "#/definitions/DocumentIdentifier",
          "description": "Идентификатор документа"
        },
        "email": {
          "description": "Email для отправки документа",
          "type": "string"
        }
      }
    },
    "RequestFilterParams": {
      "description": "Параметры фильтра при получении списка клиентских поручений",
      "type": "object",
      "properties": {
        "operationId": {
          "format": "int32",
          "description": "Тип операции",
          "type": "integer"
        },
        "startDate": {
          "format": "date-time",
          "description": "Дата с",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "Дата по",
          "type": "string"
        },
        "sumFrom": {
          "format": "double",
          "description": "Сумма с",
          "type": "number"
        },
        "sumTo": {
          "format": "double",
          "description": "Сумма по",
          "type": "number"
        },
        "templateId": {
          "format": "int32",
          "description": "ID шаблона",
          "type": "integer"
        },
        "automaticPaymentId": {
          "format": "int32",
          "description": "ID автоплатежа",
          "type": "integer"
        },
        "contractId": {
          "format": "int32",
          "description": "Идентификатор контракта",
          "type": "integer"
        },
        "financialRequestsOnly": {
          "description": "Отображать только финансовые операции",
          "type": "boolean"
        },
        "sortDirection": {
          "format": "int32",
          "description": "Порядок сортировки (1 = Ascending , 2 = Descending )",
          "enum": [1, 2],
          "type": "integer"
        },
        "searchString": { "description": "Строка поиска", "type": "string" },
        "highlightTagName": {
          "description": "Имя тега для подсветки",
          "type": "string"
        }
      }
    },
    "RequestsHistory": {
      "description": "",
      "type": "object",
      "properties": {
        "items": {
          "description": "Данные (возвращается только определенная страница)",
          "type": "array",
          "items": { "$ref": "#/definitions/Request" }
        },
        "totalItemCount": {
          "format": "int32",
          "description": "Всего элементов",
          "type": "integer"
        }
      }
    },
    "OperationStart": {
      "description": "Класс для передачи параметров при старте операции",
      "type": "object",
      "properties": {
        "operationCode": {
          "format": "int32",
          "description": "Код операции",
          "type": "integer"
        },
        "context": {
          "$ref": "#/definitions/ContextData",
          "description": "Контекст выполнения операции"
        },
        "externalParams": {
          "description": "Параметры операции передаваемые с фронта",
          "type": "array",
          "items": { "$ref": "#/definitions/PostedParam" }
        },
        "autofillContext": {
          "$ref": "#/definitions/AutofillContext",
          "description": "Контекста автозаполнения"
        }
      }
    },
    "ContextData": {
      "description": "Данные о контексте выполнения операции",
      "type": "object",
      "properties": {
        "contextType": {
          "format": "int32",
          "description": "Тип контекста выполнения операции (0 = Default , 1 = Debit , 2 = Credit )",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "identifier": {
          "$ref": "#/definitions/EntityIdentifier",
          "description": "Идентификатор сущности"
        }
      }
    },
    "PostedParam": {
      "description": "Контейнер для передачи параметров с клиента на сервер\r\nИспользуется для передачи введенных значений параметров операции на сервер, для их последующей валидации и обработки",
      "type": "object",
      "properties": {
        "identifier": {
          "description": "Идентификатор параметра",
          "type": "string"
        },
        "value": { "description": "Значение параметра", "type": "string" },
        "values": {
          "description": "Значения",
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "AutofillContext": {
      "description": "контекст автозаполнения платежа",
      "type": "object",
      "properties": {
        "contextType": {
          "format": "int32",
          "description": "тип контекста (1 = ByAddress )",
          "enum": [1],
          "type": "integer"
        },
        "contextData": { "description": "данные контекста", "type": "string" }
      }
    },
    "OperationPost": {
      "description": "Класс для передачи параметров при переходе на шаг операции",
      "type": "object",
      "properties": {
        "postBackParamIdentifier": {
          "description": "PostBack Param Identifier",
          "type": "string"
        },
        "cultureName": { "description": "Culture Name", "type": "string" },
        "params": {
          "description": "Коллекция параметров, передаваемых с клиента на сервер",
          "type": "array",
          "items": { "$ref": "#/definitions/PostedParam" }
        }
      }
    },
    "ConfirmResult": {
      "description": "Контейнер подтверждающего экрана",
      "type": "object",
      "properties": {
        "requestId": {
          "format": "int64",
          "description": "Номер поручения",
          "type": "integer"
        },
        "confirmParams": {
          "description": "Подтверждающие параметры операции",
          "type": "array",
          "items": { "$ref": "#/definitions/OperationParam" }
        },
        "authRequest": {
          "$ref": "#/definitions/AuthRequest",
          "description": "Запрос на подтверждение операции"
        },
        "documents": {
          "description": "Документы операции перед подтверждением",
          "type": "array",
          "items": { "$ref": "#/definitions/Document" }
        }
      }
    },
    "OperationFinish": {
      "description": "Класс для передачи параметров при завершении операции",
      "type": "object",
      "properties": {
        "authResponse": {
          "$ref": "#/definitions/AuthResponse",
          "description": "Авторизация клиентом проведения операции"
        }
      }
    },
    "FinalizeResult": {
      "description": "Контейнер финального экрана",
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/Request",
          "description": "Информация по зарегистрированному поручению"
        },
        "finalControl": {
          "$ref": "#/definitions/FinalControl",
          "description": "Специальный контрол для отображения финального экрана"
        },
        "designFinalStepUrl": {
          "description": "Дизайн финального шага из CMS",
          "type": "string"
        },
        "postConfirmationStep": {
          "$ref": "#/definitions/PostConfirmationStep",
          "description": "Получает или устанавливает шаг, отображающийся после подтверждения операции."
        },
        "finalParams": {
          "description": "Специальные параметры операции для отображения на финальном экране",
          "type": "array",
          "items": { "$ref": "#/definitions/OperationParam" }
        }
      }
    },
    "FinalControl": {
      "description": "Контейнер для отображения финального экрана",
      "type": "object",
      "properties": {
        "className": {
          "description": "Специальный контрол для отображения финального экрана",
          "type": "string"
        },
        "title": { "description": "Заголовок текста", "type": "string" },
        "description": { "description": "Описание", "type": "string" },
        "replaceConfirmParams": {
          "description": "Заменить параметры, оставшиеся с шага подтверждения?",
          "type": "boolean"
        },
        "finalParams": {
          "description": "Специальные параметры операции для отображения на финальном экране",
          "type": "array",
          "items": { "$ref": "#/definitions/OperationParam" }
        },
        "technicalParams": {
          "description": "Специальные параметры операции для кастомного финального контрола",
          "type": "array",
          "items": { "$ref": "#/definitions/OperationParam" }
        },
        "confirmMessage": {
          "description": "Сообщение, которое выводится после завершения операции на месте финализатора перед документами",
          "type": "string"
        }
      }
    },
    "PostConfirmationStep": {
      "description": "Шаг, отображаемый после подтверждения операции.",
      "type": "object",
      "properties": {
        "useCustomClose": {
          "description": "Получает или устанавливает признак того, нужно ли использовать особую логику закрытия окна проведения операции.",
          "type": "boolean"
        },
        "caption": { "description": "Заголовок шага", "type": "string" },
        "params": {
          "description": "Параметры операции (для отображения)",
          "type": "array",
          "items": { "$ref": "#/definitions/ScenarioParam" }
        },
        "stepClass": {
          "description": "Класс специальной реализации шага (спец. контрол)",
          "type": "string"
        },
        "requestId": {
          "format": "int64",
          "description": "Номер поручения",
          "type": "integer"
        },
        "isFinished": { "description": "Завершен", "type": "boolean" },
        "hasPreviousStep": {
          "description": "Доступен переход на предыдущий шаг",
          "type": "boolean"
        },
        "skipConfirmStep": {
          "description": "Пропустить шаг подтверждения",
          "type": "boolean"
        },
        "messages": {
          "description": "Сообщения (предупреждения) клиенту",
          "type": "array",
          "items": { "$ref": "#/definitions/StepMessage" }
        },
        "operation": {
          "$ref": "#/definitions/Operation",
          "description": "Операция"
        },
        "template": {
          "$ref": "#/definitions/Template",
          "description": "Операция по шаблону"
        },
        "stepId": {
          "format": "int32",
          "description": "Идентификатор шага",
          "type": "integer"
        },
        "nextButtonTitle": {
          "description": "Заголовок шага",
          "type": "string"
        },
        "groups": {
          "description": "Группы параментров на этом шаге",
          "type": "array",
          "items": { "$ref": "#/definitions/ScenarioStepParamGroup" }
        },
        "popups": {
          "description": "Получает или устанавливает список всплывающих сообщений.",
          "type": "array",
          "items": { "$ref": "#/definitions/Popup" }
        },
        "customData": {
          "description": "Дополнительные данные",
          "type": "array",
          "items": { "$ref": "#/definitions/ScenarioResultCustomData" }
        },
        "googleAnalyticParams": {
          "description": "Дополнительные параметры для Google аналитики",
          "type": "array",
          "items": { "$ref": "#/definitions/GoogleAnalyticItem" }
        },
        "scenarioParams": {
          "description": "Список наименований параметров сценария",
          "type": "array",
          "items": { "type": "string" }
        },
        "stepParams": {
          "description": "Список наименований параметров шага",
          "type": "array",
          "items": { "type": "string" }
        },
        "autoCloseFormOnOperationFinish": {
          "description": "Признак необходимости закрытия формы операции по её завершению.",
          "type": "boolean"
        }
      }
    },
    "TemplatePost": {
      "description": "Класс для передачи параметров при переходе на шаг операции редактирования шаблонов",
      "type": "object",
      "properties": {
        "schedules": {
          "description": "Список расписаний",
          "type": "array",
          "items": { "$ref": "#/definitions/ScheduleBase" }
        },
        "postBackParamIdentifier": {
          "description": "PostBack Param Identifier",
          "type": "string"
        },
        "cultureName": { "description": "Culture Name", "type": "string" },
        "params": {
          "description": "Коллекция параметров, передаваемых с клиента на сервер",
          "type": "array",
          "items": { "$ref": "#/definitions/PostedParam" }
        }
      }
    },
    "ScheduleBase": {
      "description": "Базовое расписание",
      "type": "object",
      "properties": {
        "scheduleId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": "Тип расписания (1 = Day , 2 = MonthDay , 3 = Weekdays , 4 = Month , 5 = MonthWeekday , 22 = Dayly , 33 = Weekly , 44 = Monthly , 55 = MonthlyWeekday )",
          "enum": [1, 2, 3, 4, 5, 22, 33, 44, 55],
          "type": "integer"
        },
        "startDate": {
          "format": "date-time",
          "description": "Дата начала действия расписания",
          "type": "string"
        },
        "description": { "description": "Описание", "type": "string" }
      }
    },
    "TemplateScenarioResult": {
      "description": "Контейнер интерактивного шага для передачи параметров при переходе c шага на шаг операции редактирования шаблонов",
      "type": "object",
      "properties": {
        "schedules": {
          "description": "Список расписаний",
          "type": "array",
          "items": { "$ref": "#/definitions/ScheduleBase" }
        },
        "caption": { "description": "Заголовок шага", "type": "string" },
        "params": {
          "description": "Параметры операции (для отображения)",
          "type": "array",
          "items": { "$ref": "#/definitions/ScenarioParam" }
        },
        "stepClass": {
          "description": "Класс специальной реализации шага (спец. контрол)",
          "type": "string"
        },
        "requestId": {
          "format": "int64",
          "description": "Номер поручения",
          "type": "integer"
        },
        "isFinished": { "description": "Завершен", "type": "boolean" },
        "hasPreviousStep": {
          "description": "Доступен переход на предыдущий шаг",
          "type": "boolean"
        },
        "skipConfirmStep": {
          "description": "Пропустить шаг подтверждения",
          "type": "boolean"
        },
        "messages": {
          "description": "Сообщения (предупреждения) клиенту",
          "type": "array",
          "items": { "$ref": "#/definitions/StepMessage" }
        },
        "operation": {
          "$ref": "#/definitions/Operation",
          "description": "Операция"
        },
        "template": {
          "$ref": "#/definitions/Template",
          "description": "Операция по шаблону"
        },
        "stepId": {
          "format": "int32",
          "description": "Идентификатор шага",
          "type": "integer"
        },
        "nextButtonTitle": {
          "description": "Заголовок шага",
          "type": "string"
        },
        "groups": {
          "description": "Группы параментров на этом шаге",
          "type": "array",
          "items": { "$ref": "#/definitions/ScenarioStepParamGroup" }
        },
        "popups": {
          "description": "Получает или устанавливает список всплывающих сообщений.",
          "type": "array",
          "items": { "$ref": "#/definitions/Popup" }
        },
        "customData": {
          "description": "Дополнительные данные",
          "type": "array",
          "items": { "$ref": "#/definitions/ScenarioResultCustomData" }
        },
        "googleAnalyticParams": {
          "description": "Дополнительные параметры для Google аналитики",
          "type": "array",
          "items": { "$ref": "#/definitions/GoogleAnalyticItem" }
        },
        "scenarioParams": {
          "description": "Список наименований параметров сценария",
          "type": "array",
          "items": { "type": "string" }
        },
        "stepParams": {
          "description": "Список наименований параметров шага",
          "type": "array",
          "items": { "type": "string" }
        },
        "autoCloseFormOnOperationFinish": {
          "description": "Признак необходимости закрытия формы операции по её завершению.",
          "type": "boolean"
        }
      }
    },
    "RequestDraft": {
      "description": "Черновик",
      "type": "object",
      "properties": {
        "requestId": {
          "format": "int64",
          "description": "Номер черновика",
          "type": "integer"
        },
        "sum": {
          "format": "double",
          "description": "Сумма операции",
          "type": "number"
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "operation": {
          "$ref": "#/definitions/Operation",
          "description": "Операция"
        },
        "createDate": {
          "format": "date-time",
          "description": "Дата создания черновика",
          "type": "string"
        },
        "expireDate": {
          "format": "date-time",
          "description": "Дата автоматического удаления черновика",
          "type": "string"
        }
      }
    },
    "SurveyQuestionModel": {
      "type": "object",
      "properties": {
        "answers": {
          "type": "array",
          "items": { "$ref": "#/definitions/SurveyAnswerDTO" }
        },
        "surveyIsAvailable": { "type": "boolean" }
      }
    },
    "SurveyAnswerDTO": {
      "type": "object",
      "properties": {
        "surveyAnswerID": { "format": "int32", "type": "integer" },
        "statusChangeDate": { "format": "date-time", "type": "string" },
        "rate": { "format": "int32", "type": "integer" },
        "comment": { "type": "string" },
        "status": { "format": "int32", "type": "integer" },
        "link": { "type": "string" },
        "surveyEvent": { "$ref": "#/definitions/SurveyEventDTO" },
        "surveyQuestion": { "$ref": "#/definitions/SurveyQuestionDTO" }
      }
    },
    "SurveyEventDTO": {
      "type": "object",
      "properties": {
        "surveyEventID": { "format": "int32", "type": "integer" },
        "eventDate": { "format": "date-time", "type": "string" },
        "officeID": { "format": "int32", "type": "integer" },
        "clientGroupID": { "format": "int32", "type": "integer" },
        "fullName": { "type": "string" },
        "birthDate": { "format": "date-time", "type": "string" },
        "mobilePhone": { "type": "string" },
        "mainServicePhone": { "type": "string" },
        "tempServicePhone": { "type": "string" },
        "isNewClient": { "type": "boolean" },
        "client": { "$ref": "#/definitions/RemoteClientDTO" },
        "surveyEventType": { "$ref": "#/definitions/SurveyEventTypeDTO" }
      }
    },
    "SurveyQuestionDTO": {
      "type": "object",
      "properties": {
        "surveyQuestionID": { "format": "int32", "type": "integer" },
        "questionText": { "type": "string" },
        "maxRate": { "format": "int32", "type": "integer" },
        "commentsAvailable": { "type": "boolean" }
      }
    },
    "RemoteClientDTO": {
      "type": "object",
      "properties": {
        "clientID": { "format": "int32", "type": "integer" },
        "password": { "format": "byte", "type": "string" },
        "mustChangePassword": { "type": "boolean" },
        "allowedChannels": {
          "format": "int32",
          "description": " (1 = Phone , 2 = WWW , 4 = Mobile , 8 = SMS , 16 = Kiosk , 32 = MobileApp , 64 = TabletApp , 128 = InternetBank , 256 = Manager , 512 = WebManager , 1024 = BankAtWork , 2048 = MobileAppNew , 4096 = AtmViaProvider , 6398 = ActualClientChannels , 8192 = MobileNetwork , 16384 = Partner , 32767 = AllChannels )",
          "enum": [
            1,
            2,
            4,
            8,
            16,
            32,
            64,
            128,
            256,
            512,
            1024,
            2048,
            4096,
            6398,
            8192,
            16384,
            32767
          ],
          "type": "integer"
        },
        "isLoginIdent": { "type": "boolean" },
        "isFinancialNotificationEnabled": { "type": "boolean" },
        "remoteASAccess": {
          "format": "int32",
          "description": " (0 = Undefined , 1 = Openway , 2 = NewAthens , 4 = BARS , 7 = All )",
          "enum": [0, 1, 2, 4, 7],
          "type": "integer"
        },
        "remoteAlias": { "type": "string" },
        "isLocked": { "type": "boolean" },
        "isInformationAccessEnabled": { "type": "boolean" },
        "isOperationAccessEnabled": { "type": "boolean" },
        "isDigitalSignatureAllowed": { "type": "boolean" },
        "passwordWithSalt": { "format": "byte", "type": "string" },
        "isContractConfirmationRequired": { "type": "boolean" },
        "mainServicePhone": { "type": "string" },
        "tempServicePhone": { "type": "string" },
        "smsConfirmationStatus": {
          "format": "int32",
          "description": " (0 = Disabled , 1 = Enabled , 2 = Blocked )",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "preferredAuthType": {
          "format": "int32",
          "description": " (0 = Absent , 1 = Password , 2 = SMS , 3 = OTP , 4 = ManualSignature , 6 = Certificate , 8 = CodeWord , 9 = PIN , 10 = SpecialCode , 11 = Push , 12 = DeviceSecurityCode , 13 = Sec3D , 14 = CreditCardInATM , 15 = Passwordless , 16 = Skipped )",
          "enum": [0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16],
          "type": "integer"
        },
        "lastSmsNumber": { "format": "int32", "type": "integer" },
        "isPfmAgreed": { "type": "boolean" },
        "isPfmEnabled": { "type": "boolean" },
        "passwordExpireDate": { "format": "date-time", "type": "string" },
        "phoneID": { "type": "string" },
        "failedRestoreAccessCount": { "format": "int32", "type": "integer" },
        "allowedRestoreAccess": { "type": "boolean" },
        "isAvatarAllowed": { "type": "boolean" },
        "lastPushNumber": { "format": "int32", "type": "integer" },
        "isPushEnabled": { "type": "boolean" },
        "isServicePhoneConfirmed": { "type": "boolean" },
        "passwordHashingMethod": {
          "format": "int32",
          "description": " (0 = Common , 1 = Sha1_Sha256 )",
          "enum": [0, 1],
          "type": "integer"
        },
        "dkoRequired": { "format": "int32", "type": "integer" },
        "allowedLoginByServicePhone": { "type": "boolean" },
        "isLiteOperationAccess": { "type": "boolean" },
        "useAtmCabinet": { "type": "boolean" },
        "client": { "$ref": "#/definitions/ClientDTO" },
        "federalDistrict": { "$ref": "#/definitions/FederalDistrictDTO" },
        "locality": { "$ref": "#/definitions/LocalityDTO" },
        "office": { "$ref": "#/definitions/OfficeDTO" },
        "remoteLevel": {
          "format": "int32",
          "description": " (0 = None , 1 = PriorAccess , 2 = InformationAccess , 3 = OperationAccess )",
          "enum": [0, 1, 2, 3],
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "SurveyEventTypeDTO": {
      "type": "object",
      "properties": {
        "surveyEventTypeID": { "format": "int32", "type": "integer" },
        "name": { "type": "string" }
      }
    },
    "ClientDTO": {
      "type": "object",
      "properties": {
        "clientID": { "format": "int32", "type": "integer" },
        "codeWord": { "type": "string" },
        "openDate": { "format": "date-time", "type": "string" },
        "closeDate": { "format": "date-time", "type": "string" },
        "isValid": { "type": "boolean" },
        "isVIP": { "type": "boolean" },
        "extremistSimilarityType": { "format": "int32", "type": "integer" },
        "searchString": { "type": "string" },
        "lastName": { "type": "string" },
        "firstName": { "type": "string" },
        "middleName": { "type": "string" },
        "lastNameLat": { "type": "string" },
        "firstNameLat": { "type": "string" },
        "previousLastName": { "type": "string" },
        "sex": { "format": "int32", "type": "integer" },
        "birthDate": { "format": "date-time", "type": "string" },
        "birthPlace": { "type": "string" },
        "inn": { "type": "string" },
        "taxResidenceType": { "format": "int32", "type": "integer" },
        "residenceType": { "format": "int32", "type": "integer" },
        "arPostalCode": { "type": "string" },
        "arRegion": { "type": "string" },
        "arCity": { "type": "string" },
        "arStreet": { "type": "string" },
        "arBuilding": { "type": "string" },
        "arFlat": { "type": "string" },
        "alSame": { "type": "boolean" },
        "alPostalCode": { "type": "string" },
        "alRegion": { "type": "string" },
        "alCity": { "type": "string" },
        "alStreet": { "type": "string" },
        "alBuilding": { "type": "string" },
        "alFlat": { "type": "string" },
        "apSame": { "format": "int32", "type": "integer" },
        "apPostalCode": { "type": "string" },
        "apRegion": { "type": "string" },
        "apCity": { "type": "string" },
        "apStreet": { "type": "string" },
        "apBuilding": { "type": "string" },
        "apFlat": { "type": "string" },
        "homePhone": { "type": "string" },
        "workPhone": { "type": "string" },
        "mobilePhone": { "type": "string" },
        "fax": { "type": "string" },
        "email": { "type": "string" },
        "phoneCallTime": { "type": "string" },
        "idnSeries": { "type": "string" },
        "idnNumber": { "type": "string" },
        "idnWhereGiven": { "type": "string" },
        "idnWhenGiven": { "format": "date-time", "type": "string" },
        "idnExpires": { "format": "date-time", "type": "string" },
        "lastModificationDate": { "format": "date-time", "type": "string" },
        "arStructure": { "type": "string" },
        "arBlock": { "type": "string" },
        "alStructure": { "type": "string" },
        "alBlock": { "type": "string" },
        "apStructure": { "type": "string" },
        "apBlock": { "type": "string" },
        "idnInviteDoc": { "type": "string" },
        "idnMigrationCard": { "type": "string" },
        "kfmLevel": { "format": "int32", "type": "integer" },
        "kfmLevelReason": { "type": "string" },
        "idnIssuerCode": { "type": "string" },
        "arSinceDate": { "format": "date-time", "type": "string" },
        "alSinceDate": { "format": "date-time", "type": "string" },
        "idnMigrCardOpenDate": { "format": "date-time", "type": "string" },
        "idnMigrCardCloseDate": { "format": "date-time", "type": "string" },
        "idnMigrCardIsAbsent": { "type": "boolean" },
        "idnMigrCardAbsenceReason": { "type": "string" },
        "idnToStayInRfType": {
          "format": "int32",
          "description": " (0 = None , 1 = StayPermit , 2 = TemporaryPermit , 3 = Visa , 4 = Other )",
          "enum": [0, 1, 2, 3, 4],
          "type": "integer"
        },
        "idnToStayInRfOpenDate": { "format": "date-time", "type": "string" },
        "idnToStayInRfCloseDate": { "format": "date-time", "type": "string" },
        "idnToLiveOutOfRfType": {
          "format": "int32",
          "description": " (0 = None , 1 = ForeignPassport , 2 = ForeignPassportWithVisa , 4 = Other )",
          "enum": [0, 1, 2, 4],
          "type": "integer"
        },
        "idnToLiveOutOfRfName": { "type": "string" },
        "idnToLiveOutOfRfDesc": { "type": "string" },
        "isVoidIdn": { "type": "boolean" },
        "idnName": { "type": "string" },
        "isBlackListed": { "type": "boolean" },
        "blackListedReason": { "type": "string" },
        "foreignPublicOfficerRelation": {
          "format": "int32",
          "description": " (0 = None , 1 = Himself , 2 = Kin )",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "kfmModificationDate": { "format": "date-time", "type": "string" },
        "previousFirstName": { "type": "string" },
        "workPhoneAdd": { "type": "string" },
        "arPhone": { "type": "string" },
        "idnToLiveOutOfRfOpenDate": { "format": "date-time", "type": "string" },
        "idnToLiveOutOfRfCloseDate": {
          "format": "date-time",
          "type": "string"
        },
        "idnToLiveOutOfRfOtherType": {
          "format": "int32",
          "description": " (0 = None , 1 = StudyVisa , 2 = WorkVisa )",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "idnToLiveOutOfRfOtherOpenDate": {
          "format": "date-time",
          "type": "string"
        },
        "idnToLiveOutOfRfOtherCloseDate": {
          "format": "date-time",
          "type": "string"
        },
        "idnToLiveOutOfRfOtherDesc": { "type": "string" },
        "contactTimeFrom": { "format": "date-time", "type": "string" },
        "contactTimeTo": { "format": "date-time", "type": "string" },
        "contactTimeZoneIndex": { "format": "int32", "type": "integer" },
        "arDistrict": { "type": "string" },
        "alDistrict": { "type": "string" },
        "apDistrict": { "type": "string" },
        "contactInfoModificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "accountNotificationCheckDate": {
          "format": "date-time",
          "type": "string"
        },
        "arRuleViewType": { "format": "int32", "type": "integer" },
        "alRuleViewType": { "format": "int32", "type": "integer" },
        "apRuleViewType": { "format": "int32", "type": "integer" },
        "publicOfficerRelation": {
          "format": "int32",
          "description": " (0 = None , 1 = Himself , 2 = Kin )",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "publicOfficerPosition": { "type": "string" },
        "extremistSimilarityCheckStatus": {
          "format": "int32",
          "type": "integer"
        },
        "addressInfoModificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "beneficialOwner": {
          "format": "int32",
          "description": " (0 = NotSet , 1 = None , 2 = WithoutFullData , 3 = WithFullData )",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "beneficialOwnerModificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "birthCountryOther": { "type": "string" },
        "fatcaStatus": {
          "format": "int32",
          "description": " (0 = NotChecked , 1 = Processing , 2 = NotUsaResidenceUsIndiciaValidated , 3 = WaitingDocumentsStrongValidation , 4 = WaitingDocumentsLaxValidation , 5 = UsaResidence , 6 = NotUsaResidenceDocumentsValidated , 7 = Recalcitrant , 13 = UsaResidenceWaitingTin )",
          "enum": [0, 1, 2, 3, 4, 5, 6, 7, 13],
          "type": "integer"
        },
        "fatcaDocumentsRequired": { "type": "boolean" },
        "vipReason": { "type": "string" },
        "bankruptStatus": {
          "format": "int32",
          "description": " (0 = NotSet , 1 = SuspicionOfBankrupt , 2 = Bankrupt , 3 = ExBankrupt , 4 = BankruptAttempt , 5 = BankruptSimulation , 6 = SettlementAgreement , 7 = DebtRestructured , 8 = Unverified )",
          "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8],
          "type": "integer"
        },
        "bankruptProcedureStatus": {
          "format": "int32",
          "description": " (0 = NotSet , 1 = BankruptPetition , 2 = DebtRestructuring , 3 = PropertyRealization )",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "isStopListed": { "type": "boolean" },
        "stopListedReason": { "type": "string" },
        "profAreaWithoutSnils": {
          "format": "int32",
          "description": " (0 = None , 1 = Judges , 2 = Prosecutors , 3 = InvestigativeCommitteeStaff , 4 = Military , 5 = InternalAffairsEmployees , 6 = FireServiceStaff , 7 = FsknStaff , 8 = FsinStaff , 9 = NationalGuardStaff , 10 = CustomsServiceEmployees , 11 = ForeignCitizens , 12 = Students , 13 = Authors )",
          "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],
          "type": "integer"
        },
        "militaryStatus": {
          "format": "int32",
          "description": " (0 = NotMilitary , 1 = Military , 2 = IncludedInNIS )",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "dateOfExclusionFromNIS": { "format": "date-time", "type": "string" },
        "dateReturnToNIS": { "format": "date-time", "type": "string" },
        "crmClientId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "isUnderSanctions": { "type": "boolean" },
        "status": { "format": "int32", "type": "integer" },
        "abroadPhone": { "type": "string" },
        "fullName": { "type": "string" },
        "abroadPhoneCode": { "type": "string" },
        "mobilePhone2": { "type": "string" },
        "nisNumber": { "type": "string" },
        "nisDate": { "format": "date-time", "type": "string" },
        "trlContractNumber": { "type": "string" },
        "trlContractDate": { "format": "date-time", "type": "string" },
        "clientGroup": { "$ref": "#/definitions/ClientGroupDTO" },
        "ownerClient": { "$ref": "#/definitions/ClientDTO" },
        "beneficialOwnerClient": { "$ref": "#/definitions/ClientDTO" },
        "financialOfficerClient": { "$ref": "#/definitions/ClientDTO" },
        "bank": { "$ref": "#/definitions/BankDTO" },
        "alCityType": { "$ref": "#/definitions/CityTypeDTO" },
        "apCityType": { "$ref": "#/definitions/CityTypeDTO" },
        "arCityType": { "$ref": "#/definitions/CityTypeDTO" },
        "alCountry": { "$ref": "#/definitions/CountryDTO" },
        "apCountry": { "$ref": "#/definitions/CountryDTO" },
        "arCountry": { "$ref": "#/definitions/CountryDTO" },
        "birthCountry": { "$ref": "#/definitions/CountryDTO" },
        "nationalityCountry": { "$ref": "#/definitions/CountryDTO" },
        "residenceCountry": { "$ref": "#/definitions/CountryDTO" },
        "alDistrictType": { "$ref": "#/definitions/DistrictTypeDTO" },
        "apDistrictType": { "$ref": "#/definitions/DistrictTypeDTO" },
        "arDistrictType": { "$ref": "#/definitions/DistrictTypeDTO" },
        "alFederalDistrict": { "$ref": "#/definitions/FederalDistrictDTO" },
        "apFederalDistrict": { "$ref": "#/definitions/FederalDistrictDTO" },
        "arFederalDistrict": { "$ref": "#/definitions/FederalDistrictDTO" },
        "idnType": { "$ref": "#/definitions/IdnTypeDTO" },
        "kfmOffice": { "$ref": "#/definitions/OfficeDTO" },
        "vipRestrictedOffice": { "$ref": "#/definitions/OfficeDTO" },
        "alRegionType": { "$ref": "#/definitions/RegionTypeDTO" },
        "apRegionType": { "$ref": "#/definitions/RegionTypeDTO" },
        "arRegionType": { "$ref": "#/definitions/RegionTypeDTO" },
        "alStreetType": { "$ref": "#/definitions/StreetTypeDTO" },
        "apStreetType": { "$ref": "#/definitions/StreetTypeDTO" },
        "arStreetType": { "$ref": "#/definitions/StreetTypeDTO" },
        "computedFullName": { "type": "string", "readOnly": true },
        "mainServicePhone": { "type": "string" },
        "tempServicePhone": { "type": "string" },
        "fullIdn": { "type": "string" },
        "bankruptStatusDate": { "format": "date-time", "type": "string" },
        "bankruptProcedureStatusDate": {
          "format": "date-time",
          "type": "string"
        },
        "bankruptManualStatusDate": { "format": "date-time", "type": "string" },
        "isOrange": { "type": "boolean" },
        "isPSBPriority": { "type": "boolean" }
      }
    },
    "FederalDistrictDTO": {
      "type": "object",
      "properties": {
        "localities": {
          "type": "array",
          "items": { "$ref": "#/definitions/LocalityDTO" }
        },
        "federalDistrictID": { "format": "int32", "type": "integer" },
        "name": { "type": "string" },
        "priority": { "format": "int32", "type": "integer" },
        "code": { "format": "int32", "type": "integer" },
        "courtName": { "type": "string" },
        "magistracyName": { "type": "string" },
        "okato": { "type": "string" },
        "shortName": { "type": "string" },
        "capitalName": { "type": "string" },
        "hasSimilarCapitalName": { "type": "boolean" },
        "kladrObject": { "$ref": "#/definitions/KladrObjectDTO" }
      }
    },
    "LocalityDTO": {
      "type": "object",
      "properties": {
        "localityID": { "format": "int32", "type": "integer" },
        "name": { "type": "string" },
        "priority": { "format": "int32", "type": "integer" },
        "abroad": { "type": "boolean" },
        "federalDistrict": { "$ref": "#/definitions/FederalDistrictDTO" }
      }
    },
    "OfficeDTO": {
      "type": "object",
      "properties": {
        "officeID": { "format": "int32", "type": "integer" },
        "code": { "format": "int32", "type": "integer" },
        "fullName": { "type": "string" },
        "briefName": { "type": "string" },
        "enabled": { "type": "boolean" },
        "address": { "type": "string" },
        "phone": { "type": "string" },
        "fax": { "type": "string" },
        "contact": { "type": "string" },
        "contactLocality": { "type": "string" },
        "chiefName": { "type": "string" },
        "chiefPost": { "type": "string" },
        "accChiefName": { "type": "string" },
        "accChiefPost": { "type": "string" },
        "branchType": { "format": "int32", "type": "integer" },
        "cardOrderEnabled": { "type": "boolean" },
        "isMain": { "type": "boolean" },
        "uploadPartSize": { "format": "int64", "type": "integer" },
        "isOperating": { "type": "boolean" },
        "activationDate": { "format": "date-time", "type": "string" },
        "endDate": { "format": "date-time", "type": "string" },
        "format": {
          "format": "int32",
          "description": " (1 = General , 2 = Lead , 4 = Standard , 8 = Light , 16 = Mini , 32 = Kiosk , 64 = Stand )",
          "enum": [1, 2, 4, 8, 16, 32, 64],
          "type": "integer"
        },
        "allowedCardsOperations": { "format": "int32", "type": "integer" },
        "allowedLoansOperations": { "format": "int32", "type": "integer" },
        "copyOfDocumentsCheckState": {
          "format": "int32",
          "description": " (0 = Disabled , 1 = Enabled , 2 = DisabledForDay )",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "email": { "type": "string" },
        "streetLocation": { "type": "string" },
        "metro": { "type": "string" },
        "geoLat": { "format": "double", "type": "number" },
        "geoLong": { "format": "double", "type": "number" },
        "district": { "type": "string" },
        "notificationAddress": { "type": "string" },
        "isMortgageCenter": { "type": "boolean" },
        "locality": { "$ref": "#/definitions/LocalityDTO" },
        "branch": { "$ref": "#/definitions/BranchDTO" },
        "regionalOffice": { "$ref": "#/definitions/RegionalOfficeDTO" },
        "kfmUser": { "$ref": "#/definitions/UserDTO" }
      }
    },
    "ClientGroupDTO": {
      "type": "object",
      "properties": {
        "clientGroupID": { "format": "int32", "type": "integer" },
        "name": { "type": "string" },
        "riskGroup": { "$ref": "#/definitions/RiskGroupDTO" }
      }
    },
    "BankDTO": {
      "type": "object",
      "properties": {
        "bankID": { "format": "int32", "type": "integer" },
        "code": { "format": "int32", "type": "integer" },
        "bankName": { "type": "string" },
        "briefName": { "type": "string" },
        "fullName": { "type": "string" },
        "enabled": { "type": "boolean" },
        "uploadPartSize": { "format": "int64", "type": "integer" },
        "contactPhoneMoscow": { "type": "string" },
        "contactPhoneRussia": { "type": "string" },
        "bankGroup": { "$ref": "#/definitions/BankGroupDTO" }
      }
    },
    "CityTypeDTO": {
      "type": "object",
      "properties": {
        "cityTypeID": { "format": "int32", "type": "integer" },
        "name": { "type": "string" },
        "shortName": { "type": "string" },
        "kladrCodeType": { "$ref": "#/definitions/KladrCodeTypeDTO" }
      }
    },
    "CountryDTO": {
      "type": "object",
      "properties": {
        "countryID": { "format": "int32", "type": "integer" },
        "nameLat": { "type": "string" },
        "name": { "type": "string" },
        "isoS2": { "type": "string" },
        "isoS3": { "type": "string" },
        "ison": { "format": "int32", "type": "integer" },
        "type": { "format": "int32", "type": "integer" },
        "ibanLength": { "format": "int32", "type": "integer" },
        "isCrs": { "type": "boolean" },
        "crsNameEng": { "type": "string" },
        "crsPhoneCode": { "type": "string" },
        "crsDomen": { "type": "string" },
        "crsTinLength": { "format": "int32", "type": "integer" },
        "crsTinTemplate": { "type": "string" },
        "isUnderSanctions": { "type": "boolean" },
        "action": { "$ref": "#/definitions/ActionDTO" }
      }
    },
    "DistrictTypeDTO": {
      "type": "object",
      "properties": {
        "districtTypeID": { "format": "int32", "type": "integer" },
        "name": { "type": "string" },
        "shortName": { "type": "string" },
        "kladrCodeType": { "$ref": "#/definitions/KladrCodeTypeDTO" }
      }
    },
    "IdnTypeDTO": {
      "type": "object",
      "properties": {
        "idnTypeID": { "format": "int32", "type": "integer" },
        "name": { "type": "string" },
        "shortName": { "type": "string" },
        "centralBankCode": { "format": "int32", "type": "integer" },
        "taxCode": { "format": "int32", "type": "integer" },
        "ordNo": { "format": "int32", "type": "integer" },
        "supportsSeries": { "type": "boolean" },
        "supportsExpiration": { "type": "boolean" },
        "supportsName": { "type": "boolean" },
        "enabled": { "type": "boolean" },
        "residenceType": {
          "format": "int32",
          "description": " (0 = Unknown , 1 = Resident , 2 = NonResident )",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "idnDocType": {
          "format": "int32",
          "description": " (0 = Unknown , 1 = Primary , 2 = Secondary )",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "idnDocGroup": {
          "format": "int32",
          "description": " (0 = Unknown , 1 = Russian , 2 = Foreign , 3 = Apatride , 4 = Refugee , 5 = Other )",
          "enum": [0, 1, 2, 3, 4, 5],
          "type": "integer"
        },
        "supportsWhereGiven": { "type": "boolean" },
        "supportsWhenGiven": { "type": "boolean" },
        "supportsNumber": { "type": "boolean" },
        "legalizationCode": { "format": "int32", "type": "integer" },
        "seriesMask": { "type": "string" },
        "numberMask": { "type": "string" },
        "seriesMaskDescription": { "type": "string" },
        "numberMaskDescription": { "type": "string" },
        "isSeriesRequired": { "type": "boolean" },
        "documentCode107n": { "type": "string" }
      }
    },
    "RegionTypeDTO": {
      "type": "object",
      "properties": {
        "regionTypeID": { "format": "int32", "type": "integer" },
        "name": { "type": "string" },
        "shortName": { "type": "string" },
        "kladrCodeType": { "$ref": "#/definitions/KladrCodeTypeDTO" }
      }
    },
    "StreetTypeDTO": {
      "type": "object",
      "properties": {
        "streetTypeID": { "format": "int32", "type": "integer" },
        "name": { "type": "string" },
        "shortName": { "type": "string" },
        "kladrCodeType": { "$ref": "#/definitions/KladrCodeTypeDTO" }
      }
    },
    "KladrObjectDTO": {
      "type": "object",
      "properties": {
        "kladrCodeTypeID": { "format": "int32", "type": "integer" },
        "subjectID": { "format": "int32", "type": "integer" },
        "regionID": { "format": "int32", "type": "integer" },
        "townID": { "format": "int32", "type": "integer" },
        "subTownID": { "format": "int32", "type": "integer" },
        "streetID": { "format": "int32", "type": "integer" },
        "statusID": { "format": "int32", "type": "integer" },
        "name": { "type": "string" },
        "status": { "format": "int32", "type": "integer" },
        "kladrObjectID": { "format": "int32", "type": "integer" },
        "kladrCodeType": { "$ref": "#/definitions/KladrCodeTypeDTO" },
        "kladrVersionID": { "format": "int32", "type": "integer" }
      }
    },
    "BranchDTO": {
      "type": "object",
      "properties": {
        "branchID": { "format": "int32", "type": "integer" },
        "code": { "format": "int32", "type": "integer" },
        "fullName": { "type": "string" },
        "descriptiveName": { "type": "string" },
        "briefName": { "type": "string" },
        "enabled": { "type": "boolean" },
        "address": { "type": "string" },
        "postAddress": { "type": "string" },
        "phone": { "type": "string" },
        "fax": { "type": "string" },
        "contact": { "type": "string" },
        "bic": { "type": "string" },
        "corrAccount": { "type": "string" },
        "inn": { "type": "string" },
        "okato": { "type": "string" },
        "okpo": { "type": "string" },
        "accountingBankName": { "type": "string" },
        "regionCentralBankName": { "type": "string" },
        "regionCentralBankAddress": { "type": "string" },
        "regNumber": { "type": "string" },
        "informationPhone": { "type": "string" },
        "remoteSupportPhone": { "type": "string" },
        "stamp": { "type": "object" },
        "sign": { "type": "object" },
        "rateScheme": { "format": "int32", "type": "integer" },
        "branchType": { "format": "int32", "type": "integer" },
        "timeZoneIndex": { "format": "int32", "type": "integer" },
        "swift": { "type": "string" },
        "nameLat": { "type": "string" },
        "kpp": { "type": "string" },
        "localTaxInspectionCode": { "format": "int32", "type": "integer" },
        "cardOrderEnabled": { "type": "boolean" },
        "printOwnPaymentsAsRegistries": { "type": "boolean" },
        "isMain": { "type": "boolean" },
        "uploadPartSize": { "format": "int64", "type": "integer" },
        "isOperating": { "type": "boolean" },
        "activationDate": { "format": "date-time", "type": "string" },
        "endDate": { "format": "date-time", "type": "string" },
        "baseCode": { "format": "int32", "type": "integer" },
        "domainAuthenticationRequirement": { "type": "boolean" },
        "bank": { "$ref": "#/definitions/BankDTO" },
        "country": { "$ref": "#/definitions/CountryDTO" }
      }
    },
    "RegionalOfficeDTO": {
      "type": "object",
      "properties": {
        "regionalOfficeID": { "format": "int32", "type": "integer" },
        "code": { "format": "int32", "type": "integer" },
        "fullName": { "type": "string" },
        "briefName": { "type": "string" },
        "informationPhone": { "type": "string" },
        "activationDate": { "format": "date-time", "type": "string" },
        "endDate": { "format": "date-time", "type": "string" },
        "uploadPartSize": { "format": "int64", "type": "integer" },
        "isMain": { "type": "boolean" },
        "timeZoneIndex": { "format": "int32", "type": "integer" },
        "branch": { "$ref": "#/definitions/BranchDTO" }
      }
    },
    "UserDTO": {
      "type": "object",
      "properties": {
        "userWorkplaces": {
          "type": "array",
          "items": { "$ref": "#/definitions/UserWorkplaceDTO" }
        },
        "userGroups": {
          "type": "array",
          "items": { "$ref": "#/definitions/UserUserGroupDTO" }
        },
        "phones": { "type": "string", "readOnly": true },
        "userID": { "format": "int32", "type": "integer" },
        "name": { "type": "string" },
        "shortName": { "type": "string" },
        "position": { "type": "string" },
        "login": { "type": "string" },
        "createDate": { "format": "date-time", "type": "string" },
        "lastLoginDate": { "format": "date-time", "type": "string" },
        "closeDate": { "format": "date-time", "type": "string" },
        "address": { "type": "string" },
        "phone": { "type": "string" },
        "status": {
          "format": "int32",
          "description": " (0 = Unknown , 1 = Active , 2 = Blocked , 3 = Deleted )",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": " (1 = Real , 2 = Passive , 3 = Test , 4 = System )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "mustChangePassword": { "type": "boolean" },
        "lastModificationDate": { "format": "date-time", "type": "string" },
        "employeeNumber": { "type": "string" },
        "domainLogin": { "type": "string" },
        "genitiveName": { "type": "string" },
        "genitivePosition": { "type": "string" },
        "password": { "format": "byte", "type": "string" },
        "passwordWithSalt": { "format": "byte", "type": "string" },
        "mobilePhone": { "type": "string" },
        "blockReason": { "type": "string" }
      }
    },
    "RiskGroupDTO": {
      "type": "object",
      "properties": {
        "riskGroupID": { "format": "int32", "type": "integer" },
        "name": { "type": "string" }
      }
    },
    "BankGroupDTO": {
      "type": "object",
      "properties": {
        "bankGroupID": { "format": "int32", "type": "integer" },
        "name": { "type": "string" },
        "enabled": { "type": "boolean" },
        "uploadPartSize": { "format": "int64", "type": "integer" }
      }
    },
    "KladrCodeTypeDTO": {
      "type": "object",
      "properties": {
        "kladrCodeTypeID": { "format": "int32", "type": "integer" },
        "name": { "type": "string" },
        "shortName": { "type": "string" },
        "level": { "format": "int32", "type": "integer" }
      }
    },
    "ActionDTO": {
      "type": "object",
      "properties": {
        "actionID": { "format": "int32", "type": "integer" },
        "entityID": { "type": "string" },
        "logDate": { "format": "date-time", "type": "string" },
        "content": { "type": "string" },
        "actionType": { "$ref": "#/definitions/ActionTypeDTO" },
        "digitalSignature": { "$ref": "#/definitions/DigitalSignatureDTO" },
        "session": { "$ref": "#/definitions/SessionDTO" }
      }
    },
    "UserWorkplaceDTO": {
      "type": "object",
      "properties": {
        "userWorkplaceID": { "format": "int32", "type": "integer" },
        "isDefault": { "type": "boolean" },
        "absLogin": { "type": "string" },
        "legalizationLogin": { "type": "string" },
        "user": { "$ref": "#/definitions/UserDTO" },
        "workplace": { "$ref": "#/definitions/WorkplaceDTO" }
      }
    },
    "UserUserGroupDTO": {
      "type": "object",
      "properties": {
        "userUserGroupID": { "format": "int32", "type": "integer" },
        "user": { "$ref": "#/definitions/UserDTO" },
        "userGroup": { "$ref": "#/definitions/UserGroupDTO" },
        "bankGroup": { "$ref": "#/definitions/BankGroupDTO" },
        "bank": { "$ref": "#/definitions/BankDTO" },
        "branch": { "$ref": "#/definitions/BranchDTO" },
        "regionalOffice": { "$ref": "#/definitions/RegionalOfficeDTO" },
        "office": { "$ref": "#/definitions/OfficeDTO" },
        "placement": { "$ref": "#/definitions/PlacementDTO" }
      }
    },
    "ActionTypeDTO": {
      "type": "object",
      "properties": {
        "actionTypeID": { "format": "int32", "type": "integer" },
        "name": { "type": "string" },
        "externalID": { "type": "string" },
        "entityType": { "$ref": "#/definitions/SubsystemEntityTypeDTO" }
      }
    },
    "DigitalSignatureDTO": {
      "type": "object",
      "properties": {
        "digitalSignatureID": { "format": "int32", "type": "integer" },
        "authType": {
          "format": "int32",
          "description": " (0 = Absent , 1 = Password , 2 = SMS , 3 = OTP , 4 = ManualSignature , 6 = Certificate , 8 = CodeWord , 9 = PIN , 10 = SpecialCode , 11 = Push , 12 = DeviceSecurityCode , 13 = Sec3D , 14 = CreditCardInATM , 15 = Passwordless , 16 = Skipped )",
          "enum": [0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16],
          "type": "integer"
        },
        "authLevel": {
          "format": "int32",
          "description": " (0 = None , 1 = Identification , 2 = SymmetricKeys , 4 = AsymmetricKeys , 8 = ManualSignature )",
          "enum": [0, 1, 2, 4, 8],
          "type": "integer"
        },
        "request": { "type": "string" },
        "chunk": { "type": "string" },
        "signature": { "type": "string" },
        "signDate": { "format": "date-time", "type": "string" }
      }
    },
    "SessionDTO": {
      "type": "object",
      "properties": {
        "sessionID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "openDate": { "format": "date-time", "type": "string" },
        "closeDate": { "format": "date-time", "type": "string" },
        "lastOperationDate": { "format": "date-time", "type": "string" },
        "state": {
          "format": "int32",
          "description": " (0 = Unknown , 1 = Opened , 2 = Closed , 3 = Broken )",
          "enum": [0, 1, 2, 3],
          "type": "integer"
        },
        "channelType": {
          "format": "int32",
          "description": " (0 = Undefined , 1 = Manager , 2 = Phone , 3 = WWW , 4 = Mobile , 5 = SMS , 6 = Kiosk , 7 = MobileApp , 8 = WebManager , 9 = TabletApp , 10 = InternetBank , 11 = BankAtWork , 12 = MobileAppNew , 13 = AtmViaProvider , 14 = MobileNetwork , 15 = Partner )",
          "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
          "type": "integer"
        },
        "hostAddress": { "type": "string" },
        "ownerType": {
          "format": "int32",
          "description": " (0 = Unknown , 1 = LocalOperator , 2 = Client , 3 = CoreX , 4 = RemoteOperator , 5 = BankAtWork , 6 = UnauthorizedClient , 7 = OffsiteOperator , 8 = ExternalPartner )",
          "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8],
          "type": "integer"
        },
        "expireInterval": { "format": "int32", "type": "integer" },
        "isOperationTime": { "type": "boolean" },
        "way4RetrievalReferenceNumber": { "type": "string" },
        "atmID": { "type": "string" },
        "way4ClientID": { "format": "int64", "type": "integer" },
        "way4CardNativeID": { "format": "int64", "type": "integer" },
        "office": { "$ref": "#/definitions/OfficeDTO" },
        "user": { "$ref": "#/definitions/UserDTO" },
        "workplace": { "$ref": "#/definitions/WorkplaceDTO" }
      }
    },
    "WorkplaceDTO": {
      "type": "object",
      "properties": {
        "workplaceID": { "format": "int32", "type": "integer" },
        "name": { "type": "string" },
        "description": { "type": "string" },
        "absWorkplaceID": { "format": "int64", "type": "integer" },
        "enabled": { "type": "boolean" },
        "placement": { "$ref": "#/definitions/PlacementDTO" }
      }
    },
    "UserGroupDTO": {
      "type": "object",
      "properties": {
        "userGroupID": { "format": "int32", "type": "integer" },
        "name": { "type": "string" },
        "description": { "type": "string" },
        "reference": { "type": "string" },
        "orgUnitType": {
          "format": "int32",
          "description": " (0 = Unknown , 1 = Bank , 2 = Branch , 4 = Office , 8 = Placement , 16 = BankGroup , 32 = Workplace , 64 = RegionalOffice )",
          "enum": [0, 1, 2, 4, 8, 16, 32, 64],
          "type": "integer"
        },
        "isAnyWorkplaceSelectionGranted": { "type": "boolean" }
      }
    },
    "PlacementDTO": {
      "type": "object",
      "properties": {
        "placementID": { "format": "int32", "type": "integer" },
        "enabled": { "type": "boolean" },
        "fullName": { "type": "string" },
        "briefName": { "type": "string" },
        "address": { "type": "string" },
        "phone": { "type": "string" },
        "fax": { "type": "string" },
        "contact": { "type": "string" },
        "isNonOperationTimeSupported": { "type": "boolean" },
        "operationTimeMinHours": { "format": "int32", "type": "integer" },
        "operationTimeMinMinutes": { "format": "int32", "type": "integer" },
        "operationTimeMaxHours": { "format": "int32", "type": "integer" },
        "operationTimeMaxMinutes": { "format": "int32", "type": "integer" },
        "allowedOperations": { "format": "int32", "type": "integer" },
        "isOutOfPlacementUnit": { "type": "boolean" },
        "office": { "$ref": "#/definitions/OfficeDTO" }
      }
    },
    "SubsystemEntityTypeDTO": {
      "type": "object",
      "properties": {
        "entityTypeID": { "format": "int32", "type": "integer" },
        "identifier": { "type": "string" },
        "name": { "type": "string" },
        "additionalIdentifier": { "type": "string" },
        "tableName": { "type": "string" },
        "customAttributesTableName": { "type": "string" },
        "attributesCategoryTableName": { "type": "string" },
        "classifierTypeColumnName": { "type": "string" },
        "withColumns": {
          "format": "int32",
          "description": " (1 = ActionID , 2 = RequestID )",
          "enum": [1, 2],
          "type": "integer"
        },
        "customAttributesConditionsTableName": { "type": "string" },
        "isImplicitDateSetting": { "type": "boolean" },
        "customAttributeConditionValuesTableName": { "type": "string" },
        "documentsTableName": { "type": "string" },
        "parentEntityTypeID": { "format": "int32", "type": "integer" },
        "classifierType": { "format": "int32", "type": "integer" },
        "clientGroupsTableName": { "type": "string" },
        "serviceRestrictionsTableName": { "type": "string" },
        "formHierarchyFunctionName": { "type": "string" },
        "attachedDocumentImagesTableName": { "type": "string" },
        "providerFullTypeName": { "type": "string" },
        "entityClassType": { "$ref": "#/definitions/SubsystemEntityTypeDTO" },
        "subsystem": { "$ref": "#/definitions/SubsystemDTO" }
      }
    },
    "SubsystemDTO": {
      "type": "object",
      "properties": {
        "subsystemID": { "format": "int32", "type": "integer" },
        "prefix": { "type": "string" },
        "name": { "type": "string" }
      }
    },
    "SurveyAnswerModel": {
      "description": "Ответ на вопрос опроса.",
      "type": "object",
      "properties": {
        "link": {
          "description": "Уникальная ссылка на ответ вопроса.",
          "type": "string"
        },
        "answers": {
          "description": "",
          "type": "array",
          "items": { "$ref": "#/definitions/AnswerModel" }
        }
      }
    },
    "AnswerModel": {
      "description": "",
      "type": "object",
      "properties": {
        "surveyAnswerId": {
          "format": "int32",
          "description": "Id ответа.",
          "type": "integer"
        },
        "rate": {
          "format": "int32",
          "description": "Оценка клиента.",
          "type": "integer"
        },
        "comment": { "description": "Комментарий клиента.", "type": "string" }
      }
    },
    "AppRatingSettings": {
      "description": "Настройки, используемые для оценки мобильных приложений (iOS и Android).",
      "type": "object",
      "properties": {
        "launchedOperationsCount": {
          "format": "int32",
          "description": "Кол-во успешных операций клиента, необходимое для запуска окна с оценкой.",
          "type": "integer"
        },
        "delayInDaysAfterNotNowResponse": {
          "format": "int32",
          "description": "Количество дней задержки после ответа клиента «Не сейчас».",
          "type": "integer"
        },
        "delayInDaysAfterLastRating": {
          "format": "int32",
          "description": "Количество дней задержки после проставления оценки.",
          "type": "integer"
        },
        "softLaunchPercentage": {
          "format": "int32",
          "description": "Процент \"раскатки\", т.е. на скольких устройствах включать новый функционал. \r\nКлиентам с НК, у которых YY (два последних числа в НК) меньше либо равно SoftLaunchPercentage, \r\nто им показываем, остальным не показываем.",
          "type": "integer"
        }
      }
    },
    "EmailFeedbackModel": {
      "description": "Модель письма с отзывом о приложении.",
      "type": "object",
      "properties": {
        "subject": { "description": "Тема письма.", "type": "string" },
        "message": { "description": "Сообщение.", "type": "string" }
      }
    },
    "TemplateWithSchedules": {
      "description": "Информация о шаблоне операции с графиками",
      "type": "object",
      "properties": {
        "schedules": {
          "description": "Графики исполнения шаблона",
          "type": "array",
          "items": { "$ref": "#/definitions/ScheduleBase" }
        },
        "nearestExecDate": {
          "format": "date-time",
          "description": "Дата ближайшего исполнения шаблона",
          "type": "string"
        },
        "untypedSchedules": {
          "description": "Нетипизированное представление графиков.",
          "type": "array",
          "items": { "$ref": "#/definitions/UntypedSchedule" }
        },
        "aliasesParameters": {
          "description": "Алиасы/псевдонимы параметров операции (если определены в Продуктовом каталоге)",
          "type": "array",
          "items": { "$ref": "#/definitions/AliasRetailParameter" }
        },
        "operationDetailsParameters": {
          "description": "Список параметров, которые входят в состав детальной информации об операции (если определены в Продуктовом каталоге)",
          "type": "array",
          "items": { "type": "string" }
        },
        "aliases": {
          "description": "Полная информация об алиасах параметров.",
          "type": "array",
          "items": { "$ref": "#/definitions/AliasInfo" }
        },
        "templateId": {
          "format": "int32",
          "description": "Идентификатор шаблона",
          "type": "integer"
        },
        "code": {
          "format": "int32",
          "description": "Код шаблона",
          "type": "integer"
        },
        "name": { "description": "Наименование", "type": "string" },
        "isFavorite": {
          "description": "Признак избранного шаблона",
          "type": "boolean"
        },
        "operationCode": {
          "format": "int32",
          "description": "Код операции",
          "type": "integer"
        },
        "operationImageSrc": {
          "description": "Ссылка на логотип операции",
          "type": "string"
        },
        "isRegular": {
          "description": "Шаблон запланирован на автоматическое выполнение",
          "type": "boolean"
        },
        "isHistoryAvailable": {
          "description": "Шаблон имеет историю выполнения",
          "type": "boolean"
        },
        "operation": {
          "$ref": "#/definitions/Operation",
          "description": "Operation"
        },
        "categoryID": {
          "description": "ID категории шаблона",
          "type": "string"
        },
        "parentCategoryID": {
          "description": "ID родительской категории шаблона",
          "type": "string"
        },
        "sum": {
          "format": "double",
          "description": "Сумма по шаблону",
          "type": "number"
        },
        "channels": {
          "format": "int32",
          "description": "Каналы доступа (1 = Phone , 2 = WWW , 4 = Mobile , 8 = SMS , 16 = Kiosk , 32 = MobileApp , 64 = TabletApp , 128 = InternetBank , 256 = Manager , 512 = WebManager , 1024 = BankAtWork , 2048 = MobileAppNew , 4096 = AtmViaProvider , 6398 = ActualClientChannels , 8192 = MobileNetwork , 16384 = Partner , 32767 = AllChannels )",
          "enum": [
            1,
            2,
            4,
            8,
            16,
            32,
            64,
            128,
            256,
            512,
            1024,
            2048,
            4096,
            6398,
            8192,
            16384,
            32767
          ],
          "type": "integer"
        },
        "templateParams": {
          "description": "Параметры шаблона",
          "type": "array",
          "items": { "$ref": "#/definitions/ScenarioParam" }
        }
      }
    },
    "UntypedSchedule": {
      "description": "Нетипизированное представление графика.",
      "type": "object",
      "properties": {
        "scheduleId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": "Тип расписания (1 = Day , 2 = MonthDay , 3 = Weekdays , 4 = Month , 5 = MonthWeekday , 22 = Dayly , 33 = Weekly , 44 = Monthly , 55 = MonthlyWeekday )",
          "enum": [1, 2, 3, 4, 5, 22, 33, 44, 55],
          "type": "integer"
        },
        "startDate": {
          "format": "date-time",
          "description": "Дата начала действия расписания",
          "type": "string"
        },
        "description": { "description": "Описание", "type": "string" },
        "monthDay": {
          "format": "int32",
          "description": "День месяца (2 = Day2 , 3 = Day3 , 4 = Day4 , 5 = Day5 , 6 = Day6 , 7 = Day7 , 8 = Day8 , 9 = Day9 , 10 = Day10 , 11 = Day11 , 12 = Day12 , 13 = Day13 , 14 = Day14 , 15 = Day15 , 16 = Day16 , 17 = Day17 , 18 = Day18 , 19 = Day19 , 20 = Day20 , 21 = Day21 , 22 = Day22 , 23 = Day23 , 24 = Day24 , 25 = Day25 , 26 = Day26 , 27 = Day27 , 28 = Day28 , 29 = Day29 , 30 = Day30 , 31 = Day31 )",
          "enum": [
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31
          ],
          "type": "integer"
        },
        "endDate": {
          "format": "date-time",
          "description": "Дата завершения действия расписания",
          "type": "string"
        },
        "maxCount": {
          "format": "int32",
          "description": "Максимальное число выполнений по расписанию",
          "type": "integer"
        },
        "maxCountRestriction": {
          "description": "Ограничение на максимальное число выполнений по расписанию",
          "type": "boolean"
        },
        "weekNumber": {
          "format": "int32",
          "description": "Периодичность подсчета Каждую N неделю (2 = Week2 , 3 = Week3 , 4 = Week4 , 5 = Week5 , 6 = Week6 , 7 = Week7 , 8 = Week8 , 9 = Week9 )",
          "enum": [2, 3, 4, 5, 6, 7, 8, 9],
          "type": "integer"
        },
        "monthNumber": {
          "format": "int32",
          "description": "Периодичность каждый N месяц (2 = Month2 , 3 = Month3 , 4 = Month4 , 5 = Month5 , 6 = Month6 , 7 = Month7 , 8 = Month8 , 9 = Month9 , 10 = Month10 , 11 = Month11 , 12 = Month12 )",
          "enum": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
          "type": "integer"
        },
        "weekdays": {
          "description": "Дни недели",
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [1, 2, 3, 4, 5, 6, 7],
            "type": "integer"
          }
        },
        "dayNumber": {
          "format": "int32",
          "description": "День месяца (1 = Day1 , 2 = Day2 , 3 = Day3 , 4 = Day4 , 5 = Day5 , 6 = Day6 , 7 = Day7 , 8 = Day8 , 9 = Day9 , 10 = Day10 , 11 = Day11 , 12 = Day12 , 13 = Day13 , 14 = Day14 , 15 = Day15 , 16 = Day16 , 17 = Day17 , 18 = Day18 , 19 = Day19 , 20 = Day20 , 21 = Day21 , 22 = Day22 , 23 = Day23 , 24 = Day24 , 25 = Day25 , 26 = Day26 , 27 = Day27 , 28 = Day28 , 29 = Day29 , 30 = Day30 )",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30
          ],
          "type": "integer"
        },
        "dayNumberDirection": {
          "format": "int32",
          "description": "Направление подсчета дня месяца (1 = Forward , 2 = Backward )",
          "enum": [1, 2],
          "type": "integer"
        },
        "monthWeekNumber": {
          "format": "int32",
          "description": "Периодичность подсчета Каждую N неделю (1 = Week1 , 2 = Week2 , 3 = Week3 , 4 = Week4 )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "weekday": {
          "format": "int32",
          "description": "День недели (1 = Sunday , 2 = Monday , 3 = Tuesday , 4 = Wednesday , 5 = Thursday , 6 = Friday , 7 = Saturday )",
          "enum": [1, 2, 3, 4, 5, 6, 7],
          "type": "integer"
        },
        "asDaySchedule": {
          "$ref": "#/definitions/DaySchedule",
          "description": "",
          "readOnly": true
        },
        "asMonthDaySchedule": {
          "$ref": "#/definitions/MonthDaySchedule",
          "description": "",
          "readOnly": true
        },
        "asWeekdaysSchedule": {
          "$ref": "#/definitions/WeekdaysSchedule",
          "description": "",
          "readOnly": true
        },
        "asMonthSchedule": {
          "$ref": "#/definitions/MonthSchedule",
          "description": "",
          "readOnly": true
        },
        "asMonthWeekdaySchedule": {
          "$ref": "#/definitions/MonthWeekdaySchedule",
          "description": "",
          "readOnly": true
        },
        "asDaylySchedule": {
          "$ref": "#/definitions/DaylySchedule",
          "description": "",
          "readOnly": true
        },
        "asWeeklySchedule": {
          "$ref": "#/definitions/WeeklySchedule",
          "description": "",
          "readOnly": true
        },
        "asMonthlySchedule": {
          "$ref": "#/definitions/MonthlySchedule",
          "description": "",
          "readOnly": true
        },
        "asMonthlyWeekdaySchedule": {
          "$ref": "#/definitions/MonthlyWeekdaySchedule",
          "description": "",
          "readOnly": true
        }
      }
    },
    "AliasRetailParameter": {
      "description": "Определяет соответствие алиас/псевдоним параметру операции",
      "type": "object",
      "properties": {
        "aliasName": { "description": "Псевдоним", "type": "string" },
        "retailParameter": {
          "description": "Идентификатор параметра операции",
          "type": "string"
        }
      }
    },
    "AliasInfo": {
      "description": "Определяет алиас/псевдоним параметра операции",
      "type": "object",
      "properties": {
        "aliasName": { "description": "Псевдоним", "type": "string" },
        "retailParameter": {
          "description": "Идентификатор параметра операции",
          "type": "string"
        },
        "caption": { "description": "Заголовок", "type": "string" },
        "detailsFormIndex": {
          "description": "Индекс на форме детальной информации",
          "type": "string"
        },
        "format": { "description": "Информация о формате", "type": "string" },
        "aliasType": { "description": "Информация о типе", "type": "string" },
        "extraInfo": {
          "description": "Дополнительная информация",
          "type": "string"
        }
      }
    },
    "DaySchedule": {
      "description": "Разовое выполнение в конкретную дату",
      "type": "object",
      "properties": {
        "scheduleId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": "Тип расписания (1 = Day , 2 = MonthDay , 3 = Weekdays , 4 = Month , 5 = MonthWeekday , 22 = Dayly , 33 = Weekly , 44 = Monthly , 55 = MonthlyWeekday )",
          "enum": [1, 2, 3, 4, 5, 22, 33, 44, 55],
          "type": "integer"
        },
        "startDate": {
          "format": "date-time",
          "description": "Дата начала действия расписания",
          "type": "string"
        },
        "description": { "description": "Описание", "type": "string" }
      }
    },
    "MonthDaySchedule": {
      "description": "Периодическое выполнение с периодом \"день\"",
      "type": "object",
      "properties": {
        "monthDay": {
          "format": "int32",
          "description": "День месяца (2 = Day2 , 3 = Day3 , 4 = Day4 , 5 = Day5 , 6 = Day6 , 7 = Day7 , 8 = Day8 , 9 = Day9 , 10 = Day10 , 11 = Day11 , 12 = Day12 , 13 = Day13 , 14 = Day14 , 15 = Day15 , 16 = Day16 , 17 = Day17 , 18 = Day18 , 19 = Day19 , 20 = Day20 , 21 = Day21 , 22 = Day22 , 23 = Day23 , 24 = Day24 , 25 = Day25 , 26 = Day26 , 27 = Day27 , 28 = Day28 , 29 = Day29 , 30 = Day30 , 31 = Day31 )",
          "enum": [
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31
          ],
          "type": "integer"
        },
        "endDate": {
          "format": "date-time",
          "description": "Дата завершения действия расписания",
          "type": "string"
        },
        "maxCount": {
          "format": "int32",
          "description": "Максимальное число выполнений по расписанию",
          "type": "integer"
        },
        "maxCountRestriction": {
          "description": "Ограничение на максимальное число выполнений по расписанию",
          "type": "boolean"
        },
        "scheduleId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": "Тип расписания (1 = Day , 2 = MonthDay , 3 = Weekdays , 4 = Month , 5 = MonthWeekday , 22 = Dayly , 33 = Weekly , 44 = Monthly , 55 = MonthlyWeekday )",
          "enum": [1, 2, 3, 4, 5, 22, 33, 44, 55],
          "type": "integer"
        },
        "startDate": {
          "format": "date-time",
          "description": "Дата начала действия расписания",
          "type": "string"
        },
        "description": { "description": "Описание", "type": "string" }
      }
    },
    "WeekdaysSchedule": {
      "description": "Периодическое выполнение с периодом \"неделя\"",
      "type": "object",
      "properties": {
        "weekNumber": {
          "format": "int32",
          "description": "Периодичность подсчета Каждую N неделю (2 = Week2 , 3 = Week3 , 4 = Week4 , 5 = Week5 , 6 = Week6 , 7 = Week7 , 8 = Week8 , 9 = Week9 )",
          "enum": [2, 3, 4, 5, 6, 7, 8, 9],
          "type": "integer"
        },
        "weekdays": {
          "description": "Дни недели",
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [1, 2, 3, 4, 5, 6, 7],
            "type": "integer"
          }
        },
        "endDate": {
          "format": "date-time",
          "description": "Дата завершения действия расписания",
          "type": "string"
        },
        "maxCount": {
          "format": "int32",
          "description": "Максимальное число выполнений по расписанию",
          "type": "integer"
        },
        "maxCountRestriction": {
          "description": "Ограничение на максимальное число выполнений по расписанию",
          "type": "boolean"
        },
        "scheduleId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": "Тип расписания (1 = Day , 2 = MonthDay , 3 = Weekdays , 4 = Month , 5 = MonthWeekday , 22 = Dayly , 33 = Weekly , 44 = Monthly , 55 = MonthlyWeekday )",
          "enum": [1, 2, 3, 4, 5, 22, 33, 44, 55],
          "type": "integer"
        },
        "startDate": {
          "format": "date-time",
          "description": "Дата начала действия расписания",
          "type": "string"
        },
        "description": { "description": "Описание", "type": "string" }
      }
    },
    "MonthSchedule": {
      "description": "Периодическое выполнение с периодом \"месяц\" - фиксированный день месяца",
      "type": "object",
      "properties": {
        "monthNumber": {
          "format": "int32",
          "description": "Периодичность каждый N месяц (2 = Month2 , 3 = Month3 , 4 = Month4 , 5 = Month5 , 6 = Month6 , 7 = Month7 , 8 = Month8 , 9 = Month9 , 10 = Month10 , 11 = Month11 , 12 = Month12 )",
          "enum": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
          "type": "integer"
        },
        "dayNumber": {
          "format": "int32",
          "description": "День месяца (1 = Day1 , 2 = Day2 , 3 = Day3 , 4 = Day4 , 5 = Day5 , 6 = Day6 , 7 = Day7 , 8 = Day8 , 9 = Day9 , 10 = Day10 , 11 = Day11 , 12 = Day12 , 13 = Day13 , 14 = Day14 , 15 = Day15 , 16 = Day16 , 17 = Day17 , 18 = Day18 , 19 = Day19 , 20 = Day20 , 21 = Day21 , 22 = Day22 , 23 = Day23 , 24 = Day24 , 25 = Day25 , 26 = Day26 , 27 = Day27 , 28 = Day28 , 29 = Day29 , 30 = Day30 )",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30
          ],
          "type": "integer"
        },
        "dayNumberDirection": {
          "format": "int32",
          "description": "Направление подсчета дня месяца (1 = Forward , 2 = Backward )",
          "enum": [1, 2],
          "type": "integer"
        },
        "endDate": {
          "format": "date-time",
          "description": "Дата завершения действия расписания",
          "type": "string"
        },
        "maxCount": {
          "format": "int32",
          "description": "Максимальное число выполнений по расписанию",
          "type": "integer"
        },
        "maxCountRestriction": {
          "description": "Ограничение на максимальное число выполнений по расписанию",
          "type": "boolean"
        },
        "scheduleId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": "Тип расписания (1 = Day , 2 = MonthDay , 3 = Weekdays , 4 = Month , 5 = MonthWeekday , 22 = Dayly , 33 = Weekly , 44 = Monthly , 55 = MonthlyWeekday )",
          "enum": [1, 2, 3, 4, 5, 22, 33, 44, 55],
          "type": "integer"
        },
        "startDate": {
          "format": "date-time",
          "description": "Дата начала действия расписания",
          "type": "string"
        },
        "description": { "description": "Описание", "type": "string" }
      }
    },
    "MonthWeekdaySchedule": {
      "description": "Периодическое выполнение с периодом \"месяц\" - определенный день недели",
      "type": "object",
      "properties": {
        "monthNumber": {
          "format": "int32",
          "description": "Периодичность каждый N месяц (2 = Month2 , 3 = Month3 , 4 = Month4 , 5 = Month5 , 6 = Month6 , 7 = Month7 , 8 = Month8 , 9 = Month9 , 10 = Month10 , 11 = Month11 , 12 = Month12 )",
          "enum": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
          "type": "integer"
        },
        "monthWeekNumber": {
          "format": "int32",
          "description": "Периодичность подсчета Каждую N неделю (1 = Week1 , 2 = Week2 , 3 = Week3 , 4 = Week4 )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "weekday": {
          "format": "int32",
          "description": "День недели (1 = Sunday , 2 = Monday , 3 = Tuesday , 4 = Wednesday , 5 = Thursday , 6 = Friday , 7 = Saturday )",
          "enum": [1, 2, 3, 4, 5, 6, 7],
          "type": "integer"
        },
        "endDate": {
          "format": "date-time",
          "description": "Дата завершения действия расписания",
          "type": "string"
        },
        "maxCount": {
          "format": "int32",
          "description": "Максимальное число выполнений по расписанию",
          "type": "integer"
        },
        "maxCountRestriction": {
          "description": "Ограничение на максимальное число выполнений по расписанию",
          "type": "boolean"
        },
        "scheduleId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": "Тип расписания (1 = Day , 2 = MonthDay , 3 = Weekdays , 4 = Month , 5 = MonthWeekday , 22 = Dayly , 33 = Weekly , 44 = Monthly , 55 = MonthlyWeekday )",
          "enum": [1, 2, 3, 4, 5, 22, 33, 44, 55],
          "type": "integer"
        },
        "startDate": {
          "format": "date-time",
          "description": "Дата начала действия расписания",
          "type": "string"
        },
        "description": { "description": "Описание", "type": "string" }
      }
    },
    "DaylySchedule": {
      "description": "Периодическое выполнение с периодом каждый день",
      "type": "object",
      "properties": {
        "endDate": {
          "format": "date-time",
          "description": "Дата завершения действия расписания",
          "type": "string"
        },
        "maxCount": {
          "format": "int32",
          "description": "Максимальное число выполнений по расписанию",
          "type": "integer"
        },
        "maxCountRestriction": {
          "description": "Ограничение на максимальное число выполнений по расписанию",
          "type": "boolean"
        },
        "scheduleId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": "Тип расписания (1 = Day , 2 = MonthDay , 3 = Weekdays , 4 = Month , 5 = MonthWeekday , 22 = Dayly , 33 = Weekly , 44 = Monthly , 55 = MonthlyWeekday )",
          "enum": [1, 2, 3, 4, 5, 22, 33, 44, 55],
          "type": "integer"
        },
        "startDate": {
          "format": "date-time",
          "description": "Дата начала действия расписания",
          "type": "string"
        },
        "description": { "description": "Описание", "type": "string" }
      }
    },
    "WeeklySchedule": {
      "description": "Периодическое выполнение с периодом каждая неделя",
      "type": "object",
      "properties": {
        "weekdays": {
          "description": "Дни недели",
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [1, 2, 3, 4, 5, 6, 7],
            "type": "integer"
          }
        },
        "endDate": {
          "format": "date-time",
          "description": "Дата завершения действия расписания",
          "type": "string"
        },
        "maxCount": {
          "format": "int32",
          "description": "Максимальное число выполнений по расписанию",
          "type": "integer"
        },
        "maxCountRestriction": {
          "description": "Ограничение на максимальное число выполнений по расписанию",
          "type": "boolean"
        },
        "scheduleId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": "Тип расписания (1 = Day , 2 = MonthDay , 3 = Weekdays , 4 = Month , 5 = MonthWeekday , 22 = Dayly , 33 = Weekly , 44 = Monthly , 55 = MonthlyWeekday )",
          "enum": [1, 2, 3, 4, 5, 22, 33, 44, 55],
          "type": "integer"
        },
        "startDate": {
          "format": "date-time",
          "description": "Дата начала действия расписания",
          "type": "string"
        },
        "description": { "description": "Описание", "type": "string" }
      }
    },
    "MonthlySchedule": {
      "description": "Периодическое выполнение с периодом каждый месяц",
      "type": "object",
      "properties": {
        "dayNumber": {
          "format": "int32",
          "description": "День месяца (1 = Day1 , 2 = Day2 , 3 = Day3 , 4 = Day4 , 5 = Day5 , 6 = Day6 , 7 = Day7 , 8 = Day8 , 9 = Day9 , 10 = Day10 , 11 = Day11 , 12 = Day12 , 13 = Day13 , 14 = Day14 , 15 = Day15 , 16 = Day16 , 17 = Day17 , 18 = Day18 , 19 = Day19 , 20 = Day20 , 21 = Day21 , 22 = Day22 , 23 = Day23 , 24 = Day24 , 25 = Day25 , 26 = Day26 , 27 = Day27 , 28 = Day28 , 29 = Day29 , 30 = Day30 )",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30
          ],
          "type": "integer"
        },
        "dayNumberDirection": {
          "format": "int32",
          "description": "Направление подсчета дня месяца (1 = Forward , 2 = Backward )",
          "enum": [1, 2],
          "type": "integer"
        },
        "endDate": {
          "format": "date-time",
          "description": "Дата завершения действия расписания",
          "type": "string"
        },
        "maxCount": {
          "format": "int32",
          "description": "Максимальное число выполнений по расписанию",
          "type": "integer"
        },
        "maxCountRestriction": {
          "description": "Ограничение на максимальное число выполнений по расписанию",
          "type": "boolean"
        },
        "scheduleId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": "Тип расписания (1 = Day , 2 = MonthDay , 3 = Weekdays , 4 = Month , 5 = MonthWeekday , 22 = Dayly , 33 = Weekly , 44 = Monthly , 55 = MonthlyWeekday )",
          "enum": [1, 2, 3, 4, 5, 22, 33, 44, 55],
          "type": "integer"
        },
        "startDate": {
          "format": "date-time",
          "description": "Дата начала действия расписания",
          "type": "string"
        },
        "description": { "description": "Описание", "type": "string" }
      }
    },
    "MonthlyWeekdaySchedule": {
      "description": "Периодическое выполнение с периодом \"месяц\" - определенный день недели",
      "type": "object",
      "properties": {
        "monthWeekNumber": {
          "format": "int32",
          "description": "Периодичность подсчета Каждую N неделю (1 = Week1 , 2 = Week2 , 3 = Week3 , 4 = Week4 )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "weekday": {
          "format": "int32",
          "description": "День недели (1 = Sunday , 2 = Monday , 3 = Tuesday , 4 = Wednesday , 5 = Thursday , 6 = Friday , 7 = Saturday )",
          "enum": [1, 2, 3, 4, 5, 6, 7],
          "type": "integer"
        },
        "endDate": {
          "format": "date-time",
          "description": "Дата завершения действия расписания",
          "type": "string"
        },
        "maxCount": {
          "format": "int32",
          "description": "Максимальное число выполнений по расписанию",
          "type": "integer"
        },
        "maxCountRestriction": {
          "description": "Ограничение на максимальное число выполнений по расписанию",
          "type": "boolean"
        },
        "scheduleId": {
          "format": "int32",
          "description": "Идентификатор",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": "Тип расписания (1 = Day , 2 = MonthDay , 3 = Weekdays , 4 = Month , 5 = MonthWeekday , 22 = Dayly , 33 = Weekly , 44 = Monthly , 55 = MonthlyWeekday )",
          "enum": [1, 2, 3, 4, 5, 22, 33, 44, 55],
          "type": "integer"
        },
        "startDate": {
          "format": "date-time",
          "description": "Дата начала действия расписания",
          "type": "string"
        },
        "description": { "description": "Описание", "type": "string" }
      }
    },
    "PopularClientTemplateInfo": {
      "description": "Информация о популярном (часто используемом) шаблоне клиента.",
      "type": "object",
      "properties": {
        "operationTemplateId": {
          "format": "int32",
          "description": "Идентификатор шаблона клиента.",
          "type": "integer"
        },
        "isFavourite": {
          "description": "Является любимым шаблоном.",
          "type": "boolean"
        },
        "name": {
          "description": "Имя шаблона (короткое если установлено и полное если нет).",
          "type": "string"
        },
        "operationImageSrc": {
          "description": "Ссылка на логотип операции.",
          "type": "string"
        },
        "templateCode": {
          "format": "int32",
          "description": "Код шаблона",
          "type": "integer"
        },
        "operationCode": {
          "format": "int32",
          "description": "Код операции",
          "type": "integer"
        }
      }
    },
    "PlanParams": {
      "description": "План исполнения",
      "type": "object",
      "properties": {
        "executed": { "description": "Только исполненые", "type": "boolean" },
        "planned": {
          "description": "Только запланированные",
          "type": "boolean"
        },
        "pageParams": {
          "$ref": "#/definitions/PageParams",
          "description": "Page params"
        },
        "periodParams": {
          "$ref": "#/definitions/PeriodParams",
          "description": "Period"
        }
      }
    },
    "ExecutionPlan": {
      "description": "План исполнения",
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/Template",
          "description": "Шаблон"
        },
        "description": { "description": "Описание", "type": "string" },
        "plannedDate": {
          "format": "date-time",
          "description": "Дата планируемая",
          "type": "string"
        },
        "request": {
          "$ref": "#/definitions/Request",
          "description": "Поручение"
        },
        "state": {
          "format": "int32",
          "description": "Состояние (1 = Executed , 2 = Planned , 3 = Error )",
          "enum": [1, 2, 3],
          "type": "integer"
        }
      }
    },
    "FormItem": {
      "description": "Описание элемента формы",
      "type": "object",
      "properties": {
        "itemId": {
          "format": "int32",
          "description": "Идентификатор элемента",
          "type": "integer"
        },
        "parentItemId": {
          "format": "int32",
          "description": "Идентификатор родительского элемента",
          "type": "integer"
        },
        "order": {
          "format": "int32",
          "description": "Порядок",
          "type": "integer"
        },
        "name": { "description": "Название элемента", "type": "string" },
        "description": { "description": "Описание элемента", "type": "string" },
        "help": { "description": "Подсказка для элемента", "type": "string" },
        "isVisible": { "description": "Элемент видимый", "type": "boolean" },
        "isEnabled": { "description": "Элемент разрешен", "type": "boolean" },
        "image": { "description": "Картинка для элемента", "type": "string" },
        "attributes": {
          "description": "Атрибуты элемента",
          "type": "array",
          "items": { "$ref": "#/definitions/FormItemAttribute" }
        },
        "subItems": {
          "description": "Подэлементы",
          "type": "array",
          "items": { "$ref": "#/definitions/FormItem" }
        },
        "actions": {
          "description": "Действия",
          "type": "array",
          "items": { "$ref": "#/definitions/FormItemAction" }
        }
      }
    },
    "FormItemAttribute": {
      "description": "Атрибут элемента формы",
      "type": "object",
      "properties": {
        "key": { "description": "Ключ", "type": "string" },
        "value": { "description": "Значение", "type": "string" }
      }
    },
    "FormItemAction": {
      "description": "Действия ассоциированные с элементом формы",
      "type": "object",
      "properties": {
        "sourceEventType": {
          "format": "int32",
          "description": "Тип исходного события (1 = OnClick )",
          "enum": [1],
          "type": "integer"
        },
        "action": {
          "format": "int32",
          "description": "Название действия (1 = FetchNext , 2 = StartRetailOperation , 3 = GoBack , 4 = StartTemplateOperation )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "params": {
          "description": "Параметры действия",
          "type": "array",
          "items": { "$ref": "#/definitions/FormItemActionParam" }
        }
      }
    },
    "FormItemActionParam": {
      "description": "Параметр действия",
      "type": "object",
      "properties": {
        "key": { "description": "Ключ", "type": "string" },
        "value": { "description": "Значение", "type": "string" }
      }
    },
    "OperationHistoryItem": {
      "description": "",
      "type": "object",
      "properties": {
        "cardTransaction": {
          "$ref": "#/definitions/TransactionData",
          "description": "Транзакции с карт"
        },
        "ibOperation": {
          "$ref": "#/definitions/Request",
          "description": "Операции из ретейла"
        }
      }
    },
    "TransactionData": {
      "description": "Данные транзакции",
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/Request",
          "description": "Поручение"
        },
        "valueDate": {
          "format": "date-time",
          "description": "Дата валютирования",
          "type": "string"
        },
        "transactionDate": {
          "format": "date-time",
          "description": "Дата проводки",
          "type": "string"
        },
        "ground": { "description": "Основание (назначение)", "type": "string" },
        "transactionSum": {
          "format": "double",
          "description": "Сумма транзакции",
          "type": "number"
        },
        "transactionCurrency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта транзакции"
        },
        "isProcessed": {
          "description": "Завершенная транзакция",
          "type": "boolean"
        },
        "commissionSum": {
          "format": "double",
          "description": "Комиссия",
          "type": "number"
        },
        "mcc": { "description": "Код торговой категории", "type": "string" },
        "mccImageSrc": {
          "description": "Ссылка на картинку кода торговой категории",
          "type": "string"
        },
        "account": {
          "$ref": "#/definitions/TransactionAccountData",
          "description": "Информация по счету"
        }
      }
    },
    "TransactionAccountData": {
      "description": "Транзакции клиента (PFA)",
      "type": "object",
      "properties": {
        "accountNumber": { "description": "Номер счета", "type": "string" },
        "accountName": {
          "description": "Наименование счета",
          "type": "string"
        },
        "accountID": {
          "format": "int64",
          "description": "Идентификатор счета",
          "type": "integer"
        },
        "cardNumber": { "description": "Номер карты", "type": "string" },
        "cardID": {
          "format": "int64",
          "description": "Идентификатор карты",
          "type": "integer"
        },
        "openDate": {
          "format": "date-time",
          "description": "Дата открытия контракта",
          "type": "string"
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта счета/карты"
        },
        "transactionType": {
          "format": "int32",
          "description": "Тип счета, по которому проведена транзакция (1 = RetailAccount , 2 = CardAccount )",
          "enum": [1, 2],
          "type": "integer"
        },
        "transactionsList": {
          "description": "Список транзакций по карте/счету",
          "type": "array",
          "items": { "$ref": "#/definitions/TransactionData" }
        }
      }
    },
    "TransactionSummary": {
      "description": "Суммарные доходы/расходы",
      "type": "object",
      "properties": {
        "incomes": {
          "format": "double",
          "description": "Сумма доходов",
          "type": "number"
        },
        "expences": {
          "format": "double",
          "description": "Сумма расходов",
          "type": "number"
        }
      }
    },
    "TrustManagementContractInfo": {
      "description": "Договор ИИС ДУ",
      "type": "object",
      "properties": {
        "contract": {
          "$ref": "#/definitions/TrustManagementContract",
          "description": "Договор ИИС ДУ"
        },
        "product": {
          "$ref": "#/definitions/ProductCommonInfo",
          "description": "Продукт ДУ в рамках договора"
        },
        "documents": {
          "$ref": "#/definitions/RequestsForDocuments",
          "description": "Документы по договору"
        },
        "operations": {
          "description": "Операции по договору",
          "type": "array",
          "items": { "$ref": "#/definitions/TrustManagementOperation" }
        },
        "contractIncome": {
          "$ref": "#/definitions/TrustManagementContractIncomeData",
          "description": "Информация по стоимости активов, доходности и т.д."
        },
        "state": {
          "format": "int32",
          "description": "Состояние в разрезе наличия Согласия и данных от УК (1 = IiaTrustHasAgreementHasData , 2 = IiaTrustHasAgreementHasNotData , 3 = IiaTrustHasNotAgreement )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "disclaimer": { "description": "Дисклеймер", "type": "string" },
        "trustManagementKind": {
          "description": "Название вида ДУ",
          "type": "string"
        },
        "isReplenishmentEnabled": {
          "description": "Флаг доступности пополнения",
          "type": "boolean"
        }
      }
    },
    "RequestsForDocuments": {
      "description": "Структура данных для передачи ИД поручений, из которых необходимо получить документы для показа на клиенте",
      "type": "object",
      "properties": {
        "requestIdList": {
          "description": "ID поручений, документы из которых нужно получить",
          "type": "array",
          "items": { "format": "int64", "type": "integer" }
        },
        "documentTypeIdForExclusionList": {
          "description": "Типы документов, исключаемых для показа клиенту",
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        }
      }
    },
    "ShowCaseInfo": {
      "description": "Инфо по фондам для витрины",
      "type": "object",
      "properties": {
        "fundsData": {
          "description": "Данные по фондам",
          "type": "array",
          "items": { "$ref": "#/definitions/ShowCaseFundInfo" }
        },
        "riskLevelHint": {
          "description": "Подсказка по уровню риска",
          "type": "string"
        },
        "fundYieldHint": {
          "description": "Подсказка по доходности",
          "type": "string"
        },
        "disclaimer": { "description": "Дисклеймер", "type": "string" },
        "recommendedFunds": {
          "description": "Список рекомендованных фондов",
          "type": "array",
          "items": { "$ref": "#/definitions/ShowCaseFundInfo" }
        },
        "recommendedTitle": {
          "description": "Заголовок раздела \"рекомендованные фонды\"",
          "type": "string"
        }
      }
    },
    "ShowCaseFundInfo": {
      "description": "Инфо по фонду для витрины",
      "type": "object",
      "properties": {
        "fundData": {
          "$ref": "#/definitions/FundData",
          "description": "Данные по фонду"
        },
        "bestPeriodIncome": {
          "format": "double",
          "description": "Доходность",
          "type": "number"
        },
        "bestPeriodName": {
          "description": "Наименование лучшего по доходности периода",
          "type": "string"
        },
        "bestPeriod": {
          "format": "int32",
          "description": "Период (2 = Month , 6 = Year , 7 = ThreeYear , 8 = FiveYear , 9 = EntireLife )",
          "enum": [2, 6, 7, 8, 9],
          "type": "integer"
        }
      }
    },
    "FundData": {
      "description": "Информация по фонду",
      "type": "object",
      "properties": {
        "fundId": {
          "format": "int32",
          "description": "Идентификатор фонда",
          "type": "integer"
        },
        "name": { "description": "Наименование", "type": "string" },
        "shortName": {
          "description": "Краткое наименование",
          "type": "string"
        },
        "description": { "description": "Описание", "type": "string" },
        "shareValue": {
          "format": "double",
          "description": "Стоимость пая",
          "type": "number"
        },
        "fundCurrency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта фонда"
        },
        "shareValueDate": {
          "format": "date-time",
          "description": "Дата, на которую указана стоимость пая",
          "type": "string"
        },
        "netAssetValue": {
          "format": "double",
          "description": "Стоимость чистых активов",
          "type": "number"
        },
        "riskLevel": {
          "format": "int32",
          "description": "Уровень риска (1 = Low , 2 = Average , 3 = High )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "minSum": {
          "$ref": "#/definitions/PurchaseSum",
          "description": "Минимальная сумма покупки"
        },
        "iconUrl": { "description": "Иконка фонда", "type": "string" },
        "backgroundUrl": {
          "description": "Фоновая картинка фонда",
          "type": "string"
        },
        "disclaimer": { "description": "Дисклеймер", "type": "string" },
        "primaryAssetsType": {
          "format": "int32",
          "description": "Основной тип активов (1 = Shares , 2 = Bonds , 3 = Mixed , 4 = Metals )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "assetsLocation": {
          "format": "int32",
          "description": "Рынок инвестирования (1 = Russia , 2 = International )",
          "enum": [1, 2],
          "type": "integer"
        },
        "periods": {
          "$ref": "#/definitions/FundIncome",
          "description": "Доходность по периодам"
        },
        "isOperationsEnabled": {
          "description": "Доступность операций (покупка\\продажа) по фонду",
          "type": "boolean"
        }
      }
    },
    "FundIncome": {
      "description": "Доходность фонда по периодам",
      "type": "object",
      "properties": {
        "fundIncomePeriods": {
          "description": "Значение",
          "type": "array",
          "items": { "$ref": "#/definitions/FundIncomePeriod" }
        },
        "bestPeriod": {
          "format": "int32",
          "description": "ID лучшего периода для фонда (2 = Month , 6 = Year , 7 = ThreeYear , 8 = FiveYear , 9 = EntireLife )",
          "enum": [2, 6, 7, 8, 9],
          "type": "integer"
        },
        "bestPeriodName": {
          "description": "Наименование лучшего периода для фонда",
          "type": "string"
        }
      }
    },
    "FundIncomePeriod": {
      "description": "Доходность фонда за период",
      "type": "object",
      "properties": {
        "value": {
          "format": "double",
          "description": "Значение",
          "type": "number"
        },
        "date": {
          "format": "date-time",
          "description": "Дата",
          "type": "string"
        },
        "fundId": {
          "format": "int32",
          "description": "ID фонда",
          "type": "integer"
        },
        "periodId": {
          "format": "int32",
          "description": "Id периода",
          "type": "integer"
        },
        "periodName": {
          "description": "Наименование периода",
          "type": "string"
        },
        "isTheBest": {
          "description": "Флаг лучшего периода для фонда",
          "type": "boolean"
        },
        "daysInPeriod": {
          "format": "int32",
          "description": "Кол-во дней в периоде",
          "type": "integer"
        }
      }
    },
    "UnitTrustFunds": {
      "description": "Информация по ПИФ",
      "type": "object",
      "properties": {
        "funds": {
          "description": "Список фондов",
          "type": "array",
          "items": { "$ref": "#/definitions/FundData" }
        }
      }
    },
    "FullFundData": {
      "description": "Полная Информация по фонду",
      "type": "object",
      "properties": {
        "clientId": {
          "format": "int32",
          "description": "НК",
          "type": "integer"
        },
        "state": {
          "format": "int32",
          "description": "Наличие ЛС, Сошласия, данных (1 = HasNotPersonalAccount , 2 = HasPersonalAccountHasNotAgreement , 3 = HasPersonalAccountHasAgreementHasNotData , 4 = HasPersonalAccountHasAgreementHasData )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "fundId": {
          "format": "int32",
          "description": "ИД фонла",
          "type": "integer"
        },
        "fullName": {
          "description": "Полное наименование фонда",
          "type": "string"
        },
        "minPurchaseSum": {
          "$ref": "#/definitions/PurchaseSum",
          "description": "Минимальная сумма покупки"
        },
        "unitPrice": {
          "$ref": "#/definitions/PurchaseSum",
          "description": "Стоимость пая"
        },
        "actualOnDate": {
          "format": "date-time",
          "description": "Дата на которую актуальны данные",
          "type": "string"
        },
        "netAssetsValue": {
          "$ref": "#/definitions/PurchaseSum",
          "description": "СЧА"
        },
        "bestPeriodValue": {
          "format": "double",
          "description": "Доходность фонда за \"лучший\" период",
          "type": "number"
        },
        "bestPeriodName": {
          "description": "Наименование \"лучшего\" периода",
          "type": "string"
        },
        "bestPeriodId": {
          "format": "int32",
          "description": "ИД \"лучшего\" периода",
          "type": "integer"
        },
        "clientFundAssets": {
          "$ref": "#/definitions/ClientFundIncome",
          "description": "Данные по доходности клиента в этом фонде (елсли у клиента нет паев фонда, будет null)"
        },
        "iconUrl": { "description": "Иконка фонда", "type": "string" },
        "fundCurrency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта фонда"
        },
        "documents": {
          "description": "документы по фонду",
          "type": "array",
          "items": { "$ref": "#/definitions/FundDocument" }
        },
        "sectors": {
          "$ref": "#/definitions/FundSectorStructure",
          "description": "Структура фонда"
        },
        "displayName": {
          "description": "Отображаемое название фонда (Задается в Каталоге продуктов)",
          "type": "string"
        },
        "description": { "description": "Описание фонда", "type": "string" },
        "disclaimer": { "description": "Дисклеймер", "type": "string" },
        "periods": {
          "$ref": "#/definitions/FundIncome",
          "description": "Доходности фонда по периодам"
        },
        "shortName": {
          "description": "Сокр. наименование фонда",
          "type": "string"
        },
        "riskLevel": {
          "format": "int32",
          "description": "Уровень риска (1 = Low , 2 = Average , 3 = High )",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "primaryAssetsType": {
          "format": "int32",
          "description": "Основной тип активов (1 = Shares , 2 = Bonds , 3 = Mixed , 4 = Metals )",
          "enum": [1, 2, 3, 4],
          "type": "integer"
        },
        "assetsLocation": {
          "format": "int32",
          "description": "Рынок инвестирования (1 = Russia , 2 = International )",
          "enum": [1, 2],
          "type": "integer"
        },
        "isOperationsEnabled": {
          "description": "Доступность операций (покупка\\продажа) по фонду",
          "type": "boolean"
        },
        "additionalOperationInfoMessage": {
          "description": "Информационное сообщение по последней покупке",
          "type": "string"
        }
      }
    },
    "ClientFundIncome": {
      "description": "Информация по паям клиента",
      "type": "object",
      "properties": {
        "fundId": {
          "format": "int32",
          "description": "Идентификатор фонда",
          "type": "integer"
        },
        "numberOfShares": {
          "format": "double",
          "description": "Количество паёв",
          "type": "number"
        },
        "totalValue": {
          "$ref": "#/definitions/PurchaseSum",
          "description": "Стоимость паев"
        },
        "valueDelta": {
          "$ref": "#/definitions/PurchaseSum",
          "description": "Изменение по фонду"
        },
        "valueDeltaPercent": {
          "format": "double",
          "description": "Изменение по фонду в процентах",
          "type": "number"
        },
        "incomeHint": { "description": "Подсказка", "type": "string" },
        "operations": {
          "description": "операции",
          "type": "array",
          "items": { "$ref": "#/definitions/ClientFundOperation" }
        },
        "requestId": {
          "format": "int64",
          "description": "ИД последнего поручения на покупку ПИФ",
          "type": "integer"
        },
        "templates": {
          "description": "Регулярные операции",
          "type": "array",
          "items": { "$ref": "#/definitions/Template" }
        }
      }
    },
    "FundSectorStructure": {
      "description": "Элемент структуры фонда в разрезе секторов экономики",
      "type": "object",
      "properties": {
        "fundId": {
          "format": "int32",
          "description": "ID фонда",
          "type": "integer"
        },
        "sectorVolumes": {
          "description": "Состав фонда",
          "type": "array",
          "items": { "$ref": "#/definitions/SectorVolume" }
        }
      }
    },
    "ClientFundOperation": {
      "description": "Операция ПИФ",
      "type": "object",
      "properties": {
        "mcOperationId": {
          "format": "int32",
          "description": "ID",
          "type": "integer"
        },
        "operationNativeId": {
          "description": "ID оперции в УК",
          "type": "string"
        },
        "operationDate": {
          "format": "date-time",
          "description": "Дата операции",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "description": "Статус (1 = InProcessing , 9 = Completed , 10 = Rejected )",
          "enum": [1, 9, 10],
          "type": "integer"
        },
        "statusName": {
          "description": "Наименование статуса",
          "type": "string"
        },
        "typeName": { "description": "Наименование типа", "type": "string" },
        "operationType": {
          "format": "int32",
          "description": "Тип операции (1 = Buy , 2 = Sell )",
          "enum": [1, 2],
          "type": "integer"
        },
        "sum": {
          "format": "double",
          "description": "Сумма опрерации",
          "type": "number"
        },
        "feeSum": {
          "format": "double",
          "description": "Сумма комиссии",
          "type": "number"
        },
        "tax": {
          "format": "double",
          "description": "Сумма налога",
          "type": "number"
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        }
      }
    },
    "SectorVolume": {
      "description": "Элемент структуры фонда в разрезе секторов экономики",
      "type": "object",
      "properties": {
        "name": { "description": "Наименование сектора", "type": "string" },
        "value": {
          "format": "double",
          "description": "Доля сектора в фонде",
          "type": "number"
        },
        "mcSectorId": {
          "format": "int32",
          "description": "ID сектора",
          "type": "integer"
        }
      }
    },
    "FundHistoryData": {
      "description": "Изменение стоимости пая за период",
      "type": "object",
      "properties": {
        "fundId": {
          "format": "int32",
          "description": "Идентификатор фонда",
          "type": "integer"
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Валюта"
        },
        "unitPrices": {
          "description": "Список стоимости пая по датам",
          "type": "array",
          "items": { "$ref": "#/definitions/UnitPrice" }
        },
        "period": {
          "$ref": "#/definitions/FundIncomePeriod",
          "description": "Период"
        }
      }
    },
    "UnitPrice": {
      "description": "Стоимость пая на дату",
      "type": "object",
      "properties": {
        "price": {
          "format": "double",
          "description": "Стоимость пая",
          "type": "number"
        },
        "date": {
          "format": "date-time",
          "description": "Дата",
          "type": "string"
        }
      }
    },
    "ClientUnitTrustInfo": {
      "description": "Информация клиента по ПИФ",
      "type": "object",
      "properties": {
        "hasUnitTrust": {
          "description": "Флаг наличия ПИФ (наличие заявки на открытие ЛС) у клиента",
          "type": "boolean"
        },
        "agreementInfo": {
          "description": "Статус клиента в разрезе согласия, и наличия данных по каждому фонду",
          "type": "array",
          "items": { "$ref": "#/definitions/ClientAgreementFundInfo" }
        }
      }
    },
    "ClientAgreementFundInfo": {
      "description": "Информация по согласию и наличию ЛС",
      "type": "object",
      "properties": {
        "fundId": {
          "format": "int32",
          "description": "ID фонда",
          "type": "integer"
        },
        "hasUnitTrust": {
          "description": "Флаг наличия ПИФ (наличие заявки на открытие ЛС) у клиента",
          "type": "boolean"
        },
        "agreementStatus": {
          "format": "int32",
          "description": "Статус клиента в разрезе согласия и данных (1 = NoAgreement , 2 = NoData , 3 = HasAgreement )",
          "enum": [1, 2, 3],
          "type": "integer"
        }
      }
    },
    "UnitTrustDepositInfo": {
      "description": "Информация по специальному предложению ПИФ + вклад Инвестиционный доход",
      "type": "object",
      "properties": {
        "clientId": {
          "format": "int32",
          "description": "НК",
          "type": "integer"
        },
        "isProposalEnabled": {
          "description": "Отображать или нет предложение",
          "type": "boolean"
        },
        "sum": {
          "$ref": "#/definitions/PurchaseSum",
          "description": "Минимальная сумма, на которую необходимо докупить паев, чтобы можно было открыть вклад"
        },
        "isDepositAvailable": {
          "description": "Доступность вклада",
          "type": "boolean"
        },
        "header": {
          "description": "Заголовок для блока с предложением",
          "type": "string"
        },
        "message": {
          "description": "Текст для блока с предложением",
          "type": "string"
        },
        "rate": {
          "format": "double",
          "description": "Макс. ставка по вкладу",
          "type": "number"
        },
        "messageSum": {
          "description": "Текст с суммой докупки",
          "type": "string"
        },
        "brandCode": {
          "description": "Строковый код(идентификатор) вклада",
          "type": "string"
        }
      }
    },
    "Block": {
      "type": "object",
      "properties": {
        "id": { "format": "int32", "type": "integer" },
        "caption": { "type": "string" },
        "imageUrl": { "type": "string" },
        "isNew": { "type": "boolean" },
        "unWatchedPages": { "format": "int32", "type": "integer" }
      }
    },
    "Page": {
      "type": "object",
      "properties": {
        "id": { "format": "int32", "type": "integer" },
        "caption": { "type": "string" },
        "version": { "type": "string" },
        "date": { "format": "date-time", "type": "string" },
        "isNew": { "type": "boolean" },
        "controls": {
          "type": "array",
          "items": { "$ref": "#/definitions/Control" }
        }
      }
    },
    "Control": {
      "type": "object",
      "properties": {
        "id": { "format": "int32", "type": "integer" },
        "controlTypeId": { "format": "int32", "type": "integer" },
        "content": { "type": "string" }
      }
    },
    "QrCodeTransferRequisites": {
      "description": "реквизиты",
      "type": "object",
      "properties": {
        "personalAcc": { "description": "счет получателя", "type": "string" },
        "bic": { "description": "бик банка получателя", "type": "string" },
        "purpose": { "description": "назначение платежа", "type": "string" },
        "sum": { "description": "сумма в копейках", "type": "string" },
        "name": {
          "description": "наименование получателя платежа",
          "type": "string"
        },
        "kpp": { "description": "кпп получателя", "type": "string" },
        "cbc": { "description": "кбк получателя", "type": "string" },
        "oktmo": { "description": "октмо получателя", "type": "string" },
        "uin": { "description": "уин получателя", "type": "string" },
        "docIdx": {
          "description": "в оплате бюджетного платежа или налоговой вместо УИН указывается параметр DocIdx",
          "type": "string"
        },
        "payeeINN": { "description": "инн получателя", "type": "string" },
        "persAcc": { "description": "номер ЛС", "type": "string" },
        "paymPeriod": { "description": "период оплаты", "type": "string" },
        "taxPeriod": { "description": "период оплаты", "type": "string" }
      }
    },
    "QrCodeParam": {
      "description": "",
      "type": "object",
      "properties": {
        "key": { "description": "", "type": "string" },
        "value": { "description": "", "type": "string" }
      }
    },
    "WikiPayAvailableFeatures": {
      "description": "Доступные функциональные возможности WikiPay",
      "type": "object",
      "properties": {
        "searchAvailable": {
          "description": "Признак доступности поиска WikiPay",
          "type": "boolean"
        },
        "searchByPhoneAvailable": {
          "description": "Признак доступности поиска WikiPay по номеру телефона",
          "type": "boolean"
        },
        "searchByCardNumberAvailable": {
          "description": "Признак доступности поиска WikiPay по номеру карты",
          "type": "boolean"
        },
        "contextSearchAvailable": {
          "description": "Признак доступности поиска WikiPay с учетом контекста",
          "type": "boolean"
        },
        "searchClientByPhoneAvailable": {
          "description": "Признак доступности поиска клиента по номеру телефона",
          "type": "boolean"
        },
        "paymentByQrCodeAvailable": {
          "description": "возможность запуска оперции платежа по qr коду",
          "type": "boolean"
        },
        "ftsEnabled": {
          "description": "быстрые переводы доступны клиенту",
          "type": "boolean"
        }
      }
    }
  },
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "description": "OAuth2 Password Grant",
      "flow": "password",
      "tokenUrl": "/authentication/token",
      "scopes": {}
    }
  }
}
